name: Test Windows 10 SDK Component

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-windows-sdk:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Windows 10 SDK 19041
      shell: powershell
      run: |
        $sdkComponent = "Microsoft.VisualStudio.Component.Windows10SDK.19041"
        Write-Host "Installing $sdkComponent to existing VS 2022 Enterprise"
        
        # Use the VS installer that's already on the system to modify the existing installation
        $vsInstaller = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
        
        # Get the instance ID of the installed VS Enterprise
        $instanceId = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property instanceId
        Write-Host "Modifying VS instance: $instanceId"
        
        # Add the specific SDK component to the existing installation
        Start-Process -FilePath $vsInstaller -ArgumentList "modify", "--installPath", "C:\Program Files\Microsoft Visual Studio\2022\Enterprise", "--add", $sdkComponent, "--quiet" -Wait -PassThru
        
        Write-Host "Installation complete"
    
    - name: Verify Windows 10 SDK 19041
      shell: powershell
      run: |
        $sdkComponent = "Microsoft.VisualStudio.Component.Windows10SDK.19041"
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        
        # Show what SDK components are currently installed
        Write-Host "All Windows SDK components installed:"
        $allSDKs = & $vswherePath -products * -requires Microsoft.VisualStudio.Component.Windows10SDK -format json
        if ($allSDKs -and $allSDKs.Trim() -ne "" -and $allSDKs -ne "[]") {
            Write-Host "Generic Windows10SDK component found"
        } else {
            Write-Host "No Windows SDK components found"
        }
        
        # Check for our specific target component
        Write-Host "Checking for target: $sdkComponent"
        $result = & $vswherePath -latest -products * -requires $sdkComponent -format json
        $componentFound = ($result -and $result.Trim() -ne "" -and $result -ne "[]")
        
        Write-Host "Target component available: $componentFound"
        echo "SDK_AVAILABLE=$componentFound" >> $env:GITHUB_OUTPUT
      id: sdk-check