name: Test Windows 10 SDK Component

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-windows-sdk:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Windows 10 SDK 19041
      shell: powershell
      run: |
        Write-Host "Installing Windows 10 SDK Build 19041 directly from Microsoft"
        
        # Download the Windows 10 SDK installer directly
        $sdkUrl = "https://go.microsoft.com/fwlink/?linkid=2120843"  # Windows 10 SDK 2004 (19041)
        $installerPath = "$env:TEMP\winsdksetup.exe"
        
        Write-Host "Downloading SDK installer..."
        Invoke-WebRequest -Uri $sdkUrl -OutFile $installerPath -UserAgent "Mozilla/5.0"
        
        Write-Host "Installing SDK silently..."
        # Install with minimal features - just what we need for building
        $process = Start-Process -FilePath $installerPath -ArgumentList "/quiet", "/norestart", "/features", "OptionId.WindowsPerformanceToolkit", "OptionId.WindowsDesktopDebuggers", "OptionId.AvrfExternal", "OptionId.NetFxSoftwareDevelopmentKit", "OptionId.WindowsSoftwareLogoToolkit", "OptionId.MSIInstallTools", "OptionId.SigningTools", "OptionId.UWPManaged", "OptionId.UWPCPP", "OptionId.UWPLocalized", "OptionId.DesktopCPPx86", "OptionId.DesktopCPPx64", "OptionId.DesktopCPParm", "OptionId.DesktopCPParm64" -Wait -PassThru
        
        Write-Host "SDK installer exit code: $($process.ExitCode)"
        Write-Host "Installation complete"
    
    - name: Verify Windows 10 SDK 19041
      shell: powershell
      run: |
        $sdkComponent = "Microsoft.VisualStudio.Component.Windows10SDK.19041"
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        
        # Show what SDK components are currently installed
        Write-Host "All Windows SDK components installed:"
        $allSDKs = & $vswherePath -products * -requires Microsoft.VisualStudio.Component.Windows10SDK -format json
        if ($allSDKs -and $allSDKs.Trim() -ne "" -and $allSDKs -ne "[]") {
            Write-Host "Generic Windows10SDK component found"
        } else {
            Write-Host "No Windows SDK components found"
        }
        
        # Check for our specific target component
        Write-Host "Checking for target: $sdkComponent"
        $result = & $vswherePath -latest -products * -requires $sdkComponent -format json
        $componentFound = ($result -and $result.Trim() -ne "" -and $result -ne "[]")
        
        Write-Host "Target component available: $componentFound"
        echo "SDK_AVAILABLE=$componentFound" >> $env:GITHUB_OUTPUT
      id: sdk-check