name: Test Windows 10 SDK Component

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-windows-sdk:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Test for Windows 10 SDK 19041
      shell: powershell
      run: |
        $sdkComponent = "Microsoft.VisualStudio.Component.Windows10SDK.19041"
        $sdkVersion = "10.0.19041.0"
        $componentFound = $false
        $sdkFound = $false
        
        Write-Host "Testing for $sdkComponent"
        
        # Check via vswhere
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        if (Test-Path $vswherePath) {
            Write-Host "Checking via vswhere"
            try {
                $vsInstances = & $vswherePath -latest -products * -requires $sdkComponent -format json | ConvertFrom-Json
                if ($vsInstances -and $vsInstances.Count -gt 0) {
                    Write-Host "Component found in VS installation"
                    $componentFound = $true
                } else {
                    Write-Host "Component not found in VS installation"
                }
            } catch {
                Write-Host "vswhere check failed: $_"
            }
        } else {
            Write-Host "vswhere not found"
        }
        
        # Check SDK files
        $sdkPaths = @(
            "${env:ProgramFiles(x86)}\Windows Kits\10",
            "${env:ProgramFiles}\Windows Kits\10"
        )
        
        foreach ($path in $sdkPaths) {
            if (Test-Path $path) {
                Write-Host "Found Windows Kits at $path"
                $includeDir = Join-Path $path "Include\$sdkVersion"
                $binDir = Join-Path $path "bin\$sdkVersion"
                
                if ((Test-Path $includeDir) -and (Test-Path $binDir)) {
                    Write-Host "Found SDK $sdkVersion files"
                    $sdkFound = $true
                    break
                }
            }
        }
        
        # Check for key tools
        $tools = @("rc.exe", "mt.exe", "lib.exe")
        $toolsFound = 0
        foreach ($tool in $tools) {
            if (Get-Command $tool -ErrorAction SilentlyContinue) {
                $toolsFound++
            }
        }
        
        Write-Host "Tools found: $toolsFound of $($tools.Count)"
        
        # Final result
        $available = $componentFound -or ($sdkFound -and ($toolsFound -ge 2))
        
        Write-Host "SDK Available: $available"
        Write-Host "Component via VS: $componentFound"  
        Write-Host "SDK files found: $sdkFound"
        
        echo "SDK_AVAILABLE=$available" >> $env:GITHUB_OUTPUT
      id: sdk-check
    
    - name: Install SDK if missing
      if: steps.sdk-check.outputs.SDK_AVAILABLE == 'false'
      shell: powershell
      run: |
        Write-Host "SDK component missing - installation needed"
        Write-Host "Options:"
        Write-Host "1. vs_buildtools.exe --add Microsoft.VisualStudio.Component.Windows10SDK.19041"
        Write-Host "2. choco install windows-sdk-10-version-2004-all"
