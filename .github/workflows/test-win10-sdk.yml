name: Test Windows 10 SDK Component

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test-windows-sdk:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Windows 10 SDK 19041
      shell: powershell
      run: |
        Write-Host "Checking what SDK components are available to install..."
        
        # First, let's see what components are available
        $vsInstaller = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe"
        $instanceId = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property instanceId
        
        Write-Host "Available SDK components:"
        # Try different component ID patterns that might work
        $possibleComponents = @(
            "Microsoft.VisualStudio.Component.Windows10SDK.19041",
            "Microsoft.VisualStudio.Component.Windows10SDK.20348", 
            "Microsoft.VisualStudio.Component.Windows11SDK.22000",
            "Microsoft.VisualStudio.Component.Windows11SDK.22621"
        )
        
        foreach ($component in $possibleComponents) {
            Write-Host "Trying to install: $component"
            $process = Start-Process -FilePath $vsInstaller -ArgumentList "modify", "--instanceId", $instanceId, "--add", $component, "--quiet", "--wait" -Wait -PassThru
            Write-Host "  Exit code for $component : $($process.ExitCode)"
            if ($process.ExitCode -eq 0) {
                Write-Host "  SUCCESS: $component installed"
                break
            }
        }
        
        Write-Host "Installation attempts complete"
    
    - name: Verify Windows 10 SDK 19041
      shell: powershell
      run: |
        $sdkComponent = "Microsoft.VisualStudio.Component.Windows10SDK.19041"
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
        
        # Show what SDK components are currently installed
        Write-Host "All Windows SDK components installed:"
        $allSDKs = & $vswherePath -products * -requires Microsoft.VisualStudio.Component.Windows10SDK -format json
        if ($allSDKs -and $allSDKs.Trim() -ne "" -and $allSDKs -ne "[]") {
            Write-Host "Generic Windows10SDK component found"
        } else {
            Write-Host "No Windows SDK components found"
        }
        
        # Check for our specific target component
        Write-Host "Checking for target: $sdkComponent"
        $result = & $vswherePath -latest -products * -requires $sdkComponent -format json
        $componentFound = ($result -and $result.Trim() -ne "" -and $result -ne "[]")
        
        Write-Host "Target component available: $componentFound"
        echo "SDK_AVAILABLE=$componentFound" >> $env:GITHUB_OUTPUT
      id: sdk-check