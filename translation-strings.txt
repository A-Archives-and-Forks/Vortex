src/app/TrayIcon.ts:75:    this.mApi.events.emit('quick-launch');
src/controls/Banner.tsx:50:    const classes = className !== undefined ? className.split(' ') : [];
src/controls/Collapse.tsx:35:          {show ? (hideText || t('Hide')) : (showText || t('Show'))}
src/controls/Dashlet.tsx:13:    const classes = ['dashlet'].concat(className.split(' '));
src/controls/Dropzone.tsx:110:        urls: t('URL(s)'),
src/controls/Dropzone.tsx:111:        files: t('File(s)'),
src/controls/Dropzone.tsx:116:      ? t('enter URL')
src/controls/Dropzone.tsx:117:      : t('browse for file');
src/controls/Dropzone.tsx:125:              { replace: { accept: acceptList.join(` ${t('or')} `) } }) }
src/controls/Dropzone.tsx:267:          errorText: t('{{label}} cannot be empty.', {
src/controls/ErrorBoundary.tsx:103:    const classes = (className || '').split(' ');
src/controls/ErrorBoundary.tsx:110:          <div className='render-failure-text'>{t('Failed to render.')}</div>
src/controls/ErrorBoundary.tsx:114:              : <Button onClick={this.report}>{t('Report')}</Button>
src/controls/ErrorBoundary.tsx:116:            <Button onClick={this.retryRender}>{t('Retry')}</Button>
src/controls/ErrorBoundary.tsx:122:                tooltip={t('Hide')}
src/controls/ErrorBoundary.tsx:151:    events.emit('report-feedback', error.stack.split('\n')[0], errMessage,
src/controls/FormFields.tsx:125:                  tooltip={t('Change')}
src/controls/Icon.base.tsx:118:      classes = classes.concat(this.props.className.split(' '));
src/controls/Icon.stories.js:34:    name={select('name', { Sample: 'sample', Spinner: 'spinner' }, 'sample')}
src/controls/Icon.tsx:33:  const newset = document.createElement('div');
src/controls/InputButton.tsx:76:            tooltip={t('Confirm')}
src/controls/InputButton.tsx:83:            tooltip={t('Cancel')}
src/controls/More.tsx:19:      value = api.events.listenerCount('open-knowledge-base') > 0;
src/controls/More.tsx:75:            {t('Learn more')}
src/controls/More.tsx:116:    this.context.api.events.emit('open-knowledge-base',
src/controls/PlaceholderTextArea.tsx:71:          { title: t('Paste'), action: handlePaste, show: true },
src/controls/ReactSelectWrap.tsx:18:      placeholder: t('Select...'),
src/controls/ReactSelectWrap.tsx:33:      placeholder: t('Select...'),
src/controls/SelectUpDown.tsx:34:      classes.push(...this.props.className.split(' '));
src/controls/table/DateTimeFilter.tsx:26:        tooltip: props.t('Equal'),
src/controls/table/DateTimeFilter.tsx:30:        tooltip: props.t('Greater-than or Equal'),
src/controls/table/DateTimeFilter.tsx:34:        tooltip: props.t('Less-than or Equal'),
src/controls/table/GameFilter.tsx:37:      gameName.split('\t').map(part => t(part)).join(' ');
src/controls/table/GameFilter.tsx:40:      label: `<${t('Current Game')}>`,
src/controls/table/GameFilter.tsx:58:        placeholder={t('Select...')}
src/controls/table/GroupingRow.tsx:43:        title: this.props.t('Expand all'),
src/controls/table/GroupingRow.tsx:48:        title: this.props.t('Collapse all'),
src/controls/table/HeaderCell.tsx:112:        tooltip={t('Group the table by this attribute')}
src/controls/table/MyTable.tsx:12:  const classes = ['table', 'xtable'].concat((props.className || '').split(' '));
src/controls/table/MyTable.tsx:34:  const classes = ['table-header', 'xthead'].concat((props.className || '').split(' '));
src/controls/table/MyTable.tsx:48:  const classes = ['xtbody'].concat((props.className || '').split(' '));
src/controls/table/MyTable.tsx:65:    const classes = ['table-header-cell', 'xth'].concat((className || '').split(' '));
src/controls/table/MyTable.tsx:83:  const classes = ['xtr'].concat((className || '').split(' '));
src/controls/table/MyTable.tsx:101:  const classes = ['xtd'].concat((props.className || '').split(' '));
src/controls/table/NumericFilter.tsx:23:        tooltip: props.t('Equal'),
src/controls/table/NumericFilter.tsx:27:        tooltip: props.t('Greater-than or Equal'),
src/controls/table/NumericFilter.tsx:31:        tooltip: props.t('Less-than or Equal'),
src/controls/table/OptionsFilter.tsx:69:      placeholder={t('Select...')}
src/controls/table/TableDetail.tsx:149:          {currentChoice !== undefined ? currentChoice.text : t('<Nothing>')}
src/controls/table/TableDetail.tsx:168:              ? attribute.edit.placeholder() : t('Select...')}
src/controls/table/TableDetail.tsx:184:        value={various ? (t('Various') as string) : this.renderCell(values[0])}
src/controls/table/TableDetail.tsx:206:        placeholder={various ? t('Various') : ''}
src/controls/table/TableDetail.tsx:215:    const value = various ? t('Various') : values[0];
src/controls/table/TableDetail.tsx:331:              {t('Multiple items selected')}
src/controls/table/TableRow.tsx:140:            {data !== undefined ? data.toLocaleString(language) : t('Not installed')}
src/controls/table/TableRow.tsx:229:          placeholder={t('Select...')}
src/controls/Table.tsx:352:              {t('This table is filtered, showing {{shown}}/{{hidden}} items.',
src/controls/Table.tsx:354:              <Button onClick={this.clearFilters}>{t('Clear all filters')}</Button>
src/controls/Table.tsx:375:          {t('Did you know? You can select multiple items using ctrl+click or shift+click or '
src/controls/Table.tsx:397:            <p>{t('{{ count }} item selected', { count: selected.length })}</p>
src/controls/Table.tsx:401:              text={t('Deselect All')}
src/controls/Table.tsx:648:        title: t('Toggle Disabled Columns'),
src/controls/Table.tsx:663:        {hasActions ? <div className='header-action-label'>{t('Actions')}</div> : null}
src/controls/Table.tsx:1461:          && (this.getClasses(iter).split(' ').indexOf('xtd') === -1)) {
src/controls/ToolbarDropdown.tsx:10:  const inputArrs = input.map(iter => iter.split(' '));
src/controls/ToolbarDropdown.tsx:55:      classes = classes.concat(className.split(' '));
src/controls/TooltipControls.tsx:263:    const classes = ['fake-link'].concat((this.props.className || '').split(' '));
src/controls/Usage.tsx:39:      classes.push(...this.props.className.split(' '));
src/controls/Usage.tsx:52:            tooltip={t('Close')}
src/controls/Usage.tsx:60:          {t('Show Usage Instructions')}
src/controls/Webview.tsx:269:    return React.createElement('webview', {
src/extensions/analytics/views/SettingsAnalytics.tsx:27:          <ControlLabel>{t('Data & Privacy')}</ControlLabel>
src/extensions/analytics/views/SettingsAnalytics.tsx:33:            {t('Allow this app to collect usage data to improve your experience')}
src/extensions/analytics/views/SettingsAnalytics.tsx:36:            {t('Help us provide you with the best modding experience. With your permission, we will collect analytics information and send it to our team to help us improve quality and performance. This information is sent anonymously and will never be shared with a 3rd party.')}
src/extensions/analytics/views/SettingsAnalytics.tsx:41:              {t('Privacy Policy')}
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:50:      <Dashlet className='dashlet-announcement' title={t('Announcements')}>
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:61:        text={t('No Announcements')}
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:62:        subtext={t('No news is good news!')}
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:100:      case 'warning': return t('Warning');
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:101:      case 'critical': return t('Critical');
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:102:      case 'information': return t('Information');
src/extensions/announcement_dashlet/AnnouncementDashlet.tsx:115:          tooltip={t('View Issue')}
src/extensions/announcement_dashlet/index.ts:133:  context.registerDashlet('Announcements', 1, 3, 200, AnnouncementDashlet,
src/extensions/announcement_dashlet/index.ts:175:      message: t('We could use your opinion on something...'),
src/extensions/browser/index.ts:74:    instructions += t('This window will close as soon as you click a valid download link');
src/extensions/browser/index.ts:140:        context.api.events.emit('start-download-url', dlUrl);
src/extensions/browser/views/BrowserView.tsx:183:            tooltip={t('Copy URL to clipboard')}
src/extensions/browser/views/BrowserView.tsx:206:          <Button onClick={this.close}>{t('Cancel')}</Button>
src/extensions/browser/views/BrowserView.tsx:208:            <Button onClick={this.skip}>{t('Skip')}</Button>
src/extensions/browser/views/BrowserView.tsx:253:          tooltip={t('Back')}
src/extensions/browser/views/BrowserView.tsx:259:          tooltip={t('Forward')}
src/extensions/browser/views/BrowserView.tsx:270:    const segments = (parsed.pathname ?? '').split('/').filter(seg => seg.length > 0);
src/extensions/browser/views/BrowserView.tsx:297:        <h3>{t('Attention')}</h3>
src/extensions/browser/views/BrowserView.tsx:300:        <p>{t('Please be aware that Vortex is based on Electron which in turn is based on '
src/extensions/browser/views/BrowserView.tsx:304:        <p>{t('If you have security concerns or don\'t fully trust this page, please don\'t '
src/extensions/browser/views/BrowserView.tsx:306:        <Button onClick={this.confirm}>{t('Continue')}</Button>
src/extensions/browser/views/BrowserView.tsx:439:    parsed.pathname = (parsed.pathname ?? '').split('/').slice(0, idx + 2).join('/');
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:69:    api.events.emit('analytics-track-mixpanel-event',
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:73:    api.events.emit('start-download', [nxmUrl], {}, undefined,
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:125:    setPageInput('1');
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:188:            <p>{t('Please select a game to browse collections.')}</p>
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:200:            <p>{t('Loading collections...')}</p>
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:212:            <p><strong>{t('Error loading collections:')}</strong></p>
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:225:            <p>{t('No collections found for this game.')}</p>
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:237:          <h2>{t('Browse Collections ({{total}})', { total: numeral(allCollectionsTotal).format('0,0') })}</h2>
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:246:              placeholder={t('Search collections...')}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:257:              {t('Search')}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:264:              {t('{{total}} results', { total: numeral(totalCount).format('0,0') })}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:270:              label={t('Sort by')}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:385:                  {t('Go to:')}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:394:                  label={t('Page number')}
src/extensions/browse_nexus/views/BrowseNexusPage.tsx:405:                  {t('Go')}
src/extensions/category_management/index.ts:105:      resolveCategoryName(getModCategory(mod), context.api.store.getState()) || t('<No category>'),
src/extensions/category_management/index.ts:166:          context.api.events.emit('retrieve-category-list', false, {});
src/extensions/category_management/util/CategoryFilter.tsx:102:    options.unshift({ value: UNASSIGNED_ID, label: `<${t('Unassigned')}>` });
src/extensions/category_management/util/CategoryFilter.tsx:135:    return '\u200B' + this.props.t('Search: ') + filter;
src/extensions/category_management/util/generateSubtitle.ts:22:    ? t('Empty') : t('{{ count }} mods installed', {count: modsCount});
src/extensions/category_management/util/generateSubtitle.ts:25:    subt = subt + t(' ({{ count }} mods in sub-categories)', {count: totalChildModCount});
src/extensions/category_management/views/CategoryDialog.tsx:29:          <Modal.Title>{t('Categories')}</Modal.Title>
src/extensions/category_management/views/CategoryList.tsx:151:              placeholder={t('Search')}
src/extensions/category_management/views/CategoryList.tsx:157:              {t('{{ pos }} of {{ total }}', {
src/extensions/category_management/views/CategoryList.tsx:169:            tooltip={t('Prev')}
src/extensions/category_management/views/CategoryList.tsx:178:            tooltip={t('Next')}
src/extensions/category_management/views/CategoryList.tsx:347:          errorText: t('{{label}} cannot be empty.', {
src/extensions/category_management/views/CategoryList.tsx:359:          errorText: t('ID already used.') }
src/extensions/dashboard/views/Dashboard.tsx:182:          {t('Drag dashlets to rearrange and drag the borders to resize')}
src/extensions/dashboard/views/Dashboard.tsx:188:            title={t('Add Dashlet')}
src/extensions/dashboard/views/Dashboard.tsx:210:          <Button onClick={this.toggleEdit}>{t('Done')}</Button>
src/extensions/dashboard/views/Dashboard.tsx:215:        <IconButton icon='edit' tooltip={t('Customize your dashboard')} onClick={this.toggleEdit}>
src/extensions/dashboard/views/Dashboard.tsx:216:          {t('Customize your dashboard')}
src/extensions/dashboard/views/Settings.tsx:59:          <ControlLabel>{t('Dashlets')}</ControlLabel>
src/extensions/dashboard/views/Settings.tsx:60:          <HelpBlock>{t('Enable Dashboard Widgets')}</HelpBlock>
src/extensions/diagnostics_files/util/loadVortexLogs.ts:38:      const splittedSessions = text.split('[INFO] --------------------------');
src/extensions/diagnostics_files/util/loadVortexLogs.ts:43:          .split('\n')
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:120:              {t('An error occurred loading Vortex logs.')}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:131:            {t('Diagnostics Files')}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:140:            {t('Close')}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:158:      isCrashed = ` - ${t('Crashed')}!`;
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:168:        <span>{t('From') + ' '}</span>
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:170:        <span>{' ' + t('to') + ' '}</span>
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:174:            {' - ' + t('{{ count }} error', { count: errors.length })}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:218:          {t('Copy to Clipboard')}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:225:          {t('Report')}
src/extensions/diagnostics_files/views/DiagnosticsFilesDialog.tsx:319:        this.context.api.events.emit('report-log-error', logPath);
src/extensions/download_management/downloadAttributes.tsx:41:    case 'init': return <span>{t('Pending')}</span>;
src/extensions/download_management/downloadAttributes.tsx:42:    case 'finished': return <span>{t('Finished')}</span>;
src/extensions/download_management/downloadAttributes.tsx:43:    case 'failed': return <span>{t('Failed')}</span>;
src/extensions/download_management/downloadAttributes.tsx:50:          labelLeft={t('Finalizing')}
src/extensions/download_management/downloadAttributes.tsx:55:    case 'redirect': return <span>{t('Redirected')}</span>;
src/extensions/download_management/downloadAttributes.tsx:56:    case 'paused': return <span>{t('Paused')}</span>;
src/extensions/download_management/downloadAttributes.tsx:69:            tooltip={t('The download server doesn\'t support resuming downloads ')}
src/extensions/download_management/DownloadManager.ts:191:          const [ignore, fileName] = jobUrl.split('<')[0].split('|');
src/extensions/download_management/DownloadManager.ts:313:      const [urlIn, refererIn] = jobUrl.split('<');
src/extensions/download_management/DownloadManager.ts:363:        this.mApi.events.emit('did-start-download', { id: undefined, tag, urls, fileName });
src/extensions/download_management/DownloadManager.ts:996:      baseUrl = urls[0].toString().split('<')[0];
src/extensions/download_management/DownloadManager.ts:1267:            const [urlIn, fileName] = resolved.urls[0].toString().split('<')[0].split('|');
src/extensions/download_management/DownloadObserver.ts:182:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:185:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:192:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:195:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:339:    const urlIn = urls[0].toString().split('<')[0];
src/extensions/download_management/DownloadObserver.ts:430:      this.mApi.events.emit('did-finish-download', id, 'redirect');
src/extensions/download_management/DownloadObserver.ts:450:            this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:454:            this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/download_management/DownloadObserver.ts:462:            this.mApi.events.emit('start-install-download', id);
src/extensions/download_management/DownloadObserver.ts:747:      this.mApi.events.emit('did-finish-download', downloadId, 'failed');
src/extensions/download_management/index.ts:204:            api.events.emit('did-import-downloads', [dlId]);
src/extensions/download_management/index.ts:333:      api.events.emit('downloads-refreshed');
src/extensions/download_management/index.ts:433:      return toPromise(cb => api.events.emit('did-import-downloads', [dlId], cb));
src/extensions/download_management/index.ts:446:                api.events.emit('start-install-download', dlId, undefined, (err, mId) => {
src/extensions/download_management/index.ts:821:    api.events.emit('start-download-url', cliUrl, undefined, commandLine.install !== undefined);
src/extensions/download_management/index.ts:826:    api.events.emit('import-downloads', [arcPath], (dlIds: string[]) => {
src/extensions/download_management/index.ts:828:        api.events.emit('start-install-download', dlId);
src/extensions/download_management/index.ts:946:  context.registerTest('verify-downloads-transfers', 'gamemode-activated',
src/extensions/download_management/index.ts:964:      context.api.events.emit('start-download', [url], {}, undefined,
src/extensions/download_management/index.ts:967:          context.api.events.emit('start-install-download', dlId);
src/extensions/download_management/index.ts:973:      context.api.events.emit('start-download', [url], {}, undefined,
src/extensions/download_management/index.ts:976:            context.api.events.emit('start-install-download', dlId);
src/extensions/download_management/index.ts:1125:                powerBlockerId = remote.powerSaveBlocker.start('prevent-app-suspension');
src/extensions/download_management/index.ts:1208:                context.api.events.emit('resume-collection', gameId, existing);
src/extensions/download_management/index.ts:1232:              context.api.events.emit('start-install-download', dlId);
src/extensions/download_management/reducers/state.ts:198:        ['files', payload.id, 'modInfo'].concat(payload.key.split('.')),
src/extensions/download_management/util/postprocessDownload.ts:38:      api.events.emit('did-finish-download', id, 'finished');
src/extensions/download_management/util/postprocessDownload.ts:50:      api.events.emit('did-finish-download', id, 'finished');
src/extensions/download_management/util/queryDLInfo.ts:203:          return api.emitAndAwait('set-download-games', dlId, [metaGameId, gameId], true)
src/extensions/download_management/views/Dashlet.tsx:42:          <h5 style={{ textAlign: 'center' }}>{t('No downloads active')}</h5>
src/extensions/download_management/views/Dashlet.tsx:80:      <Dashlet title={t('Download Progress')} className='dashlet-download' >
src/extensions/download_management/views/DownloadGameList.tsx:37:            title={t('Add')}
src/extensions/download_management/views/DownloadGameList.tsx:70:          tooltip={t('Remove')}
src/extensions/download_management/views/DownloadGraph.tsx:81:                  value={t('Bandwidth Limit (see Settings)')}
src/extensions/download_management/views/DownloadGraph.tsx:106:    api.events.emit('show-main-page', 'application_settings');
src/extensions/download_management/views/DownloadProgressFilter.tsx:24:        placeholder={t('Select...')}
src/extensions/download_management/views/DownloadView.tsx:259:                      {viewAll ? t('View not-yet-installed Downloads') : t('View All Downloads')}
src/extensions/download_management/views/DownloadView.tsx:308:              dialogHint={t('Enter download URL')}
src/extensions/download_management/views/DownloadView.tsx:342:      this.context.api.events.emit('pause-download', downloadId);
src/extensions/download_management/views/DownloadView.tsx:477:      this.context.api.events.emit('resume-download', downloadId, (err) => {
src/extensions/download_management/views/DownloadView.tsx:500:      this.context.api.events.emit('remove-download', id);
src/extensions/download_management/views/DownloadView.tsx:512:      text: t('Do you really want to delete this archive?',
src/extensions/download_management/views/DownloadView.tsx:536:      t('Download was canceled by the user')));
src/extensions/download_management/views/DownloadView.tsx:553:      api.events.emit('start-install-download', dlId, undefined, undefined);
src/extensions/download_management/views/DownloadView.tsx:620:              action: () => this.context.api.events.emit('remove-download', downloadId) },
src/extensions/download_management/views/DownloadView.tsx:638:        message: t('The url lead to this website, maybe it contains a redirection?'),
src/extensions/download_management/views/DownloadView.tsx:641:            action: () => this.context.api.events.emit('remove-download', downloadId) },
src/extensions/download_management/views/DownloadView.tsx:687:      dlPaths.forEach(url => this.context.api.events.emit('start-download', [url], {}, undefined,
src/extensions/download_management/views/DownloadView.tsx:692:      this.context.api.events.emit('import-downloads', dlPaths);
src/extensions/download_management/views/Settings.tsx:128:              {t('Downloads Folder')}
src/extensions/download_management/views/Settings.tsx:129:              <More id='more-paths' name={t('Downloads Folder')} >
src/extensions/download_management/views/Settings.tsx:139:                    placeholder={t('Download Folder')}
src/extensions/download_management/views/Settings.tsx:145:                      tooltip={t('Browse')}
src/extensions/download_management/views/Settings.tsx:159:                    {hasActivity ? <Spinner /> : t('Apply')}
src/extensions/download_management/views/Settings.tsx:185:            {t('Download Threads') + ': ' + parallelDownloads.toString()}
src/extensions/download_management/views/Settings.tsx:186:            <More id='more-download-threads' name={t('Download Threads')} >
src/extensions/download_management/views/Settings.tsx:187:              {getText('download-threads', t)}
src/extensions/download_management/views/Settings.tsx:204:                {t('Unlock max download speeds')}
src/extensions/download_management/views/Settings.tsx:211:                {t('Regular users are restricted to 1 download thread - '
src/extensions/download_management/views/Settings.tsx:220:            {t('Limit Bandwidth')}
src/extensions/download_management/views/Settings.tsx:225:              placeholder={t('Unlimited')}
src/extensions/download_management/views/Settings.tsx:238:            {t('Install mods during collection downloads')}
src/extensions/download_management/views/Settings.tsx:244:            {t('Copy files when using "Install From File"')}
src/extensions/download_management/views/Settings.tsx:454:    this.nextState.busy = t('Moving');
src/extensions/download_management/views/Settings.tsx:455:    return withContext('Transferring Downloads', `from ${oldPath} to ${newPath}`,
src/extensions/download_management/views/Settings.tsx:461:            this.nextState.busy = t('Moving download folder');
src/extensions/download_management/views/Settings.tsx:471:          this.context.api.events.emit('did-move-downloads');
src/extensions/download_management/views/Settings.tsx:478:          this.context.api.events.emit('did-move-downloads');
src/extensions/download_management/views/Settings.tsx:480:            bbcode: t('The downloads folder has been copied [b]successfully[/b] to '
src/extensions/download_management/views/Settings.tsx:526:                t('Vortex has encountered a corrupted and unreadable file/directory '
src/extensions/download_management/views/Settings.tsx:648:    this.context.api.events.emit('will-move-downloads');
src/extensions/download_management/views/ShutdownButton.tsx:18:      text={t('Power off when done')}
src/extensions/download_management/views/SpeedOMeter.tsx:53:          <span>{t('Active Downloads')}</span>
src/extensions/download_management/views/SpeedOMeter.tsx:56:            ? <a onClick={this.openDownloads}>{t('More...')}</a>
src/extensions/download_management/views/SpeedOMeter.tsx:65:    this.context.api.events.emit('show-main-page', 'Downloads');
src/extensions/extension_manager/BrowseExtensions.tsx:122:          <h3>{t('Browse Extensions')}</h3>
src/extensions/extension_manager/BrowseExtensions.tsx:131:                    label={t('Search')}
src/extensions/extension_manager/BrowseExtensions.tsx:132:                    placeholder={t('Search')}
src/extensions/extension_manager/BrowseExtensions.tsx:141:                      {t('Sort by')}
src/extensions/extension_manager/BrowseExtensions.tsx:149:                        <option key={'name'} value={'name'}>{t('Name')}</option>
src/extensions/extension_manager/BrowseExtensions.tsx:151:                          {t('Endorsements')}
src/extensions/extension_manager/BrowseExtensions.tsx:153:                        <option key='downloads' value='downloads'>{t('Downloads')}</option>
src/extensions/extension_manager/BrowseExtensions.tsx:154:                        <option key='recent' value='recent'>{t('Last update')}</option>
src/extensions/extension_manager/BrowseExtensions.tsx:169:                    {t('Last updated: {{time}}',
src/extensions/extension_manager/BrowseExtensions.tsx:173:                      tooltip={t('Refresh')}
src/extensions/extension_manager/BrowseExtensions.tsx:186:          <Button onClick={onHide}>{t('Close')}</Button>
src/extensions/extension_manager/BrowseExtensions.tsx:270:        ? <div>{t('Installed')}</div>
src/extensions/extension_manager/BrowseExtensions.tsx:272:        ? <div>{t('Incompatible')}</div>
src/extensions/extension_manager/BrowseExtensions.tsx:281:            {t('Install')}
src/extensions/extension_manager/BrowseExtensions.tsx:346:        {t('Open in Browser')}
src/extensions/extension_manager/BrowseExtensions.tsx:353:        ? <div>{t('Installed')}</div>
src/extensions/extension_manager/BrowseExtensions.tsx:355:        ? <div>{t('Incompatible')}</div>
src/extensions/extension_manager/BrowseExtensions.tsx:364:            {t('Install')}
src/extensions/extension_manager/BrowseExtensions.tsx:384:                  <span className='description-author'>{t('by')}{' '}{ext.author}</span>
src/extensions/extension_manager/ExtensionManager.tsx:113:          api.emitAndAwait('endorse-nexus-mod',
src/extensions/extension_manager/ExtensionManager.tsx:152:              text={showBundled ? t('Hide Bundled') : t('Show Bundled')}
src/extensions/extension_manager/ExtensionManager.tsx:155:              tooltip={showBundled ? t('Hide Bundled Extensions') : t('Show Bundled Extensions')}
src/extensions/extension_manager/ExtensionManager.tsx:189:                          {t('Find more')}
src/extensions/extension_manager/ExtensionManager.tsx:197:                        dialogHint={t('Select extension file')}
src/extensions/extension_manager/ExtensionManager.tsx:231:        this.context.api.events.emit('start-download', [url], undefined,
src/extensions/extension_manager/ExtensionManager.tsx:258:        <div style={{ flexGrow: 1 }}>{t('You need to restart Vortex to apply changes.')}</div>
src/extensions/extension_manager/ExtensionManager.tsx:259:        <Button onClick={this.restart}>{t('Restart')}</Button>
src/extensions/extension_manager/index.ts:398:                bbcode: t('Some optional extensions for "{{game}}" are missing.[br][/br][br][/br]'
src/extensions/extension_manager/installExtension.ts:73:        return api.emitAndAwait('install-extension', ext);
src/extensions/extension_manager/installExtension.ts:180:      const [language, country] = dirNames[0].split('-');
src/extensions/extension_manager/util.ts:355:  return api.emitAndAwait('nexus-download',
src/extensions/extension_manager/util.ts:363:    api.events.emit('start-download', [ext.githubRelease], { game: SITE_ID }, archiveFileName(ext),
src/extensions/extension_manager/util.ts:445:      .then(() => { api.events.emit('remove-download', existing); })
src/extensions/file_based_loadorder/index.ts:371:    (t) => t('Load Order'),
src/extensions/file_based_loadorder/views/FileBasedLoadOrderPage.tsx:99:              await util.toPromise(cb => this.context.api.events.emit('deploy-mods', cb));
src/extensions/file_based_loadorder/views/FileBasedLoadOrderPage.tsx:115:              await util.toPromise(cb => this.context.api.events.emit('purge-mods', false, cb));
src/extensions/file_based_loadorder/views/FileBasedLoadOrderPage.tsx:260:            text={t('You don\'t have any orderable entries')}
src/extensions/file_based_loadorder/views/FileBasedLoadOrderPage.tsx:261:            subtext={t('Please make sure to deploy')}
src/extensions/file_based_loadorder/views/FileBasedLoadOrderPage.tsx:321:        message: t('Must clear filter to apply changes'),
src/extensions/file_based_loadorder/views/FilterBox.tsx:20:      placeholder={t('Search for a specific load order entry...')}
src/extensions/file_based_loadorder/views/InfoPanel.tsx:33:            <h2>{t('Changing your load order')}</h2>
src/extensions/file_based_loadorder/views/InfoPanel.tsx:48:    const title = t('Validation Error Console:');
src/extensions/file_based_loadorder/views/InfoPanel.tsx:49:    let errorText = t('No validation errors.');
src/extensions/file_based_loadorder/views/ItemRenderer.tsx:66:        <span className='external-text-area'>{t('Not managed by Vortex')}</span>
src/extensions/file_based_loadorder/views/ItemRenderer.tsx:77:      classes = classes.concat(className.split(' '));
src/extensions/file_based_loadorder/views/ItemRenderer.tsx:81:      classes = classes.concat('external');
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:64:          <h4>{t('Load Order')}</h4>
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:66:          {t('This is a snapshot of the load order information that '
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:110:          {t('You can make changes to this data from the ')}
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:114:            title={t('Go to Load Order Page')}
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:116:            {t('Load Order page.')}
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:118:          {t(' If you believe a load order entry is missing, please ensure the '
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:120:          {t(' Note that the game you\'ve created this collection for relies on a load order ' +
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:130:    this.context.api.events.emit('show-main-page', 'generic-loadorder');
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:140:      {t('Open Load Order Page')}
src/extensions/file_based_loadorder/views/LoadOrderCollections.tsx:149:        text={t('You have no load order entries (for the current mods in the collection)')}
src/extensions/firststeps_dashlet/Dashlet.tsx:44:          tooltip={t('Dismiss')}
src/extensions/firststeps_dashlet/Dashlet.tsx:124:      <Dashlet title={t('Let\'s get you set up')} className='dashlet-todo'>
src/extensions/firststeps_dashlet/index.ts:26:  context.registerDashlet('ToDo List', 3, 2, 0, Dashlet, state => {
src/extensions/firststeps_dashlet/todos.tsx:47:    api.events.emit('show-main-page', 'application_settings');
src/extensions/firststeps_dashlet/todos.tsx:52:    api.events.emit('start-discovery');
src/extensions/firststeps_dashlet/todos.tsx:56:    api.events.emit('show-main-page', 'Games');
src/extensions/firststeps_dashlet/todos.tsx:77:      value: (t: TFunction, props: any) => props.profilesVisible ? t('Yes') : t('No'),
src/extensions/firststeps_dashlet/todos.tsx:80:        api.events.emit('analytics-track-click-event', 'Dashboard', `Profile management ${!props.profilesVisible ? 'ON' : 'OFF'}`);
src/extensions/firststeps_dashlet/todos.tsx:100:        api.events.emit('analytics-track-click-event', 'Dashboard', 'Download drive');
src/extensions/firststeps_dashlet/todos.tsx:116:            return t('<No staging folder>');
src/extensions/firststeps_dashlet/todos.tsx:120:          return t('<Invalid Drive>');
src/extensions/firststeps_dashlet/todos.tsx:125:        api.events.emit('analytics-track-click-event', 'Dashboard', 'Staged drive');
src/extensions/firststeps_dashlet/todos.tsx:144:          ? t('Discovery running')
src/extensions/firststeps_dashlet/todos.tsx:145:          : t('Scan for missing games'),
src/extensions/gamemode_management/index.ts:347:          return api.emitAndAwait('install-extension', dlInfo);
src/extensions/gamemode_management/index.ts:519:          : React.createElement('span', {}, [modTypeCalc(mods)]),
src/extensions/gamemode_management/index.ts:547:          api.events.emit('recalculate-modtype-conflicts', mods.map(mod => mod.id));
src/extensions/gamemode_management/index.ts:550:          api.events.emit('recalculate-modtype-conflicts', [mods.id]);
src/extensions/gamemode_management/index.ts:713:  context.registerDashlet('Recently Managed', 2, 2, 175, RecentlyManagedDashlet,
src/extensions/gamemode_management/index.ts:742:        events.emit('gamemode-activated', gameMode);
src/extensions/gamemode_management/views/GamePicker.tsx:222:    const titleManaged = t('Managed ({{filterCount}})', {
src/extensions/gamemode_management/views/GamePicker.tsx:224:    const titleUnmanaged = t('Unmanaged ({{filterCount}})', {
src/extensions/gamemode_management/views/GamePicker.tsx:254:              tooltip={t('List')}
src/extensions/gamemode_management/views/GamePicker.tsx:255:              offTooltip={t('List')}
src/extensions/gamemode_management/views/GamePicker.tsx:258:              <span className='button-text'>{t('List View')}</span>
src/extensions/gamemode_management/views/GamePicker.tsx:265:              tooltip={t('Grid')}
src/extensions/gamemode_management/views/GamePicker.tsx:266:              offTooltip={t('Grid')}
src/extensions/gamemode_management/views/GamePicker.tsx:269:              <span className='button-text'>{t('Grid View')}</span>
src/extensions/gamemode_management/views/GamePicker.tsx:282:                      placeholder={t('Search for a game...')}
src/extensions/gamemode_management/views/GamePicker.tsx:302:                          {t('Sort by:')}
src/extensions/gamemode_management/views/GamePicker.tsx:306:                              { value: 'alphabetical', label: t('Name A-Z') },
src/extensions/gamemode_management/views/GamePicker.tsx:307:                              { value: 'recentlyused', label: t('Recently used') },
src/extensions/gamemode_management/views/GamePicker.tsx:333:                          {t('Sort by:')}
src/extensions/gamemode_management/views/GamePicker.tsx:337:                              { value: 'popular', label: t('Most Popular') },
src/extensions/gamemode_management/views/GamePicker.tsx:338:                              { value: 'alphabetical', label: t('Name A-Z') },
src/extensions/gamemode_management/views/GamePicker.tsx:339:                              { value: 'recent', label: t('Most Recent') },
src/extensions/gamemode_management/views/GamePicker.tsx:354:                        text={t('Can\'t find the game you\'re looking for?')}
src/extensions/gamemode_management/views/GamePicker.tsx:357:                            {t('Your game may not be supported yet but adding it yourself '
src/extensions/gamemode_management/views/GamePicker.tsx:516:            text={t('You haven\'t managed any games yet')}
src/extensions/gamemode_management/views/GamePicker.tsx:517:            subtext={t('To start managing a game, go to "Unmanaged" and activate a game there.')}
src/extensions/gamemode_management/views/GameRow.tsx:108:            {(location !== null) ? (<p>{t('Location')}: {location}</p>) : null}
src/extensions/gamemode_management/views/GameRow.tsx:125:                tooltip={t('Show Details')}
src/extensions/gamemode_management/views/GameThumbnail.tsx:73:    const nameParts = game.name.split('\t');
src/extensions/gamemode_management/views/GameThumbnail.tsx:110:                    <span>{t('{{ count }} active mod', { count: modCount })}</span>
src/extensions/gamemode_management/views/GameThumbnail.tsx:121:              <div className='game-thumbnail-tags' title={game.contributed ? t('Contributed by {{name}}', { replace: { name: game.contributed } }) : null}>
src/extensions/gamemode_management/views/GameThumbnail.tsx:205:          tooltip={t('Show Details')}
src/extensions/gamemode_management/views/HideGameIcon.tsx:35:    const text = hidden ? t('Show') : t('Hide');
src/extensions/gamemode_management/views/ModTypeWidget.tsx:70:    return <div>{t('Only available for installed mods')}</div>;
src/extensions/gamemode_management/views/ModTypeWidget.tsx:74:    return <div>{t('Multiple')}</div>;
src/extensions/gamemode_management/views/ModTypeWidget.tsx:87:        ? <div>{t('Deploys to')}&nbsp;<a onClick={openPath} title={modTypePath} className='modtype-path'>{midClip(modTypePath, 40)}</a></div>
src/extensions/gamemode_management/views/ModTypeWidget.tsx:88:        : t('Does not deploy')}
src/extensions/gamemode_management/views/ModTypeWidget.tsx:90:        {t('ID:')}&nbsp;<span className='modtype-id'>"{modTypeId}"</span>
src/extensions/gamemode_management/views/ModTypeWidget.tsx:96:          tooltip={t('Copy ID to clipboard')}
src/extensions/gamemode_management/views/NoGameDashlet.tsx:55:        <h3 className='dashlet-game-title'>{t('Welcome to Vortex')}</h3>
src/extensions/gamemode_management/views/NoGameDashlet.tsx:56:        <span>{ t('As this is the first time you start Vortex, please pick a game to manage. ' +
src/extensions/gamemode_management/views/NoGameDashlet.tsx:74:                <a onClick={this.openGames}>{t('More...')}</a>
src/extensions/gamemode_management/views/NoGameDashlet.tsx:84:    this.context.api.events.emit('show-main-page', 'Games');
src/extensions/gamemode_management/views/NoGameDashlet.tsx:102:      this.context.api.events.emit('refresh-game-info', gameId, err => {
src/extensions/gamemode_management/views/PathSelection.tsx:50:        <Modal.Title>{t('Select directories to scan')}</Modal.Title>
src/extensions/gamemode_management/views/PathSelection.tsx:63:        <Button onClick={onHide}>{t('Cancel')}</Button>
src/extensions/gamemode_management/views/PathSelection.tsx:64:        <Button onClick={scan}>{t('Scan')}</Button>
src/extensions/gamemode_management/views/PathSelection.tsx:120:              tooltip={t('Remove')}
src/extensions/gamemode_management/views/PathSelection.tsx:130:            <div className='button-text'>{t('Add a search path')}</div>
src/extensions/gamemode_management/views/PathSelection.tsx:170:          tooltip={t('Change')}
src/extensions/gamemode_management/views/ProgressFooter.tsx:36:          <div className='discovery-footer-label'>{t('Scan')}</div>
src/extensions/gamemode_management/views/ProgressFooter.tsx:46:          <div className='discovery-footer-label'>{t('Game discovery')}</div>
src/extensions/gamemode_management/views/RecentlyManagedDashlet.tsx:53:          text={t('You don\'t have any recently managed games')}
src/extensions/gamemode_management/views/RecentlyManagedDashlet.tsx:80:      <Dashlet title={t('Recently Managed')} className='dashlet-recently-managed' >
src/extensions/gamemode_management/views/RecentlyManagedDashlet.tsx:87:    this.context.api.events.emit('analytics-track-click-event', 'Dashboard', 'Recent game');
src/extensions/gamemode_management/views/RecentlyManagedDashlet.tsx:92:      this.context.api.events.emit('refresh-game-info', gameId, err => {
src/extensions/gamemode_management/views/ShowHiddenButton.tsx:20:        text={showHidden ? t('Hide Hidden Games') : t('Show Hidden Games')}
src/extensions/hardlink_activator/index.ts:67:        description: t => t('Game not discovered.'),
src/extensions/hardlink_activator/index.ts:86:        solution: t => t('To resolve this problem, the current user account needs to be given '
src/extensions/hardlink_activator/index.ts:101:          description: t => t('Works only if mods are installed on the same drive as the game.'),
src/extensions/hardlink_activator/index.ts:110:            return t('Please go to Settings->Mods and set the mod staging folder to be on '
src/extensions/hardlink_activator/index.ts:118:            api.events.emit('show-main-page', 'application_settings');
src/extensions/hardlink_activator/index.ts:133:        description: t => t('Game not fully initialized yet, this should disappear soon.'),
src/extensions/hardlink_activator/index.ts:154:          description: t => t('Filesystem doesn\'t support hard links.'),
src/extensions/history_management/HistoryDialog.tsx:87:        <h2>{t('Event history')}</h2>
src/extensions/history_management/HistoryDialog.tsx:108:          {t('Please note that this is not "Undo"! This screen allows you to revert '
src/extensions/history_management/HistoryDialog.tsx:115:        <Button onClick={onClose}>{t('Close')}</Button>
src/extensions/ini_prep/index.ts:293:  context.registerTest('controlled-folder-access', 'startup',
src/extensions/ini_prep/index.ts:349:        context.api.emitAndAwait('apply-settings', profile, fileName, parser);
src/extensions/ini_prep/TweakList.tsx:79:        <label className='control-label'>{t('Ini Tweaks')}</label>
src/extensions/installer_fomod/index.ts:74:  const currentListenerCount = process.listenerCount('exit');
src/extensions/installer_fomod/index.ts:434:    api.events.emit('start-download', [NET_CORE_DOWNLOAD], { game: SITE_ID }, undefined, cb, 'replace', { allowInstall: false }));
src/extensions/installer_fomod/index.ts:778:          const lines = msg.split('\n').filter(line => line.trim().length !== 0);
src/extensions/installer_fomod/index.ts:902:          const listenerCountBefore = process.listenerCount('exit');
src/extensions/installer_fomod/index.ts:911:          const listenerCountAfter = process.listenerCount('exit');
src/extensions/installer_fomod/index.ts:1140:    const currentListenerCount = process.listenerCount('exit');
src/extensions/installer_fomod/index.ts:1261:    const messages = cleanData.split('\uffff');
src/extensions/installer_fomod/index.ts:1441:  context.registerTest('dotnet-installed', 'startup', () => Bluebird.resolve(checkNetInstall(context.api)));
src/extensions/installer_fomod/index.ts:1637:              parameters: { br: '[br][/br]', url: `[url=${NET_CORE_DOWNLOAD_SITE}]${t('.NET website.')}[/url]` },
src/extensions/installer_fomod/index.ts:1678:                        context.api.events.emit('show-main-page', 'application_settings');
src/extensions/installer_fomod/views/InstallerDialog.tsx:113:          {group?.name ?? `<${t('Missing group name')}>`}
src/extensions/installer_fomod/views/InstallerDialog.tsx:133:        ? t('Select at least one') : undefined;
src/extensions/installer_fomod/views/InstallerDialog.tsx:135:        ? t('Select at most one') : undefined;
src/extensions/installer_fomod/views/InstallerDialog.tsx:137:        ? t('Select exactly one') : undefined;
src/extensions/installer_fomod/views/InstallerDialog.tsx:160:      >{t('None')}
src/extensions/installer_fomod/views/InstallerDialog.tsx:180:        {plugin.preset ? ` (${t('Preset')})` : ''}
src/extensions/installer_fomod/views/InstallerDialog.tsx:393:            tooltip={t('Cancel')}
src/extensions/installer_fomod/views/InstallerDialog.tsx:427:                    {waiting ? <Spinner /> : lastVisible.name || t('Previous')}
src/extensions/installer_fomod/views/InstallerDialog.tsx:438:                    {waiting ? <Spinner /> : (nextVisible.name || t('Next'))}
src/extensions/installer_fomod/views/InstallerDialog.tsx:442:                    {t('Finish')}
src/extensions/installer_fomod/views/Workarounds.tsx:28:      context.api.events.emit('analytics-track-click-event',
src/extensions/installer_fomod/views/Workarounds.tsx:38:        <ControlLabel>{t('Installer Sandbox')}</ControlLabel>
src/extensions/installer_fomod/views/Workarounds.tsx:44:          {t('Enable Sandbox')}
src/extensions/instructions_overlay/index.ts:25:    context.api.events.emit('did-dismiss-overlay', id, overlayInfo.options?.id);
src/extensions/instructions_overlay/InstructionsOverlay.tsx:76:      evt.currentTarget.dispatchEvent(new MouseEvent('mouseup'));
src/extensions/instructions_overlay/InstructionsOverlay.tsx:159:                tooltip={open ? t('Collapse') : t('Expand')}
src/extensions/instructions_overlay/InstructionsOverlay.tsx:165:                tooltip={t('Close')}
src/extensions/mod_load_order/index.ts:53:    (t) => t('Load Order'),
src/extensions/mod_load_order/views/DefaultInfoPanel.tsx:19:        <h2>{t('Changing your load order')}</h2>
src/extensions/mod_load_order/views/DefaultItemRenderer.tsx:75:      <span>{t('Not managed by Vortex')}</span>
src/extensions/mod_load_order/views/DefaultItemRenderer.tsx:91:      classes = classes.concat(className.split(' '));
src/extensions/mod_load_order/views/DefaultItemRenderer.tsx:120:      classes = classes.concat(className.split(' '));
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:62:          <h4>{t('Load Order')}</h4>
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:64:            {t('This is a snapshot of the load order information that '
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:83:          {t('You can make changes to this data from the ')}
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:87:            title={t('Go to Load Order Page')}
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:89:            {t('Load Order page.')}
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:91:          {t(' If you believe a load order entry is missing, please ensure the '
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:93:          {t(' Note that some games will require the mods to be enabled or deployed ' +
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:101:    this.context.api.events.emit('show-main-page', 'generic-loadorder');
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:112:      {t('Open Load Order Page')}
src/extensions/mod_load_order/views/LoadOrderCollections.tsx:121:        text={t('You have no load order entries (for the current mods in the collection)')}
src/extensions/mod_load_order/views/LoadOrderPage.tsx:131:            onClick: () => this.context.api.events.emit('deploy-mods', () => undefined),
src/extensions/mod_management/eventHandlers.ts:109:              text: t('From config: {{path}}', { replace: { path: configuredPath } }),
src/extensions/mod_management/eventHandlers.ts:114:              text: t('From manifest: {{path}}', { replace: { path: manifestPath } }),
src/extensions/mod_management/eventHandlers.ts:157:    .then(() => api.emitAndAwait('will-purge', profile.id, deployments))
src/extensions/mod_management/eventHandlers.ts:247:  setErrorContext('gamemode', game.name);
src/extensions/mod_management/eventHandlers.ts:249:    setErrorContext('extension_version', game.version);
src/extensions/mod_management/eventHandlers.ts:413:      api.events.emit('mods-refreshed');
src/extensions/mod_management/eventHandlers.ts:610:              api.events.emit('deploy-mods', (deployErr) => {
src/extensions/mod_management/eventHandlers.ts:683:  api.emitAndAwait('will-remove-mods', gameId, removeMods.map(mod => mod.id), options)
src/extensions/mod_management/eventHandlers.ts:692:          await api.emitAndAwait('will-remove-mod', gameId, mod.id, forwardOptions);
src/extensions/mod_management/eventHandlers.ts:699:          await api.emitAndAwait('did-remove-mod', gameId, mod.id, forwardOptions);
src/extensions/mod_management/eventHandlers.ts:750:      return api.emitAndAwait('did-remove-mods', gameId, removeMods);
src/extensions/mod_management/eventHandlers.ts:829:    api.events.emit('refresh-downloads', convertedGameId, () => {
src/extensions/mod_management/index.ts:170:    : api.emitAndAwait('bake-settings', profile.gameId, sortedModList, profile);
src/extensions/mod_management/index.ts:183:        api.events.emit('edit-mod-cycle', gameId, cycle);
src/extensions/mod_management/index.ts:326:                  `* "${renderModName(inc.left)}" _${t('incompatible with')}_ "${renderModName(inc.right)}"`).join('\n'),
src/extensions/mod_management/index.ts:428:    const renderEntry = (api.events.listenerCount('display-report') > 0)
src/extensions/mod_management/index.ts:429:      ? (mod: IMod) => renderModName(mod) + ` [url="cb://report/${mod.id}"](${t('Review')})[/url]`
src/extensions/mod_management/index.ts:439:            return api.showDialog('info', t('Redundant mods'), {
src/extensions/mod_management/index.ts:440:              bbcode: t('Some of the enabled mods either contain no files or all files '
src/extensions/mod_management/index.ts:456:                      api.events.emit('display-report', modId, profile.gameId, {
src/extensions/mod_management/index.ts:497:      message: t('Waiting for other operations to complete'),
src/extensions/mod_management/index.ts:498:      title: t('Deploying'),
src/extensions/mod_management/index.ts:554:            t('Deployment method "{{method}}" not available because: {{reason}}', {
src/extensions/mod_management/index.ts:566:            message: t('Deployment method "{{method}}" does not support '
src/extensions/mod_management/index.ts:609:        notification.message = t('Deploying mods');
src/extensions/mod_management/index.ts:612:        progress(t('Loading deployment manifest'), 0);
src/extensions/mod_management/index.ts:617:          .tap(() => progress(t('Running pre-deployment events'), 2))
src/extensions/mod_management/index.ts:618:          .then(() => api.emitAndAwait('will-deploy', profile.id, lastDeployment))
src/extensions/mod_management/index.ts:631:          .tap(() => progress(t('Checking for external changes'), 5))
src/extensions/mod_management/index.ts:634:          .tap(() => progress(t('Checking for mod incompatibilities'), 25))
src/extensions/mod_management/index.ts:636:          .tap(() => progress(t('Sorting mods'), 30))
src/extensions/mod_management/index.ts:641:          .tap(() => progress(t('Merging mods'), 35))
src/extensions/mod_management/index.ts:645:          .tap(() => progress(t('Starting deployment'), 35))
src/extensions/mod_management/index.ts:648:              progress(t('Deploying: ') + name, 50 + percent / 2);
src/extensions/mod_management/index.ts:661:        .tap(() => progress(t('Running post-deployment events'), 99))
src/extensions/mod_management/index.ts:662:        .then(() => api.emitAndAwait('did-deploy', profile.id, newDeployment,
src/extensions/mod_management/index.ts:664:        .tap(() => progress(t('Preparing game settings'), 100))
src/extensions/mod_management/index.ts:762:    help: getText('source', laterT),
src/extensions/mod_management/index.ts:1051:    api.events.emit('deploy-mods', onceCB((err) => {
src/extensions/mod_management/index.ts:1572:        api.events.emit('show-main-page', 'application_settings');
src/extensions/mod_management/index.ts:1659:  context.registerTest('valid-activator', 'gamemode-activated', validActivatorCheck);
src/extensions/mod_management/index.ts:1660:  context.registerTest('valid-activator', 'settings-changed', validActivatorCheck);
src/extensions/mod_management/index.ts:1695:          context.api.events.emit('remove-mods', gameMode, modIds, (err) => {
src/extensions/mod_management/index.ts:1697:              context.api.events.emit('duplicates-removed');
src/extensions/mod_management/index.ts:1712:  context.registerTest('validate-staging-folder', 'gamemode-activated',
src/extensions/mod_management/index.ts:1714:  context.registerTest('validate-staging-folder', 'settings-changed',
src/extensions/mod_management/index.ts:1716:  context.registerTest('verify-mod-transfers', 'gamemode-activated',
src/extensions/mod_management/index.ts:1718:  context.registerTest('verify-mod-duplicates', 'gamemode-activated',
src/extensions/mod_management/InstallContext.ts:228:      this.mApi.events.emit('analytics-track-mixpanel-event', new ModsInstallationStartedEvent(nexusIds.modId, nexusIds.fileId, nexusIds.numericGameId, modUID, fileUID));
src/extensions/mod_management/InstallContext.ts:324:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/mod_management/InstallContext.ts:355:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/mod_management/InstallContext.ts:372:          this.mApi.events.emit('analytics-track-mixpanel-event',
src/extensions/mod_management/InstallManager.ts:30:    api.events.emit('get-download-free-slots', (freeSlots: number) => {
src/extensions/mod_management/InstallManager.ts:361:  api.events.emit('will-install-dependencies', gameId, modId, isRecommended, () => {
src/extensions/mod_management/InstallManager.ts:374:      errorText: t('Name must be between {{min}}-{{max}} characters long', {
src/extensions/mod_management/InstallManager.ts:448:            this.withDependenciesContext('install-recommendations', () =>
src/extensions/mod_management/InstallManager.ts:458:            this.withDependenciesContext('install-collections', () =>
src/extensions/mod_management/InstallManager.ts:949:        const installationPromise = withContext('Installing', baseName, () => ((forceGameId !== undefined)
src/extensions/mod_management/InstallManager.ts:980:            await api.emitAndAwait('will-install-mod', installGameId, archiveId, modId, fullInfo);
src/extensions/mod_management/InstallManager.ts:1014:              return api.emitAndAwait('install-extension-from-download', archiveId)
src/extensions/mod_management/InstallManager.ts:1162:                      api.events.emit('remove-mod', installGameId, existingMod.id,
src/extensions/mod_management/InstallManager.ts:1267:            api.events.emit('did-install-mod', installGameId, archiveId, modId, modInfo);
src/extensions/mod_management/InstallManager.ts:1323:                            api.events.emit('remove-download', archiveId, dismiss);
src/extensions/mod_management/InstallManager.ts:1330:                            api.events.emit('remove-download', archiveId, () => {
src/extensions/mod_management/InstallManager.ts:1332:                              api.events.emit('start-download', download.urls, info.download,
src/extensions/mod_management/InstallManager.ts:1383:                message: err.message.split('\n')[0],
src/extensions/mod_management/InstallManager.ts:1502:      this.withDependenciesContext('install-dependencies', () =>
src/extensions/mod_management/InstallManager.ts:1535:      this.withDependenciesContext('install-recommendations', () =>
src/extensions/mod_management/InstallManager.ts:1566:    context.set('depth', context.get('depth', 0) + 1);
src/extensions/mod_management/InstallManager.ts:1567:    context.set('remember-instructions', null);
src/extensions/mod_management/InstallManager.ts:1572:        context.set('depth', oldDepth - 1);
src/extensions/mod_management/InstallManager.ts:1574:          context.set('remember', null);
src/extensions/mod_management/InstallManager.ts:1940:            toPromise(cb => api.events.emit('deploy-mods', cb))
src/extensions/mod_management/InstallManager.ts:2125:          api.events.emit('did-install-mod', gameId, downloadId, existingMod.id, existingMod.attributes);
src/extensions/mod_management/InstallManager.ts:3063:    let context = getBatchContext('install-mod', '', false);
src/extensions/mod_management/InstallManager.ts:3066:        context = getBatchContext('install-mod', '', true);
src/extensions/mod_management/InstallManager.ts:3129:        const context = getBatchContext('install-mod', '', true);
src/extensions/mod_management/InstallManager.ts:3141:    const context = getBatchContext('install-mod', '', false);
src/extensions/mod_management/InstallManager.ts:3197:      const context = getBatchContext('install-mod', mods[0].archiveId);
src/extensions/mod_management/InstallManager.ts:3202:          const itemsCompleted = context.get('items-completed', 0);
src/extensions/mod_management/InstallManager.ts:3242:                context.set('variant-name', result.input.variant);
src/extensions/mod_management/InstallManager.ts:3349:        if (context.get('canceled', false)) {
src/extensions/mod_management/InstallManager.ts:3353:        const action = context.get('replace-or-variant');
src/extensions/mod_management/InstallManager.ts:3354:        const itemsCompleted = context.get('items-completed', 0);
src/extensions/mod_management/InstallManager.ts:3369:          let variant: string = context.get('variant-name');
src/extensions/mod_management/InstallManager.ts:3371:            choices = queryVariantNameDialog(context.get('replace-or-variant') !== undefined)
src/extensions/mod_management/InstallManager.ts:3406:            api.events.emit('remove-mod', gameId, modId, (err) => {
src/extensions/mod_management/InstallManager.ts:3475:            context.set('items-completed', context.get('items-completed', 0) + 1);
src/extensions/mod_management/InstallManager.ts:3548:          parsedUrl.searchParams.set('campaign', campaign);
src/extensions/mod_management/InstallManager.ts:3551:        if (!api.events.emit('start-download', [parsedUrl], {
src/extensions/mod_management/InstallManager.ts:3571:              const result: string[] = await api.emitAndAwait('browse-for-download', resolvedSource, instructions);
src/extensions/mod_management/InstallManager.ts:3601:    return api.emitAndAwait('start-download-update',
src/extensions/mod_management/InstallManager.ts:4017:          api.events.emit('pause-download', dlId);
src/extensions/mod_management/InstallManager.ts:4019:          api.events.emit('intercept-download', ref.tag);
src/extensions/mod_management/InstallManager.ts:4079:                    api.events.emit('refresh-downloads', gameId, () => {
src/extensions/mod_management/InstallManager.ts:4156:            api.events.emit('resume-download',
src/extensions/mod_management/InstallManager.ts:4223:              api.events.emit('import-downloads',
src/extensions/mod_management/InstallManager.ts:4552:    const context = getBatchContext('install-dependencies', '', true);
src/extensions/mod_management/InstallManager.ts:4592:        list += `[h4]${t('Require Download & Install')}[/h4]<br/>[list]`
src/extensions/mod_management/InstallManager.ts:4599:        list += `[h4]${t('Require Install')}[/h4]<br/>[list]`
src/extensions/mod_management/InstallManager.ts:4605:        list += `[h4]${t('Will be enabled')}[/h4]<br/>[list]`
src/extensions/mod_management/InstallManager.ts:4611:        bbcode += t('{{modName}} requires the following dependencies:', {
src/extensions/mod_management/InstallManager.ts:4618:          + t('{{modName}} has unsolved dependencies that could not be found automatically. ',
src/extensions/mod_management/InstallManager.ts:4620:          + t('Please install them manually') + ':<br/>'
src/extensions/mod_management/InstallManager.ts:4638:        showDialog('question', t('Install Dependencies'), {
src/extensions/mod_management/InstallManager.ts:4656:            context.set('remember', result.action === 'Install');
src/extensions/mod_management/InstallManager.ts:4675:      api.events.emit('did-install-dependencies', gameId, modId, false);
src/extensions/mod_management/InstallManager.ts:4726:        api.events.emit('did-install-dependencies', gameId, modId, false);
src/extensions/mod_management/InstallManager.ts:4879:        const context = getBatchContext('install-recommendations', '', true);
src/extensions/mod_management/InstallManager.ts:4890:                  context.set('remember', false);
src/extensions/mod_management/InstallManager.ts:4895:                  context.set('remember', true);
src/extensions/mod_management/InstallManager.ts:4932:        api.events.emit('did-install-dependencies', gameId, modId, true);
src/extensions/mod_management/InstallManager.ts:4950:        const context = getBatchContext('install-recommendations', '');
src/extensions/mod_management/InstallManager.ts:4977:            context.set('remember-instructions', result.action);
src/extensions/mod_management/modAttributes.tsx:28:                : t('Never enabled')
src/extensions/mod_management/modAttributes.tsx:34:          return <span>{t('Never')}</span>;
src/extensions/mod_management/modAttributes.tsx:65:                : t('Not installed')
src/extensions/mod_management/modAttributes.tsx:71:          return <span>{t('Not installed')}</span>;
src/extensions/mod_management/modAttributes.tsx:98:        return <span>{t('Unknown')}</span>;
src/extensions/mod_management/modAttributes.tsx:109:                : <span>{t('Unknown')}</span>
src/extensions/mod_management/modAttributes.tsx:115:          return <span>{t('Unknown')}</span>;
src/extensions/mod_management/modMerging.ts:33:    stream.on('end', () => resolve(hash.digest('hex')));
src/extensions/mod_management/preStartDeployHook.ts:19:    return api.showDialog('question', t('Pending deployment'), {
src/extensions/mod_management/preStartDeployHook.ts:20:      bbcode: t('Mod deployment {{more}} is pending.[br][/br]'
src/extensions/mod_management/preStartDeployHook.ts:25:          replace: { more: `[More id='more-deploy' name='${t('Deployment')}']${getText('deployment', t)}[/More]` }
src/extensions/mod_management/preStartDeployHook.ts:43:          api.events.emit('deploy-mods', onceCB((err) => {
src/extensions/mod_management/preStartDeployHook.ts:53:          api.events.emit('await-activation', (err: Error) => {
src/extensions/mod_management/util/activationStore.ts:123:  return t('IMPORTANT: This game was modded by another instance of Vortex.\n\n' +
src/extensions/mod_management/util/activationStore.ts:139:  return t('IMPORTANT: This game was modded by another instance of Vortex.\n\n' +
src/extensions/mod_management/util/activationStore.ts:154:  return api.store.dispatch(showDialog('info', t('Purge files from different instance?'), {
src/extensions/mod_management/util/allTypesSupported.ts:15:    return { errors: [ { description: t => t('No deployment method selected') }], warnings: [] };
src/extensions/mod_management/util/dependencies.ts:88:        lookupResult = api.emitAndAwait('browse-for-download', url, instruction, true)
src/extensions/mod_management/util/dependencies.ts:102:            const [dlUrl, referer] = resultList[0].split('<');
src/extensions/mod_management/util/dependencyToModInfo.ts:148:    return path.split('.').reduce((current, key) => current?.[key], obj) ?? fallback;
src/extensions/mod_management/util/deploy.ts:211:      .then(() => api.emitAndAwait('will-purge', profile.id, lastDeployment))
src/extensions/mod_management/util/deploy.ts:250:      .then(() => api.emitAndAwait('did-purge', profile.id));
src/extensions/mod_management/util/deploy.ts:329:      .then(() => api.emitAndAwait('did-purge', profile.id));
src/extensions/mod_management/util/externalChanges.ts:125:        api.events.emit('check-file-override-redundancies', gameId, testFileOverrides);
src/extensions/mod_management/util/externalChanges.ts:129:        api.events.emit('mod-content-changed', gameId, affected);
src/extensions/mod_management/util/ModHistory.ts:325:      this.mApi.events.emit('remove-mod', gameId, modId, err => {
src/extensions/mod_management/util/refreshMods.ts:56:        message = message.concat([t('Removed:')], removedMods.map(renderMod));
src/extensions/mod_management/util/refreshMods.ts:59:        message = message.concat([t('Added:')], addedMods.map(renderMod));
src/extensions/mod_management/util/refreshMods.ts:62:      let bbcode = t('Mods have been changed on disk. This means that mods that were managed by Vortex '
src/extensions/mod_management/util/refreshMods.ts:73:      return api.showDialog('question', t('Mods changed on disk'), {
src/extensions/mod_management/util/removeMods.ts:8:    api.events.emit('remove-mod', gameId, modId, err => {
src/extensions/mod_management/util/removeMods.ts:43:      api.events.emit('remove-mods', gameId, modIds, cb, { progressCB }))
src/extensions/mod_management/util/removeMods.ts:45:      api.events.emit('mods-enabled', modIds, false, gameId);
src/extensions/mod_management/util/testModReference.ts:257:    const versionMatch = ref.versionMatch.split('+')[0];
src/extensions/mod_management/util/VersionFilter.tsx:13:      { value: 'has-update', label: t('Update available') },
src/extensions/mod_management/util/VersionFilter.tsx:14:      { value: 'missing-meta', label: t('Missing Meta ID') },
src/extensions/mod_management/util/VersionFilter.tsx:23:        placeholder={t('Select...')}
src/extensions/mod_management/views/ActivationButton.tsx:49:        text={t('Deploy Mods')}
src/extensions/mod_management/views/ActivationButton.tsx:61:        this.context.api.events.emit('show-main-page', 'application_settings');
src/extensions/mod_management/views/ActivationButton.tsx:69:    this.context.api.events.emit('deploy-mods', onceCB((err) => {
src/extensions/mod_management/views/Author.tsx:62:              <td>{t('Author')}</td><td><Input value={authorTemp} onChange={setAuthor} /></td>
src/extensions/mod_management/views/Author.tsx:65:              <td>{t('Uploader')}</td><td><Input value={uploaderTemp} onChange={setUploader} /></td>
src/extensions/mod_management/views/Author.tsx:68:              <td>{t('Uploader URL')}</td><td><Input value={urlTemp} onChange={setURL} /></td>
src/extensions/mod_management/views/Author.tsx:72:        <Button onClick={cancel} tooltip={t('Cancel')}>{t('Cancel')}</Button>
src/extensions/mod_management/views/Author.tsx:74:        <Button onClick={save} tooltip={t('Save')}>{t('Save')}</Button>
src/extensions/mod_management/views/Author.tsx:105:            <IconButton icon='edit' tooltip={t('Edit')} onClick={startEdit} className='btn-embed' />
src/extensions/mod_management/views/CheckModVersionsButton.tsx:42:          text={t('Checking for mod updates')}
src/extensions/mod_management/views/CheckModVersionsButton.tsx:53:          text={t('Check for Updates')}
src/extensions/mod_management/views/CheckModVersionsButton.tsx:91:      const modIdsResults: string[][] = await this.context.api.emitAndAwait('check-mods-version', gameMode, _.pick(this.props.mods, mods), force);
src/extensions/mod_management/views/CheckModVersionsButton.tsx:143:      this.context.api.events.emit('mods-update', gameMode, updateAble);
src/extensions/mod_management/views/DeactivationButton.tsx:53:        text={t('Purge Mods')}
src/extensions/mod_management/views/DeactivationButton.tsx:64:        this.context.api.events.emit('purge-mods', false, (err) => {
src/extensions/mod_management/views/DeactivationButton.tsx:113:        this.context.api.events.emit('show-main-page', 'application_settings');
src/extensions/mod_management/views/Description.tsx:55:              title={t('Description is synchronized with an online source')}
src/extensions/mod_management/views/Description.tsx:57:              <Icon name='edit'/>{t('Edit Description')}
src/extensions/mod_management/views/Description.tsx:65:              title={t('Description can only be changed for installed mods')}
src/extensions/mod_management/views/Description.tsx:67:              <Icon name='edit'/>{t('Edit Description')}
src/extensions/mod_management/views/Description.tsx:73:              <Icon name='edit'/>{t('Edit Description')}
src/extensions/mod_management/views/Description.tsx:92:          {!short ? t('Description') : this.shortBB(short)}
src/extensions/mod_management/views/Description.tsx:116:        || `<${t('No description')}>`);
src/extensions/mod_management/views/DuplicatesDialog.tsx:79:  const paragraph = t('Vortex may have pre-selected some of the mods for you '
src/extensions/mod_management/views/DuplicatesDialog.tsx:86:      <Modal.Title>{t('Choose Duplicates')}</Modal.Title>
src/extensions/mod_management/views/DuplicatesDialog.tsx:93:      <Button onClick={onHide}>{t('Cancel')}</Button>
src/extensions/mod_management/views/DuplicatesDialog.tsx:94:      <Button onClick={removeMods}>{t('Remove Duplicates')}</Button>
src/extensions/mod_management/views/ExternalChangeDialog.tsx:103:      this.setAllFunc('refchange', evt.currentTarget.href.split('#')[1]);
src/extensions/mod_management/views/ExternalChangeDialog.tsx:106:      this.setAllFunc('valchange', evt.currentTarget.href.split('#')[1]);
src/extensions/mod_management/views/ExternalChangeDialog.tsx:109:      this.setAllFunc('deleted', evt.currentTarget.href.split('#')[1]);
src/extensions/mod_management/views/ExternalChangeDialog.tsx:112:      this.setAllFunc('srcdeleted', evt.currentTarget.href.split('#')[1]);
src/extensions/mod_management/views/ExternalChangeDialog.tsx:134:          <Modal.Title>{t('External Changes')}</Modal.Title>
src/extensions/mod_management/views/ExternalChangeDialog.tsx:145:            {t('Show individual files')}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:151:            tooltip={t('Cancel deployment')}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:154:            {t('Cancel')}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:158:            tooltip={t('Confirm changes')}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:161:            {t('Confirm')}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:184:        {/* this.renderChangedSources(t('These mods were modified'), 'valchange', vc) */}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:185:        {this.renderChangedSources(t('File content modified '
src/extensions/mod_management/views/ExternalChangeDialog.tsx:189:        {this.renderChangedSources(t('Source files were deleted '
src/extensions/mod_management/views/ExternalChangeDialog.tsx:192:        {this.renderChangedSources(t('Links were deleted '
src/extensions/mod_management/views/ExternalChangeDialog.tsx:205:        {/* this.renderChangedFile(t('These files were modified'), 'valchange', valChanged) */}
src/extensions/mod_management/views/ExternalChangeDialog.tsx:206:        {this.renderChangedFile(t('File content modified '
src/extensions/mod_management/views/ExternalChangeDialog.tsx:210:        {this.renderChangedFile(t('Source files were deleted'
src/extensions/mod_management/views/ExternalChangeDialog.tsx:213:        {this.renderChangedFile(t('Links were deleted'
src/extensions/mod_management/views/ExternalChangeDialog.tsx:346:              t('{{count}} file', {
src/extensions/mod_management/views/FixDeploymentDialog.tsx:70:          <Modal.Title>{t('Deployment Methods')}</Modal.Title>
src/extensions/mod_management/views/FixDeploymentDialog.tsx:79:            {t('Close')}
src/extensions/mod_management/views/FixDeploymentDialog.tsx:85:            {t('Back')}
src/extensions/mod_management/views/FixDeploymentDialog.tsx:91:            {t('Apply Fix')}
src/extensions/mod_management/views/FixDeploymentDialog.tsx:97:            {t('Next')}
src/extensions/mod_management/views/FixDeploymentDialog.tsx:127:        <h5>{t('Problem')}</h5>
src/extensions/mod_management/views/FixDeploymentDialog.tsx:129:        <h5>{t('Solution')}</h5>
src/extensions/mod_management/views/FixDeploymentDialog.tsx:133:            : t('Can\'t be solved.')}
src/extensions/mod_management/views/InstallArchiveButton.tsx:38:        text={t('Install From File')}
src/extensions/mod_management/views/InstallArchiveButton.tsx:54:          api.events.emit('import-downloads', [result], (dlIds: string[]) => {
src/extensions/mod_management/views/InstallArchiveButton.tsx:56:              api.events.emit('start-install-download', dlId);
src/extensions/mod_management/views/InstallArchiveButton.tsx:60:          api.events.emit('start-install', result, (error, id: string) => {
src/extensions/mod_management/views/ModList.tsx:92:          {variant !== undefined ? ` (${variant})` : ` (${t('default')})`}
src/extensions/mod_management/views/ModList.tsx:98:          tooltip={t('remove')}
src/extensions/mod_management/views/ModList.tsx:252:            : this.props.t('No associated archive.') as string;
src/extensions/mod_management/views/ModList.tsx:360:              text={t('You don\'t have any installed mods')}
src/extensions/mod_management/views/ModList.tsx:372:              detailsTitle={t('Mod Attributes')}
src/extensions/mod_management/views/ModList.tsx:445:      this.context.api.events.emit('analytics-track-click-event', 'Mods', 'Get more mods');
src/extensions/mod_management/views/ModList.tsx:458:          {t('Get more mods')}
src/extensions/mod_management/views/ModList.tsx:466:        title={t('Get more mods')}
src/extensions/mod_management/views/ModList.tsx:488:    const text = t('But don\'t worry, I know a place...');
src/extensions/mod_management/views/ModList.tsx:530:    this.context.api.events.emit('analytics-track-click-event', 'Collections', 'Add mods - empty');
src/extensions/mod_management/views/ModList.tsx:538:      return version + ' (' + t('{{ count }} more', { count: equalMods.length - 1 }) + ')';
src/extensions/mod_management/views/ModList.tsx:561:            + (variant !== undefined ? ` (${variant})` : ` (${t('default')})`)
src/extensions/mod_management/views/ModList.tsx:723:        { value: true, label: this.props.t('Enabled') },
src/extensions/mod_management/views/ModList.tsx:724:        { value: false, label: this.props.t('Disabled') },
src/extensions/mod_management/views/ModList.tsx:725:        { value: null, label: this.props.t('Uninstalled') },
src/extensions/mod_management/views/ModList.tsx:733:      help: getText('archivename', this.props.t),
src/extensions/mod_management/views/ModList.tsx:751:      help: getText('version', this.props.t),
src/extensions/mod_management/views/ModList.tsx:771:      help: getText('version', this.props.t),
src/extensions/mod_management/views/ModList.tsx:800:          return t('Up-to-date');
src/extensions/mod_management/views/ModList.tsx:802:          return t('Update available');
src/extensions/mod_management/views/ModList.tsx:812:      help: getText('variant', this.props.t),
src/extensions/mod_management/views/ModList.tsx:1003:      this.context.api.events.emit('start-install-download', modId);
src/extensions/mod_management/views/ModList.tsx:1050:        this.context.api.events.emit('start-install-download', modId, false, (err, id) => {
src/extensions/mod_management/views/ModList.tsx:1131:          this.context.api.events.emit('start-install-download', altId, true, (err, id) => {
src/extensions/mod_management/views/ModList.tsx:1185:        this.context.api.events.emit('start-install-download', modId, false, cb));
src/extensions/mod_management/views/ModList.tsx:1314:            this.context.api.events.emit('remove-download', archiveId);
src/extensions/mod_management/views/ModList.tsx:1344:          name += ' ' + t('(Archive only)');
src/extensions/mod_management/views/ModList.tsx:1352:      ? [ { id: 'archive', text: t('Delete Archive'), value: true } ]
src/extensions/mod_management/views/ModList.tsx:1354:        { id: 'mod', text: t('Remove Mod'), value: true },
src/extensions/mod_management/views/ModList.tsx:1355:        { id: 'archive', text: t('Delete Archive'), value: false },
src/extensions/mod_management/views/ModList.tsx:1358:    const insert = ' [style=dialog-danger-text]' + t('from all profiles') + '[/style]';
src/extensions/mod_management/views/ModList.tsx:1361:      bbcode: t('Do you really want to remove this mod{{insert}}?', {
src/extensions/mod_management/views/ModList.tsx:1391:      withBatchContext('install-mod', archiveIds, () => {
src/extensions/mod_management/views/ModList.tsx:1393:          return toPromise<string>(cb => this.context.api.events.emit('start-install-download', archiveId, {
src/extensions/mod_management/views/ModList.tsx:1409:      this.context.api.events.emit('start-install-download', archiveIds);
src/extensions/mod_management/views/ModList.tsx:1419:        this.context.api.events.emit('start-install-download', archiveId, options, undefined));
src/extensions/mod_management/views/ModList.tsx:1421:      this.context.api.events.emit('start-install-download', archiveIds, options, undefined);
src/extensions/mod_management/views/ModList.tsx:1442:            return toPromise(cb => this.context.api.events.emit('start-install-download',
src/extensions/mod_management/views/ModList.tsx:1460:              this.context.api.events.emit('mods-enabled', enabled, true, gameMode);
src/extensions/mod_management/views/ModList.tsx:1466:      this.context.api.events.emit('start-install-download', mods[modIds].archiveId,
src/extensions/mod_management/views/ModList.tsx:1472:            this.context.api.events.emit('mods-enabled', [modIds], true, gameMode);
src/extensions/mod_management/views/ModList.tsx:1484:      return t('You can only combine installed mods') ;
src/extensions/mod_management/views/ModList.tsx:1488:      return t('Try again after installing dependencies');
src/extensions/mod_management/views/ModList.tsx:1511:    this.context.api.events.emit('import-downloads', values, (dlIds: string[]) => {
src/extensions/mod_management/views/ModList.tsx:1514:          this.context.api.events.emit('start-install-download', dlId);
src/extensions/mod_management/views/Settings.tsx:154:              {t('Defaults')}
src/extensions/mod_management/views/Settings.tsx:157:              {t('Automatically use suggested path for staging folder')}
src/extensions/mod_management/views/Settings.tsx:159:                {t('Usually, when you first manage a game, the staging folder is initially set to be in '
src/extensions/mod_management/views/Settings.tsx:180:        gameName = gameName.split('\t').map(part => t(part)).join(' ');
src/extensions/mod_management/views/Settings.tsx:187:              t('Mod Staging Folder ({{name}})',
src/extensions/mod_management/views/Settings.tsx:207:              {t('Deployment Method')}
src/extensions/mod_management/views/Settings.tsx:208:              <More id='more-deploy' name={t('Deployment')} >
src/extensions/mod_management/views/Settings.tsx:209:                {getText('deployment', t)}
src/extensions/mod_management/views/Settings.tsx:220:          text={t('This screen will have more options once you start managing a game.')}
src/extensions/mod_management/views/Settings.tsx:221:          subtext={t('Most settings here can be configured for each game individually.')}
src/extensions/mod_management/views/Settings.tsx:271:    return withContext('Transferring Staging', `from ${oldPath} to ${newPath}`,
src/extensions/mod_management/views/Settings.tsx:419:    this.nextState.busy = t('Calculating required disk space');
src/extensions/mod_management/views/Settings.tsx:425:        this.nextState.busy = t('Purging previous deployment');
src/extensions/mod_management/views/Settings.tsx:430:          this.nextState.busy = t('Moving mod staging folder');
src/extensions/mod_management/views/Settings.tsx:449:          bbcode: t('The mods staging folder has been copied [b]successfully[/b] to '
src/extensions/mod_management/views/Settings.tsx:498:              t('Vortex has encountered a corrupted and unreadable file/directory '
src/extensions/mod_management/views/Settings.tsx:613:      this.context.api.events.emit('purge-mods', true, err => err !== null
src/extensions/mod_management/views/Settings.tsx:778:          <More id='more-paths' name={t('Mod Staging Folder')} >
src/extensions/mod_management/views/Settings.tsx:779:            {getText('modspath', t)}
src/extensions/mod_management/views/Settings.tsx:795:                  tooltip={t('Browse')}
src/extensions/mod_management/views/Settings.tsx:807:                tooltip={t('This will suggest a path that puts the mods on the same drive as the game')}
src/extensions/mod_management/views/Settings.tsx:809:                {t('Suggest')}
src/extensions/mod_management/views/Settings.tsx:815:                {hasModActivity ? <Spinner /> : t('Apply')}
src/extensions/mod_management/views/Settings.tsx:909:            <h4 style={{ marginBottom: 0 }}>{t('No deployment method available.')}</h4>
src/extensions/mod_management/views/Settings.tsx:910:            <p style={{ marginTop: 0 }}>{t('See notification for more information.')}</p>
src/extensions/mod_management/views/Settings.tsx:925:              {changingActivator ? <Spinner /> : t('Apply')}
src/extensions/mod_management/views/URLInput.tsx:46:        tooltip={t('Open website in your browser')}
src/extensions/mod_management/views/VersionChangelogButton.tsx:59:        title={t('Changelogs')}
src/extensions/mod_management/views/VersionChangelogButton.tsx:65:          <ControlLabel>{t('Current Version')}</ControlLabel>
src/extensions/mod_management/views/VersionChangelogButton.tsx:71:          <ControlLabel>{t('Newest Version')}</ControlLabel>
src/extensions/mod_management/views/VersionChangelogButton.tsx:86:          tooltip={t('Changelog')}
src/extensions/mod_management/views/VersionChangelogButton.tsx:102:        return <p>{t('Parsing the changelog failed')}</p>;
src/extensions/mod_management/views/VersionIconButton.tsx:58:        return t('This mod has no source assigned. The source tells Vortex where the mod '
src/extensions/mod_management/views/VersionIconButton.tsx:72:        return t('Mod should be updated because the installed version is bugged');
src/extensions/mod_management/views/VersionIconButton.tsx:74:        return t('Mod should be disabled or downgraded because this version has been '
src/extensions/mod_management/views/VersionIconButton.tsx:76:      case 'update': return t('Mod can be updated (Current version: {{newVersion}})', {
src/extensions/mod_management/views/VersionIconButton.tsx:80:        return t('Mod can be updated (but you will have to pick the file yourself)');
src/extensions/mod_management/views/VersionIconButton.tsx:82:        return t('The newest file is already downloaded.');
src/extensions/mod_management/views/VersionIconButton.tsx:109:        this.context.api.events.emit('collection-update',
src/extensions/mod_management/views/VersionIconButton.tsx:113:        this.context.api.events.emit('mod-update',
src/extensions/mod_management/views/VersionIconButton.tsx:118:        this.context.api.events.emit('open-collection-page',
src/extensions/mod_management/views/VersionIconButton.tsx:123:        this.context.api.events.emit('open-mod-page',
src/extensions/mod_management/views/Workarounds.tsx:33:          <ControlLabel>{t('Clean up empty directories ')}</ControlLabel>
src/extensions/mod_management/views/Workarounds.tsx:38:            {t('Clean up empty directories during deployment')}
src/extensions/mod_management/views/Workarounds.tsx:41:            {t('By default Vortex will only remove empty directories during deployment '
src/extensions/mod_spotlights_dashlet/index.ts:108:  context.registerDashlet('Mods Spotlight', 1, 3, 2, ModSpotlightsDashlet, (state: IState) => true, () => ({
src/extensions/mod_spotlights_dashlet/ModSpotlightsDashlet.tsx:59:      {dir === 'left' ? '◄ ' + `${t('Previous')}` : `${t('Next')}` + ' ►'}
src/extensions/move_activator/index.ts:66:      return { description: t => t('Game not discovered.') };
src/extensions/move_activator/index.ts:76:    return { description: t => t('Game doesn\'t support the move deployment method') };
src/extensions/move_activator/index.ts:87:        solution: t => t('To resolve this problem, the current user account needs to '
src/extensions/move_activator/index.ts:101:          description: t => t('Works only if mods are installed on the same drive as the game'),
src/extensions/move_activator/index.ts:110:            return t('Please go to Settings->Mods and set the mod staging folder to be on '
src/extensions/move_activator/index.ts:118:            api.events.emit('show-main-page', 'application_settings');
src/extensions/move_activator/index.ts:131:      return { description: t => t('Game not fully initialized yet, this should disappear soon.') };
src/extensions/news_dashlet/BaseDashlet.tsx:60:    context.api.events.emit('analytics-track-click-event', 'Dashboard', `View ${title}`);
src/extensions/news_dashlet/BaseDashlet.tsx:95:          tooltip={t('Refresh')}
src/extensions/news_dashlet/BaseDashlet.tsx:100:      {error !== undefined ? <Alert>{t('No messages received')}</Alert> : null}
src/extensions/news_dashlet/BaseDashlet.tsx:110:          subtext={t('*crickets chirp*')}
src/extensions/news_dashlet/index.ts:11:  context.registerDashlet('News', 1, 3, 250, RSSDashlet, undefined, () => ({
src/extensions/news_dashlet/index.ts:12:    title: t('Latest News'),
src/extensions/news_dashlet/index.ts:13:    emptyText: t('No News'),
src/extensions/news_dashlet/index.ts:27:        title: t('New Files'),
src/extensions/news_dashlet/index.ts:28:        emptyText: t('No New Files'),
src/extensions/news_dashlet/index.ts:42:      title: t('New Files'),
src/extensions/news_dashlet/index.ts:43:      emptyText: t('No New Files'),
src/extensions/news_dashlet/index.ts:50:      title: t('Trending Files'),
src/extensions/news_dashlet/index.ts:51:      emptyText: t('No Trending Files'),
src/extensions/nexus_integration/attributes.tsx:54:    api.events.emit('open-mod-page', fileGameId, mod.attributes?.modId, mod.attributes.source);
src/extensions/nexus_integration/attributes.tsx:205:        ? <p>{(mod.attributes?.collectionId ?? t('Not published'))}</p>
src/extensions/nexus_integration/eventHandlers.ts:426:          api.events.emit('start-install-download', downloadId);
src/extensions/nexus_integration/eventHandlers.ts:744:          urlParsed.searchParams.set('campaign', campaign);
src/extensions/nexus_integration/eventHandlers.ts:756:            return toPromise(cb => api.events.emit('resume-download', existingId, cb))
src/extensions/nexus_integration/eventHandlers.ts:773:            urlParsed.searchParams.set('campaign', campaign);
src/extensions/nexus_integration/index.tsx:192:                that.mApi.events.emit('did-login', null);
src/extensions/nexus_integration/index.tsx:341:          api.events.emit('update-categories', gameId, categories, isUpdate);
src/extensions/nexus_integration/index.tsx:647:          return api.emitAndAwait('install-extension',
src/extensions/nexus_integration/index.tsx:650:          api.events.emit('show-extension-page', nxmUrl.modId);
src/extensions/nexus_integration/index.tsx:707:            api.events.emit('start-install-download', dlId, (err: Error, id: string) => {
src/extensions/nexus_integration/index.tsx:832:              category: (modFileInfo.mod.modCategory.id.toString()).split(',')[0],
src/extensions/nexus_integration/index.tsx:1181:                {t('Go Premium')}
src/extensions/nexus_integration/index.tsx:1597:        api.events.emit('free-user-skipped-download', itemIdentifiers);
src/extensions/nexus_integration/index.tsx:1699:          context.api.events.emit('open-collection-page',
src/extensions/nexus_integration/index.tsx:1704:          context.api.events.emit('open-mod-page',
src/extensions/nexus_integration/index.tsx:1713:            context.api.events.emit('open-collection-page',
src/extensions/nexus_integration/index.tsx:1718:            context.api.events.emit('open-mod-page',
src/extensions/nexus_integration/index.tsx:1753:    context.api.events.emit('refresh-user-info');
src/extensions/nexus_integration/index.tsx:1845:          {t('Unlock max download speeds')}
src/extensions/nexus_integration/index.tsx:1888:  context.registerDashlet('Nexus Mods Account Banner', 3, 1, 0, DashboardBanner,
src/extensions/nexus_integration/index.tsx:1895:  context.registerDashlet('Go Premium', 1, 2, 200, GoPremiumDashlet, (state: IState) =>
src/extensions/nexus_integration/NXMUrl.ts:69:      this.mOAuthCode = parsed.searchParams.get('code');
src/extensions/nexus_integration/NXMUrl.ts:70:      this.mOAuthState = parsed.searchParams.get('state');
src/extensions/nexus_integration/NXMUrl.ts:77:    this.mKey = parsed.searchParams.get('key') || undefined;
src/extensions/nexus_integration/NXMUrl.ts:78:    const exp = parsed.searchParams.get('expires') || undefined;
src/extensions/nexus_integration/NXMUrl.ts:80:    const userId = parsed.searchParams.get('user_id') || undefined;
src/extensions/nexus_integration/NXMUrl.ts:82:    const view = parsed.searchParams.get('view') ?? '0';
src/extensions/nexus_integration/util/guessModID.ts:55:        + t('{{fileName}} (Version {{version}}) ({{game}}, Mod {{modId}}, File {{fileId}})', {
src/extensions/nexus_integration/util/guessModID.ts:186:                      bbcode: t('The version of this mod ("{{modName}}") is "{{version}}". Is this correct?[br][/br][br][/br]'
src/extensions/nexus_integration/util/guessModID.ts:214:                return api.emitAndAwait('set-download-games', mod.archiveId,
src/extensions/nexus_integration/util/oauth.ts:106:    const uuid = (await import('uuid/v1')).default;
src/extensions/nexus_integration/util/oauth.ts:107:    const crypto = (await import('crypto')).default;
src/extensions/nexus_integration/util/oauth.ts:115:    const challenge = crypto.createHash('sha256').update(this.mVerifier).digest('base64');
src/extensions/nexus_integration/util/tracking.tsx:142:          tooltip={t('Mod Tracked')}
src/extensions/nexus_integration/util.ts:114:  api.events.emit('did-login', new UserCanceled());
src/extensions/nexus_integration/util.ts:352:    api.events.emit('show-extension-page', url.modId);
src/extensions/nexus_integration/util.ts:395:      return toPromise<string>(cb => api.events.emit('start-download',
src/extensions/nexus_integration/util.ts:414:    .tap(dlId => api.events.emit('did-download-collection', dlId))
src/extensions/nexus_integration/util.ts:561:    id: [graphqlFile.fileId || parseInt(graphqlFile.uid?.split(':')[2], 10) || 0],
src/extensions/nexus_integration/util.ts:562:    file_id: graphqlFile.fileId || parseInt(graphqlFile.uid?.split(':')[2], 10) || 0,
src/extensions/nexus_integration/util.ts:653:        api.events.emit('start-download', [urlStr], {
src/extensions/nexus_integration/util.ts:698:                api.events.emit('start-install-download', downloadId, undefined,
src/extensions/nexus_integration/util.ts:724:          message: t('The operation completed successfully, but the file could not be processed. '
src/extensions/nexus_integration/util.ts:738:            ? t('You need to be logged in to Nexus Mods.')
src/extensions/nexus_integration/util.ts:739:            : t('The link was not created for this account ({{ userName }}). You have to be logged '
src/extensions/nexus_integration/util.ts:888:    return t('You can\'t endorse a mod that has no version set.');
src/extensions/nexus_integration/util.ts:1574:      api.events.emit('did-login', err);
src/extensions/nexus_integration/util.ts:1597:      api.events.emit('did-login', err);
src/extensions/nexus_integration/util.ts:1614:      api.events.emit('did-login', err);
src/extensions/nexus_integration/util.ts:1632:      api.events.emit('did-login', err);
src/extensions/nexus_integration/util.ts:1650:      api.events.emit('did-login', err);
src/extensions/nexus_integration/views/DashboardBanner.tsx:59:        <div className='nexus-login-heading'>{t('Register or Log In')}</div>
src/extensions/nexus_integration/views/DashboardBanner.tsx:61:          {t('Log In using your Nexus Mods account or register a new account '
src/extensions/nexus_integration/views/DashboardBanner.tsx:65:          {(requested || (loginId !== undefined)) ? <Spinner /> : t('Log In or Register')}
src/extensions/nexus_integration/views/DashboardBanner.tsx:95:                ? t('Premium')
src/extensions/nexus_integration/views/DashboardBanner.tsx:97:                  ? t('Supporter')
src/extensions/nexus_integration/views/DashboardBanner.tsx:98:                  : t('Member')
src/extensions/nexus_integration/views/DashboardBanner.tsx:101:            <a onClick={this.openProfile}>{t('See Profile')}</a>
src/extensions/nexus_integration/views/DashboardBanner.tsx:113:    this.context.api.events.emit('request-nexus-login', (err: Error) => {
src/extensions/nexus_integration/views/EndorsementFilter.tsx:24:        placeholder={t('Select...')}
src/extensions/nexus_integration/views/EndorseModButton.tsx:35:      undecided: { icon: 'endorse-maybe', tooltip: t('Undecided') },
src/extensions/nexus_integration/views/EndorseModButton.tsx:36:      abstained: { icon: 'endorse-maybe', tooltip: t('Abstained') },
src/extensions/nexus_integration/views/EndorseModButton.tsx:37:      endorsed: { icon: 'endorse-yes', tooltip: t('Endorsed') },
src/extensions/nexus_integration/views/EndorseModButton.tsx:38:      disabled: { icon: 'endorse-disabled', tooltip: t('Endorsement disabled by author') },
src/extensions/nexus_integration/views/EndorseModButton.tsx:39:      blocked: { icon: 'endorse-disabled', tooltip: t('You have been blocked by the curator.') },
src/extensions/nexus_integration/views/EndorseModButton.tsx:40:    }[endorsedStatus.toLowerCase()] || { icon: 'like-maybe', tooltip: t('Undecided') };
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:63:        summary: t('N/A'),
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:64:        name: t('Mod with id {{modId}}', { modId: url.modId }),
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:67:          name: t('N/A'),
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:74:      name: t('N/A'),
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:194:    context.api.events.emit('analytics-track-click-event', 'Go Premium', 'Download Mod');
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:207:          {t('Download mod')}
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:220:        <Button id='cancel-button' onClick={cancel}>{t('Cancel install')}</Button>
src/extensions/nexus_integration/views/FreeUserDLDialog.tsx:221:        <Button id='skip-button' onClick={skip}>{t('Skip mod')}</Button>
src/extensions/nexus_integration/views/GoPremiumDashlet.tsx:28:            {t('Go Premium')}
src/extensions/nexus_integration/views/GoPremiumDashlet.tsx:37:    this.context.api.events.emit('analytics-track-click-event', 'Go Premium', 'Dashlet');
src/extensions/nexus_integration/views/LoginDialog.tsx:71:          {t('Vortex should have opened the following url in your default browser. '
src/extensions/nexus_integration/views/LoginDialog.tsx:84:              tooltip={t('Copy to clipboard')}
src/extensions/nexus_integration/views/LoginDialog.tsx:158:            tooltip={t('Close')}
src/extensions/nexus_integration/views/LoginDialog.tsx:184:            <h2>{t('Log in or register on the Nexus Mods website')}</h2>
src/extensions/nexus_integration/views/LoginDialog.tsx:185:            <p>{t('To access this content, please login to the Nexus Mods website.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:186:            <p>{t('Click the button below to start the login/registration process.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:187:            <Button tooltip={t('Start login')} onClick={this.login}>{t('Login')}</Button>
src/extensions/nexus_integration/views/LoginDialog.tsx:200:            tooltip={t('Please click "Authorise" on the website')}
src/extensions/nexus_integration/views/LoginDialog.tsx:205:              {t('Please click "Authorise" on the website')}
src/extensions/nexus_integration/views/LoginDialog.tsx:213:            {t('Not working? Try manual login.')}
src/extensions/nexus_integration/views/LoginDialog.tsx:219:        <h2>{t('Log in or register on the Nexus Mods website')}</h2>
src/extensions/nexus_integration/views/LoginDialog.tsx:225:          <h4>{t('Please click "authorise" on the website')}</h4>
src/extensions/nexus_integration/views/LoginDialog.tsx:228:        <h3>{t('Website didn\'t open?')}</h3>
src/extensions/nexus_integration/views/LoginDialog.tsx:230:        <p>{t('Copy the following address into your browser window. We support Chrome, Safari, Firefox and Edge.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:234:        <p>{t('Still not working?')} <a 
src/extensions/nexus_integration/views/LoginDialog.tsx:236:          onClick={this.troubleshoot}>{t('Log in with token')}
src/extensions/nexus_integration/views/LoginDialog.tsx:260:        <h2>{t('Log in with token')}</h2>
src/extensions/nexus_integration/views/LoginDialog.tsx:264:        <p>{t('Copy the following address into your browser and log in/register if required (skip this step if you already have the token). We support Chrome, Safari, Firefox and Edge.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:270:        <p>{t('Click "Authorise" on the website and you will be given a token, copy and paste the token below and click save.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:278:              tooltip={t('Save')}
src/extensions/nexus_integration/views/LoginDialog.tsx:282:              {t('Save')}
src/extensions/nexus_integration/views/LoginDialog.tsx:286:            <p className='login-invalid-key-danger'>{t('Your token was not recognised.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:287:              <p className='login-invalid-key-details'>{t('Please try again. Copy the token using the button on the website.')}</p>
src/extensions/nexus_integration/views/LoginDialog.tsx:388:    this.context.api.events.emit('request-nexus-login', (err: Error) => {
src/extensions/nexus_integration/views/LoginIcon.tsx:57:          <tooltip.Icon name='disconnected' tooltip={t('Network is offline')} />
src/extensions/nexus_integration/views/LoginIcon.tsx:141:        tooltip={loggedIn ? t('Show Details') : t('Log in')}
src/extensions/nexus_integration/views/LoginIcon.tsx:162:      this.context.api.events.emit('analytics-track-click-event', 'Profile', 'Site profile');
src/extensions/nexus_integration/views/LoginIcon.tsx:171:    this.context.api.events.emit('request-nexus-login', (err: Error) => { 
src/extensions/nexus_integration/views/NewFreeDownloadModal.tsx:77:                <Button id='download-mod-button' onClick={onDownload}>{t('Download manually')}</Button>
src/extensions/nexus_integration/views/NewFreeDownloadModal.tsx:96:                  {t('Auto-download all')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:165:                {t('File Hash')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:166:                <More id='file-hash' name={t('File Hash (MD5)')}>
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:167:                  {t('A hash can be calculated from any mod archive on disk and we can '
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:177:                  placeholder={t('e.g. {{sample}}',
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:186:                    tooltip={t('Calculate hash (can take a moment)')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:188:                    {t('Fetch')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:195:                {t('Mod ID')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:196:                <More id='nexus-mod-id' name={t('Mod ID')}>
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:197:                  {t('The mod id identifies a mod page on nexus mods. It helps us find '
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:207:                  placeholder={t('e.g. {{sample}}', { replace: { sample: '1337' }})}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:214:                    tooltip={t('Look up by file hash')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:216:                    {t('Query Server')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:221:                    tooltip={t('Guess the mod id based on the file name')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:223:                    {t('Guess')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:230:                {t('File ID')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:231:                <More id='nexus-file' name={t('File ID')}>
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:232:                  {t('The file id identifies a specific file. We need this to check for '
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:242:                  placeholder={t('e.g. {{sample}}', { replace: { sample: '1337' }})}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:249:                    ? t('Look up')
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:250:                    : t('Look up. May fail if the mod has been hidden/archived by the author.')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:252:                  {t('Query Server')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:258:        <Button onClick={cancel} tooltip={t('Close')}>{t('Close')}</Button>
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:260:        <Button disabled={!changeMade} onClick={save} tooltip={t('Save changes')}>
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:261:          {t('Apply')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:267:      ? t('No mod id') as string
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:269:      ? t('No file id') as string
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:277:          tooltip={(valid === true) ? t('Mod identified') : t('Mod not identified correctly')}
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:280:        <IconButton icon='edit' tooltip={t('Edit')} onClick={startEdit} className='btn-embed' />
src/extensions/nexus_integration/views/NexusModIdDetail.tsx:285:              tooltip={t('Open on Nexus Mods')}
src/extensions/nexus_integration/views/Settings.tsx:62:    this.mHelpText = getText('chrome-fix', this.props.t);
src/extensions/nexus_integration/views/Settings.tsx:76:            {t('Handle Mod Manager Download buttons on')} <a onClick={this.openNexus}>nexusmods.com</a> (nxm:// links)
src/extensions/nexus_integration/views/Settings.tsx:82:            ? <HelpBlock><Alert bsStyle='info'>{t('Not supported on Linux')}</Alert></HelpBlock>
src/extensions/nexus_integration/views/Settings.tsx:86:            {t('Fix Nexus Mods links in Chrome '
src/extensions/nexus_integration/views/Settings.tsx:88:            <More id='more-chrome-fix' name={t('Chrome Fix')}>
src/extensions/nexus_integration/views/Settings.tsx:92:              tooltip={t('Fix')}
src/extensions/nexus_integration/views/Settings.tsx:97:              {t('Fix Now')}
src/extensions/null_activator/index.ts:19:    return t('This deployment method does nothing during deployment (although extensions may still '
src/extensions/null_activator/index.ts:28:        description: t => t('Only supported for games that can use mods directly from the staging folder'),
src/extensions/onboarding_dashlet/Dashlet.tsx:108:          : <Dashlet title={t('Get Started')} className='dashlet-onboarding'>
src/extensions/onboarding_dashlet/Dashlet.tsx:110:              {t('Watch these videos to guide you on how to start modding your favorite games.')}
src/extensions/onboarding_dashlet/Dashlet.tsx:153:          &#127881; {t('Congratulations, you\'ve made it!')}
src/extensions/onboarding_dashlet/Dashlet.tsx:156:          {t('Now you are all set up to enjoy Vortex and start modding!')}
src/extensions/onboarding_dashlet/Dashlet.tsx:166:            {t('Get more mods')}
src/extensions/onboarding_dashlet/Dashlet.tsx:170:          <a onClick={resetAllSteps}>{t('Watch again')}</a>
src/extensions/onboarding_dashlet/Dashlet.tsx:171:          <a onClick={closeDashlet}>{t('Hide')}</a>
src/extensions/onboarding_dashlet/index.ts:17:  context.registerDashlet('Onboarding', 2, 3, 0, Dashlet, state => {
src/extensions/onboarding_dashlet/views/Overlay.tsx:52:          {isCompleted ? t('Completed') : t('Mark as complete')}
src/extensions/profile_management/actions/profiles.ts:51:      ppFunc = api.withPrePost('enable-mods',
src/extensions/profile_management/actions/profiles.ts:57:              api.events.emit('mods-enabled', modIds, enable, profile.gameId, options);
src/extensions/profile_management/index.ts:236:    api.events.emit('deploy-mods', onceCB((err: Error) => {
src/extensions/profile_management/index.ts:367:      api.events.emit('profile-will-change', current, enqueue);
src/extensions/profile_management/index.ts:480:            .then(() => api.emitAndAwait('install-extension', extension))
src/extensions/profile_management/index.ts:517:      api.events.emit('manually-set-game-location', gameId, (err: Error) => {
src/extensions/profile_management/index.ts:599:    api.events.emit('remove-mod', gameId, modId, err => {
src/extensions/profile_management/index.ts:616:  api.events.emit('analytics-track-event', 'Games', 'Stop managing', gameId);
src/extensions/profile_management/index.ts:724:      context.api.emitAndAwait('discover-game', gameId)
src/extensions/profile_management/index.ts:855:        context.api.events.emit('profile-did-change', current);
src/extensions/profile_management/index.ts:950:              context.api.events.emit('profile-did-change', initProfile.id);
src/extensions/profile_management/util/manage.ts:67:    removeProfilePP = api.withPrePost('remove-profile', (profileInner: IProfile) =>
src/extensions/profile_management/views/ProfileEdit.tsx:80:          {profile === undefined ? t('Create a new profile') : t('Edit profile')}
src/extensions/profile_management/views/ProfileEdit.tsx:84:            <Button bsStyle='primary' id='__accept' tooltip={t('Accept')} onClick={this.saveEdit}>
src/extensions/profile_management/views/ProfileEdit.tsx:85:              {t('Save')}
src/extensions/profile_management/views/ProfileEdit.tsx:87:            <Button bsStyle='secondary' id='__cancel' tooltip={t('Cancel')} onClick={onCancelEdit}>
src/extensions/profile_management/views/ProfileEdit.tsx:88:              {t('Cancel')}
src/extensions/profile_management/views/ProfileItem.tsx:121:      ? game.name.split('\t').map(part => t(part)).join(' ')
src/extensions/profile_management/views/ProfileItem.tsx:122:      : t('Unknown game {{ gameId }}', { replace: { gameId: profile.gameId } });
src/extensions/profile_management/views/ProfileItem.tsx:231:      return value === true ? t('yes') : t('no');
src/extensions/profile_management/views/ProfileView.tsx:118:            {t('Other Games')}
src/extensions/profile_management/views/ProfileView.tsx:120:            <a onClick={this.toggleOther}>{showOther ? t('Hide') : t('Show')}</a>
src/extensions/profile_management/views/ProfileView.tsx:140:        {t('Deployment in progress')}
src/extensions/profile_management/views/ProfileView.tsx:225:      ? t('Vortex profile shortcut saved to desktop')
src/extensions/profile_management/views/ProfileView.tsx:226:      : t('Failed to save profile shortcut to desktop');
src/extensions/profile_management/views/ProfileView.tsx:276:      gameName = gameName.split('\t').map(part => t(part)).join(' ');
src/extensions/profile_management/views/ProfileView.tsx:282:          {t('Add "{{ name }}" Profile', { replace: { name: gameName } })}
src/extensions/profile_management/views/ProfileView.tsx:313:    this.context.api.events.emit('analytics-track-click-event', 'Profile', `Add new profile`);
src/extensions/profile_management/views/TransferDialog.tsx:73:                {t('From: {{source}}', { replace: { source: profiles[dialog.source].name } })}
src/extensions/profile_management/views/TransferDialog.tsx:78:                tooltip={t('Swap profiles')}
src/extensions/profile_management/views/TransferDialog.tsx:82:                {t('To: {{target}}', { replace: { target: profiles[dialog.target].name } })}
src/extensions/profile_management/views/TransferDialog.tsx:89:              {t('Transfer Enabled Mods')}
src/extensions/profile_management/views/TransferDialog.tsx:94:          <Button onClick={this.close}>{t('Cancel')}</Button>
src/extensions/profile_management/views/TransferDialog.tsx:95:          <Button onClick={this.apply}>{t('Transfer')}</Button>
src/extensions/profile_management/views/TransferIcon.tsx:198:      popoverBlocks.push(t('Drag to another profile to transfer settings.'));
src/extensions/profile_management/views/TransferIcon.tsx:213:            tooltip={t('Drag to another profile to transfer settings.')}
src/extensions/recovery/Workarounds.tsx:40:        <div className='danger-heading'>{t('Caution')}</div>
src/extensions/recovery/Workarounds.tsx:43:            <ControlLabel>{t('Database backup')}</ControlLabel>
src/extensions/recovery/Workarounds.tsx:48:                {t('Restore') + '...'}
src/extensions/recovery/Workarounds.tsx:55:                {t('Create Backup')}
src/extensions/recovery/Workarounds.tsx:60:                {t('Vortex stores application settings as well as mod meta data and a lot '
src/extensions/recovery/Workarounds.tsx:70:                {t('You can have up to 3 backups: One is automatically created whenever Vortex '
src/extensions/recovery/Workarounds.tsx:88:      text: t('From file (DANGEROUS!)...'),
src/extensions/recovery/Workarounds.tsx:102:            text: t('Last successful startup ({{time}})', { replace: { time } }),
src/extensions/recovery/Workarounds.tsx:108:            text: t('Last hourly backup ({{time}})', { replace: { time } }),
src/extensions/recovery/Workarounds.tsx:114:            text: t('Last manual backup ({{time}})', { replace: { time } }),
src/extensions/settings_application/SettingsVortex.tsx:44:          {t('You need to restart Vortex to activate this change')}
src/extensions/settings_application/SettingsVortex.tsx:45:          <Button onClick={this.restart} style={{ marginLeft: '1em' }}>{t('Restart now')}</Button>
src/extensions/settings_application/SettingsVortex.tsx:54:            {t('Multi-User Mode')}
src/extensions/settings_application/SettingsVortex.tsx:55:            <More id='more-multi-user' name={t('Multi-User Mode')}>
src/extensions/settings_application/SettingsVortex.tsx:56:              {getText('multi-user', t)}
src/extensions/settings_application/SettingsVortex.tsx:64:            <option value='on'>{t('Shared')}</option>
src/extensions/settings_application/SettingsVortex.tsx:65:            <option value='off'>{t('Per-User')}</option>
src/extensions/settings_interface/index.ts:15:      context.api.events.emit('refresh-main-page');
src/extensions/settings_interface/index.ts:19:      context.api.events.emit('refresh-main-page');
src/extensions/settings_interface/SettingsInterface.tsx:125:        {t('Start Vortex in the background (Minimized)')}
src/extensions/settings_interface/SettingsInterface.tsx:132:          {t('You need to restart Vortex to activate this change')}
src/extensions/settings_interface/SettingsInterface.tsx:133:          <Button onClick={this.restart} style={{ marginLeft: '1em' }}>{t('Restart now')}</Button>
src/extensions/settings_interface/SettingsInterface.tsx:143:          <ControlLabel>{t('Language')}</ControlLabel>
src/extensions/settings_interface/SettingsInterface.tsx:159:            {t('When you select a language for the first time you may have to restart Vortex.')}
src/extensions/settings_interface/SettingsInterface.tsx:163:          <ControlLabel>{t('Customisation')}</ControlLabel>
src/extensions/settings_interface/SettingsInterface.tsx:170:                {t('Custom Window Title Bar')}
src/extensions/settings_interface/SettingsInterface.tsx:178:                {t('Enable Desktop Notifications')}
src/extensions/settings_interface/SettingsInterface.tsx:186:                {t('Hide Top-Level Category')}
src/extensions/settings_interface/SettingsInterface.tsx:187:                <More id='more-hide-toplevel-category' name={t('Top-Level Categories')}>
src/extensions/settings_interface/SettingsInterface.tsx:188:                  {getText('toplevel-categories', t)}
src/extensions/settings_interface/SettingsInterface.tsx:197:                {t('Use relative times (e.g. "3 months ago")')}
src/extensions/settings_interface/SettingsInterface.tsx:206:              {t('Bring Vortex to foreground when starting downloads in browser')}
src/extensions/settings_interface/SettingsInterface.tsx:211:          <ControlLabel>{t('Advanced')}</ControlLabel>
src/extensions/settings_interface/SettingsInterface.tsx:219:                {t('Enable Advanced Mode')}
src/extensions/settings_interface/SettingsInterface.tsx:220:                <More id='more-advanced-settings' name={t('Advanced')}>
src/extensions/settings_interface/SettingsInterface.tsx:221:                  {getText('advanced', t)}
src/extensions/settings_interface/SettingsInterface.tsx:231:                {t('Enable Profile Management')}
src/extensions/settings_interface/SettingsInterface.tsx:232:                <More id='more-profile-settings' name={t('Profiles')} wikiId='profiles'>
src/extensions/settings_interface/SettingsInterface.tsx:242:                {t('Enable GPU Acceleration')}
src/extensions/settings_interface/SettingsInterface.tsx:247:                    {t('Disabling GPU acceleration will make the Vortex UI significantly less '
src/extensions/settings_interface/SettingsInterface.tsx:256:          <ControlLabel>{t('Automation')}</ControlLabel>
src/extensions/settings_interface/SettingsInterface.tsx:262:              {t('Deploy Mods when Enabled')}
src/extensions/settings_interface/SettingsInterface.tsx:263:              <More id='more-deploy-settings' name={t('Deployment')}>
src/extensions/settings_interface/SettingsInterface.tsx:264:                {getTextModManagement('deployment', t)}
src/extensions/settings_interface/SettingsInterface.tsx:271:              {t('Install Mods when downloaded')}
src/extensions/settings_interface/SettingsInterface.tsx:277:              {t('Enable Mods when installed (in current profile)')}
src/extensions/settings_interface/SettingsInterface.tsx:283:              {t('Run Vortex when my computer starts')}
src/extensions/settings_interface/SettingsInterface.tsx:289:          <ControlLabel>{t('Notifications')}</ControlLabel>
src/extensions/settings_interface/SettingsInterface.tsx:291:            <Button onClick={this.resetSuppression}>{t('Reset suppressed notifications')}</Button>
src/extensions/settings_interface/SettingsInterface.tsx:293:            {t('({{count}} notification is being suppressed)',
src/extensions/settings_interface/SettingsInterface.tsx:321:      ? this.context.api.emitAndAwait('install-extension', ext)
src/extensions/settings_interface/SettingsInterface.tsx:350:        ? ` (${t('Extension')} by ${ext['author'] || 'unknown author'})`
src/extensions/settings_interface/SettingsInterface.tsx:420:      onShowDialog('question', t('Disabling Profile Management'), {
src/extensions/settings_interface/SettingsInterface.tsx:421:        text: t('Please be aware that toggling this only disables the interface for profiles, '
src/extensions/settings_interface/SettingsInterface.tsx:554:        const [languageKey, countryKey] = key.split('-');
src/extensions/settings_metaserver/SettingsMetaserver.tsx:135:              tooltip={t('Remove')}
src/extensions/settings_metaserver/SettingsMetaserver.tsx:208:            tooltip={t('Add a Metaserver')}
src/extensions/settings_metaserver/SettingsMetaserver.tsx:284:            {t('Meta Server')}
src/extensions/settings_metaserver/SettingsMetaserver.tsx:285:            <More id='more-metaserver' name={t('Meta Server')}>
src/extensions/settings_metaserver/SettingsMetaserver.tsx:286:              {getText('meta-server', t)}
src/extensions/settings_metaserver/SettingsMetaserver.tsx:298:          <HelpBlock>{t('Servers to query for meta data.')}</HelpBlock>
src/extensions/starter_dashlet/AddToolButton.tsx:100:        <div className='btn-add-tool-text'>{t('Add Tool')}</div>
src/extensions/starter_dashlet/AddToolButton.tsx:122:          {t('New...')}
src/extensions/starter_dashlet/EnvButton.tsx:57:          placeholder={t('Key')}
src/extensions/starter_dashlet/EnvButton.tsx:64:          placeholder={t('Value')}
src/extensions/starter_dashlet/EnvButton.tsx:71:            tooltip={t('Apply')}
src/extensions/starter_dashlet/EnvButton.tsx:83:          tooltip={t('Add')}
src/extensions/starter_dashlet/EnvButton.tsx:97:              tooltip={t('Edit')}
src/extensions/starter_dashlet/EnvButton.tsx:103:              tooltip={t('Remove')}
src/extensions/starter_dashlet/index.ts:76:    return api.emitAndAwait('discover-tools', gameMode);
src/extensions/starter_dashlet/index.ts:88:  context.registerDashlet('Tools', 2, 2, 100, Tools, undefined,
src/extensions/starter_dashlet/index.ts:95:  context.registerTest('primary-tool', 'gamemode-activated',
src/extensions/starter_dashlet/ToolButton.tsx:62:      condition: () => valid ? true : t('Not configured') as string,
src/extensions/starter_dashlet/ToolButton.tsx:68:      condition: () => (primary || valid) ? true : t('Not configured') as string,
src/extensions/starter_dashlet/ToolButton.tsx:110:          {running ? <div className='tool-icon-running'>{t('Running...')}</div> : null}
src/extensions/starter_dashlet/ToolEditDialog.tsx:66:  let exePathPlaceholder = t('Target');
src/extensions/starter_dashlet/ToolEditDialog.tsx:148:      title: t('Select image'),
src/extensions/starter_dashlet/ToolEditDialog.tsx:178:    context.api.events.emit('analytics-track-click-event', 'Tools', 'Edited tool');
src/extensions/starter_dashlet/ToolEditDialog.tsx:193:            label={t('Name')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:194:            placeholder={t('Name')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:204:              label={t('Target')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:214:                label={t('Target')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:226:            label={t('Command Line')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:227:            placeholder={t('Command Line Parameters')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:236:              label={t('Start In')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:239:                : t('Select the executable first')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:252:              <ControlLabel>{t('Environment Variables')}</ControlLabel>
src/extensions/starter_dashlet/ToolEditDialog.tsx:264:                  {t('Tools with environments can\'t be started from the "Tasks" list')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:271:              <ControlLabel>{t('Icon')}</ControlLabel>
src/extensions/starter_dashlet/ToolEditDialog.tsx:277:                  tooltip={t('Change')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:293:                {t('On Start')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:294:                <More id='on-start' name={t('On Start behavior')}>
src/extensions/starter_dashlet/ToolEditDialog.tsx:295:                  {t('Use these options if you don\'t want to leave the Vortex window '
src/extensions/starter_dashlet/ToolEditDialog.tsx:320:                  {t('Nothing')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:325:                  {t('Hide Vortex')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:330:                  {t('Hide Vortex, restore when closed')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:335:                  {t('Close Vortex')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:343:                {t('Run in shell')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:344:                <More id='run-in-shell' name={t('Run in shell')}>
src/extensions/starter_dashlet/ToolEditDialog.tsx:345:                  {t('If (and only if!) a tool is written as a console '
src/extensions/starter_dashlet/ToolEditDialog.tsx:359:                {t('Run detached')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:360:                <More id='run-detached' name={t('Run detached')}>
src/extensions/starter_dashlet/ToolEditDialog.tsx:361:                  {t('Run the tool as a detached process (default). When you disable this '
src/extensions/starter_dashlet/ToolEditDialog.tsx:373:          tooltip={t('Cancel')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:376:          {t('Cancel')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:380:          tooltip={t('Save')}
src/extensions/starter_dashlet/ToolEditDialog.tsx:383:          {t('Save')}
src/extensions/starter_dashlet/Tools.tsx:122:    context.api.events.emit('analytics-track-event', 'Tools', 'Drag above/below', 'Rearranged tools', names.join());
src/extensions/starter_dashlet/Tools.tsx:141:    context.api.events.emit('analytics-track-click-event', 'Tools', 'Add tool');
src/extensions/starter_dashlet/Tools.tsx:150:    context.api.events.emit('analytics-track-click-event', 'Tools', 'Manually ran tool');
src/extensions/starter_dashlet/Tools.tsx:159:    context.api.events.emit('analytics-track-click-event', 'Tools', 'Removed tool');
src/extensions/starter_dashlet/Tools.tsx:167:      context.api.events.emit('analytics-track-click-event', 'Tools', 'Selected new primary tool');
src/extensions/starter_dashlet/Tools.tsx:217:        text={t('When you are managing a game, supported tools will appear here')}
src/extensions/starter_dashlet/Tools.tsx:227:          <div className='dashlet-title'>{t('Tools')}</div>
src/extensions/symlink_activator/index.ts:61:        description: t => t('Incompatible with "{{name}}".', {
src/extensions/symlink_activator/index.ts:72:      return { description: t => t('Game not discovered.') };
src/extensions/symlink_activator/index.ts:80:      return { description: t => t('Game doesn\'t support symlinks') };
src/extensions/symlink_activator/index.ts:86:        return { description: t => t('Requires admin rights on windows.') };
src/extensions/symlink_activator/index.ts:110:          description: t => t('Filesystem doesn\'t support symbolic links.'),
src/extensions/symlink_activator/index.ts:115:          description: t => t('Filesystem doesn\'t support symbolic links. Error: "{{error}}"',
src/extensions/symlink_activator_elevate/index.ts:219:      return { description: t => t('Elevation not required on non-windows systems') };
src/extensions/symlink_activator_elevate/index.ts:229:      return { description: t => t('Game doesn\'t support symlinks') };
src/extensions/symlink_activator_elevate/index.ts:235:        description: t => t('Incompatible with "{{name}}".', {
src/extensions/symlink_activator_elevate/index.ts:245:          t('No need to use the elevated variant, use the regular symlink deployment'),
src/extensions/symlink_activator_elevate/index.ts:568:      this.emit('quit', {});
src/extensions/symlink_activator_elevate/index.ts:636:          client.emit('error', error.message);
src/extensions/symlink_activator_elevate/index.ts:657:  const projectRoot = getVortexPath('modules_unpacked').split('\\').join('/');
src/extensions/symlink_activator_elevate/remoteCode.ts:35:            emit('log', {
src/extensions/symlink_activator_elevate/remoteCode.ts:40:            emit('completed', { err: null, num });
src/extensions/symlink_activator_elevate/remoteCode.ts:44:              emit('report', 'not-supported');
src/extensions/symlink_activator_elevate/remoteCode.ts:46:            emit('completed', {
src/extensions/symlink_activator_elevate/remoteCode.ts:65:            emit('completed', { err: null, num });
src/extensions/symlink_activator_elevate/remoteCode.ts:68:            emit('completed', {
src/extensions/symlink_activator_elevate/remoteCode.ts:86:        emit('log', {
src/extensions/symlink_activator_elevate/remoteCode.ts:100:    emit('initialised', {
src/extensions/symlink_activator_elevate/Settings.tsx:52:          <ControlLabel>{t('Symlinks')}</ControlLabel>
src/extensions/symlink_activator_elevate/Settings.tsx:75:              {t('This feature doesn\'t seem to be supported on your system: {{reason}}', {
src/extensions/updater/SettingsUpdate.tsx:72:              {t('Vortex is running in development mode. Updates will be checked and downloaded but can\'t be installed.')}
src/extensions/updater/SettingsUpdate.tsx:86:              {t('Vortex is running in preview mode and using the hidden \'next\' update channel.')}
src/extensions/updater/SettingsUpdate.tsx:103:              {t('Vortex was installed through a third-party service which will take care of updating it.')}
src/extensions/updater/SettingsUpdate.tsx:122:            {t('Update')}
src/extensions/updater/SettingsUpdate.tsx:123:            <More id='more-update-channel' name={t('Update Channel')}>
src/extensions/updater/SettingsUpdate.tsx:124:              {t('You can choose to either receive automatic updates only after they went through some '
src/extensions/updater/SettingsUpdate.tsx:137:              <option value='stable'>{t('Stable')}</option>
src/extensions/updater/SettingsUpdate.tsx:138:              <option value='beta'>{t('Beta')}</option>
src/extensions/updater/SettingsUpdate.tsx:139:              <option value='none'>{t('No automatic updates')}</option>
src/extensions/updater/SettingsUpdate.tsx:143:              {t('Check now')}
src/main.ts:123:  process.env['PATH'] = process.env['PATH'].split(';')
src/reducers/index.ts:168:  const pathArray = statePath.split('.').slice(1);
src/renderer.tsx:29:  oldErr(args.concat(' ') + '\n' + (new Error()).stack);
src/renderer.tsx:530:      api.events.emit('import-downloads', [filePath], (dlIds: string[]) => {
src/renderer.tsx:532:          api.events.emit('start-install-download', dlId);
src/renderer.tsx:542:      const protocol = url.split(':')[0];
src/renderer.tsx:726:      eventEmitter.emit('startup');
src/splash.ts:12:if (url.searchParams.get('disableGPU') === '1') {
src/tailwind/components/next/collectiontile/CollectionTile.tsx:159:                    { numeral(stats.endorsements).format('0 a') }
src/tailwind/components/next/collectiontile/CollectionTile.tsx:173:                    {numeral(stats.size).format('0.0 b')}
src/tailwind/components/next/collectiontile/CollectionTile.tsx:186:                    { numeral(stats.modCount).format('0,0') }
src/util/bbcode/LinkTag.tsx:82:          const args = parsed.pathname.slice(1).split('/').map(seg => decodeURIComponent(seg));
src/util/bbcode.ts:65:    convertDiv = document.createElement('div');
src/util/checksum.ts:8:    .digest('hex');
src/util/checksum.ts:21:    stream.on('end', () => resolve(hash.digest('hex')));
src/util/commandLine.ts:39:  const [key, value] = input.split('=');
src/util/copyRecursive.ts:121:        next('dir');
src/util/copyRecursive.ts:124:        next('file');
src/util/copyRecursive.ts:132:    next('dir');
src/util/datelocales.ts:46:  const code = langCode.split('-').map(k => k.toLowerCase());
src/util/EpicGamesLauncher.ts:134:        this.mLauncherExecPath = val.toString().split(',')[0];
src/util/errorHandling.ts:303:    buttons.unshift('Show Details');
src/util/errorHandling.ts:337:    createErrorReport('Crash', error, contextNow, ['bug', 'crash'], state, source);
src/util/ExtensionManager.ts:1760:        this.getApi().events.emit('filehash-calculated',
src/util/ExtensionManager.ts:2033:                      const lines = errOut.trim().split('\n');
src/util/ExtensionManager.ts:2274:    const style = document.createElement('style');
src/util/fileValidation.ts:10:  return data.split('\n')
src/util/fileValidation.ts:12:      const [ key, hash ] = line.split(':');
src/util/fs.ts:249:    createErrorReport('Unknown error', {
src/util/fs.ts:914:  const readAndWriteOther = parseInt('0006', 8);
src/util/fs.ts:919:  const readAndWriteGroup = parseInt('0060', 8);
src/util/fs.ts:952:  const wantedAttributes = process.platform === 'win32' ? parseInt('0666', 8) : parseInt('0600', 8);
src/util/fs.ts:977:      message: t('Vortex needs to access "{{ fileName }}" but doesn\'t have permission to.\n'
src/util/fs.ts:1030:          ? parseInt('0666', 8)
src/util/fs.ts:1031:          : parseInt('0600', 8);
src/util/GameStoreHelper.ts:84:    const chunked = lookup.split(':', 3);
src/util/GameStoreHelper.ts:179:            t('Please install/reinstall {{storeId}} to be able to launch this game store.',
src/util/genHash.ts:59:  let hashStack = error.stack.split('\n');
src/util/genHash.ts:84:  return hash.update(extractToken(error)).digest('hex');
src/util/GlobalNotifications.ts:54:          api.events.emit('show-balloon', currentNotification.title, currentNotification.message);
src/util/i18n.ts:65:    const FSBackend = await (await import('i18next-fs-backend')).default;
src/util/menu.ts:83:                extensions.getApi().events.emit('show-main-page', options.id || title);
src/util/menu.ts:94:        extensions.getApi().events.emit('show-main-page', 'application_settings');
src/util/message.ts:379:          .then(attachmentBundle => sendReport('error',
src/util/MutexContext.ts:82:  // return primary ? React.createElement('div', undefined, props.children) : null;
src/util/MutexContext.ts:83:  return React.createElement('div', undefined, props.children);
src/util/network.ts:112:    const req = request('PUT', targetUrl, {
src/util/relativeTime.ts:37:    return t('seconds ago');
src/util/relativeTime.ts:40:    return t('{{ count }} minute ago', { count });
src/util/relativeTime.ts:43:    return t('{{ count }} hour ago', { count });
src/util/relativeTime.ts:46:    return t('{{ count }} day ago', { count });
src/util/relativeTime.ts:49:    return t('{{ count }} week ago', { count });
src/util/relativeTime.ts:52:    return t('{{ count }} month ago', { count });
src/util/relativeTime.ts:55:    return t('{{ count }} year ago', { count });
src/util/requireRebuild.ts:92:      ? createHash('md5').update(fs.readFileSync(path.join(buildPath, nodeFile))).digest('hex')
src/util/runElevatedCustomTool.ts:30:      emit('log', {
src/util/runElevatedCustomTool.ts:40:        emit('finished', {});
src/util/runElevatedCustomTool.ts:41:        emit('log', {
src/util/runElevatedCustomTool.ts:49:      emit('log', {
src/util/StyleManager.ts:283:    const style = document.createElement('style');
src/util/util.ts:167:    get: () => error.message + '\n' + oldGetStack + '\nPrior Context:\n' + (stackErr.stack ?? '').split('\n').slice(1).join('\n'),
src/util/util.ts:292:    convertDiv = document.createElement('div');
src/util/util.ts:303:    convertDiv = document.createElement('div');
src/util/util.ts:743:  return input.split('.').map(seg => seg.replace(/^0+(\d+$)/, '$1')).join('.');
src/util/util.ts:896:      const [key, value] = param.split('=', 2);
src/util/util.ts:905:    searchParams.set('utm_source', 'vortex');
src/util/util.ts:906:    searchParams.set('utm_medium', 'app');
src/util/util.ts:909:      searchParams.set('utm_content', options.content);
src/util/util.ts:912:    searchParams.set('utm_campaign', options.campaign.toString());
src/util/vortex-run/lib/elevated.js:109:            const projectRoot = path.resolve(__dirname, '../..').split('\\').join('/');
src/util/vortex-run/src/elevated.ts:95:      const projectRoot = path.resolve(__dirname, '../..').split('\\').join('/');
src/views/Dialog.tsx:193:      .split('\n')
src/views/Dialog.tsx:195:        .split('\t')
src/views/Dialog.tsx:256:            showText={t('Show Details')}
src/views/Dialog.tsx:257:            hideText={t('Hide Details')}
src/views/Dialog.tsx:298:              <a onClick={this.enableAll}>{t('Enable all')}</a>
src/views/Dialog.tsx:300:              <a onClick={this.disableAll}>{t('Disable all')}</a>
src/views/Dialog.tsx:494:    const id = evt.currentTarget.id.split('-').slice(1).join('-');
src/views/GlobalOverlay.tsx:25:          action: () => this.context.api.events.emit('show-modal', 'developer'),
src/views/MainOverlay.tsx:26:          action: () => this.context.api.events.emit('show-modal', 'developer'),
src/views/MainPageContainer.tsx:78:            <div className='render-failure-text'>{t('Failed to render.')}</div>
src/views/MainPageContainer.tsx:81:                ? null : <Button onClick={this.report}>{t('Report')}</Button>}
src/views/MainPageContainer.tsx:82:              <Button onClick={this.retryRender}>{t('Retry')}</Button>
src/views/MainPageContainer.tsx:106:          <Jumbotron><h4>{t('Unavailable')}</h4></Jumbotron>
src/views/MainPageContainer.tsx:115:    events.emit('report-feedback', error.stack.split('\n')[0], `Component rendering error
src/views/MainWindow.tsx:323:            t('Switching to Profile: {{name}}',
src/views/MainWindow.tsx:324:              { replace: { name: profile?.name ?? t('None') } })
src/views/MainWindow.tsx:343:              {t('Cancel')}
src/views/MainWindow.tsx:481:              tooltip={tabsMinimized ? t('Restore') : t('Minimize')}
src/views/Notification.tsx:70:      .split('\n');
src/views/Notification.tsx:95:              tooltip={(collapsed > 1) ? t('Dismiss All') : t('Dismiss')}
src/views/Notification.tsx:101:              {t('{{ count }} More', { count: collapsed - 1 })}
src/views/Notification.tsx:144:                {t('Never show again')}
src/views/NotificationButton.tsx:122:        {items.length > 0 ? items : t('No Notifications')}
src/views/NotificationButton.tsx:318:      translated.message = t('<Multiple>');
src/views/NotificationButton.tsx:373:    this.context.api.events.emit('analytics-track-click-event', 'Notifications', 'Dismiss');
src/views/QuickLauncher.tsx:128:              tooltip={t('Launch')}
src/views/QuickLauncher.tsx:145:            text={t('No other games managed')}
src/views/QuickLauncher.tsx:197:                {t('Profile')} : {profile?.name ?? t('<None>')}
src/views/QuickLauncher.tsx:227:      this.context.api.events.emit('show-main-page', 'Games');
src/views/QuickLauncher.tsx:229:      this.context.api.events.emit('activate-game', gameId);
src/views/QuickLauncher.tsx:241:    this.context.api.events.emit('analytics-track-click-event', 'Header', 'Play game');
src/views/QuickLauncher.tsx:258:    // this.context.api.events.emit('analytics-track-event-with-payload', 'Launch game', {
src/views/Settings.tsx:108:          text={t('Nothing to configure.')}
src/views/Settings.tsx:109:          subtext={t('Other games may require settings here.')}
extensions/changelog-dashlet/src/ChangelogDashlet.tsx:56:      <Dashlet className='dashlet-changelog' title={t('What\'s New')}>
extensions/changelog-dashlet/src/index.ts:63:  context.registerDashlet('Changelog', 1, 3, 200, ChangelogDashlet,
extensions/changelog-dashlet/src/index.ts:68:    context.api.setStylesheet('changelog',
extensions/collections/src/collectionCreate.ts:63:            api.events.emit('edit-collection', id);
extensions/collections/src/collectionExport.ts:148:        return t('Mod not found on nexusmods.com: {{modName}} (modId: {{modId}}), '
extensions/collections/src/collectionExport.ts:154:        return t('Mod with id {{modId}} not found', { replace: { modId: det.value } });
extensions/collections/src/collectionExport.ts:161:        return t('Mod not found on nexusmods.com: {{modName}} '
extensions/collections/src/collectionExport.ts:169:        return t('Mod with file id {{fileId}} not found', { replace: { fileId: det.value } });
extensions/collections/src/collectionExport.ts:236:        api.events.emit('submit-collection', filterInfo(info), filePath,
extensions/collections/src/collectionInstall.ts:172:    await util.toPromise(cb => api.events.emit('deploy-mods', cb));
extensions/collections/src/eventHandlers.ts:12:      (await api.emitAndAwait('get-nexus-collection-revision',
extensions/collections/src/eventHandlers.ts:50:      (await api.emitAndAwait('resolve-collection-url', latest.downloadLink))[0];
extensions/collections/src/eventHandlers.ts:68:    api.events.emit('analytics-track-click-event', 'Collections', 'Update Collection');
extensions/collections/src/eventHandlers.ts:73:      api.events.emit('start-install-download', dlId, undefined, cb));
extensions/collections/src/eventHandlers.ts:167:    await util.toPromise(cb => api.events.emit('remove-mods', gameMode,
extensions/collections/src/index.ts:219:          api.events.emit('edit-collection', id);
extensions/collections/src/index.ts:266:      api.events.emit('pause-download', dlId);
extensions/collections/src/index.ts:269:  await api.emitAndAwait('cancel-dependency-install', modId);
extensions/collections/src/index.ts:326:        { id: 'delete_mods', text: t('Remove mods'), value: false },
extensions/collections/src/index.ts:327:        { id: 'delete_archives', text: t('Delete mod archives'), value: false },
extensions/collections/src/index.ts:379:          await util.toPromise(cb => api.events.emit('remove-download', dlId, cb, { silent: true }));
extensions/collections/src/index.ts:395:        api.events.emit('remove-mods', gameId, removeMods, cb, {
extensions/collections/src/index.ts:408:        await util.toPromise(cb => api.events.emit('remove-download', collection.archiveId, cb, { silent: true }));
extensions/collections/src/index.ts:410:      await util.toPromise(cb => api.events.emit('remove-mod', gameId, modId, cb, {
extensions/collections/src/index.ts:561:  localState.ownCollections = (await api.emitAndAwait('get-my-collections', gameMode))[0] || [];
extensions/collections/src/index.ts:752:      context.api.events.emit('show-main-page', 'Collections');
extensions/collections/src/index.ts:766:      context.api.events.emit('did-install-dependencies', gameId, modIds[0], false);
extensions/collections/src/index.ts:780:      context.api.events.emit('install-recommendations', profile.id, profile.gameId, modIds);
extensions/collections/src/index.ts:904:      (await api.emitAndAwait('rate-nexus-collection-revision', parseInt(revisionId, 10), vote))[0];
extensions/collections/src/index.ts:922:            api.events.emit('analytics-track-click-event', 'Notifications', 'Success rating - Yes');
extensions/collections/src/index.ts:931:            api.events.emit('analytics-track-click-event', 'Notifications', 'Success rating - No');
extensions/collections/src/index.ts:1031:  api.setStylesheet('collections', path.join(__dirname, 'style.scss'));
extensions/collections/src/index.ts:1104:              api.events.emit('show-main-page', 'Collections');
extensions/collections/src/index.ts:1219:        await util.toPromise<string>(cb => api.events.emit('start-install-download', dlId, {
extensions/collections/src/index.ts:1233:    api.events.emit('show-main-page', 'Collections');
extensions/collections/src/index.ts:1243:    api.events.emit('show-main-page', 'Collections');
extensions/collections/src/index.ts:1289:  util.installIconSet('collections', path.join(__dirname, 'icons.svg'))
extensions/collections/src/index.ts:1297:    api.emitAndAwait('get-my-collections', gameId)
extensions/collections/src/index.ts:1315:      await api.emitAndAwait('reset-dependency-installs');
extensions/collections/src/util/binaryPatching.ts:43:    api.events.emit('simulate-installer', gameId, mod.archiveId, { choices },
extensions/collections/src/util/gameSupport/gamebryo.tsx:300:    case 'after': return t('after');
extensions/collections/src/util/gameSupport/gamebryo.tsx:301:    case 'requires': return t('requires');
extensions/collections/src/util/gameSupport/gamebryo.tsx:302:    case 'incompatible': return t('incompatible with');
extensions/collections/src/util/gameSupport/gamebryo.tsx:328:    return t('assigned to group');
extensions/collections/src/util/gameSupport/gamebryo.tsx:343:      <div className='rule-name'>{rule.isGroup ? t('Group') + ' ' : ''}{rule.name}</div>
extensions/collections/src/util/gameSupport/gamebryo.tsx:349:        tooltip={t('Remove plugin rule')}
extensions/collections/src/util/gameSupport/gamebryo.tsx:431:        {t('No userlist loaded, is the gamebryo-plugin-management extension disabled?')}
extensions/collections/src/util/gameSupport/gamebryo.tsx:447:          {t('The collection will include your custom load order rules so that '
extensions/collections/src/util/gameSupport/gamebryo.tsx:450:          {t('Rules you remove here are also removed from your actual setup.')}
extensions/collections/src/util/InfoCache.ts:186:      (await this.mApi.emitAndAwait('get-nexus-collection', collectionSlug))[0];
extensions/collections/src/util/InfoCache.ts:224:    const revisionInfo = (await this.mApi.emitAndAwait('get-nexus-collection-revision',
extensions/collections/src/util/InstallDriver.ts:122:    // this.mApi.events.emit('analytics-track-event-with-payload', 'Collection Installation Failed', {
extensions/collections/src/util/InstallDriver.ts:129:    this.mApi.events.emit('analytics-track-mixpanel-event',
extensions/collections/src/util/InstallDriver.ts:465:    this.mApi.emitAndAwait('install-from-dependencies',
extensions/collections/src/util/InstallDriver.ts:595:        this.mApi.events.emit('trigger-test-run', 'collections-changed');
extensions/collections/src/util/InstallDriver.ts:615:        this.mApi.events.emit('analytics-track-mixpanel-event',
extensions/collections/src/util/InstallDriver.ts:618:        // this.mApi.events.emit('analytics-track-event-with-payload', 'Collection Installation Completed', {
extensions/collections/src/util/InstallDriver.ts:764:    this.mApi.events.emit('will-install-collection', gameId, collection.id);
extensions/collections/src/util/InstallDriver.ts:766:    this.mApi.events.emit('view-collection', collection.id);
extensions/collections/src/util/InstallDriver.ts:800:    // this.mApi.events.emit('analytics-track-event-with-payload', 'Collection Installation Started', {
extensions/collections/src/util/InstallDriver.ts:807:      this.mApi.events.emit('analytics-track-mixpanel-event',
extensions/collections/src/util/InstallDriver.ts:893:    this.mApi.events.emit('install-dependencies',
extensions/collections/src/util/InstallDriver.ts:909:      this.mApi.events.emit('did-install-collection', this.mGameId, this.mCollection.id);
extensions/collections/src/util/InstallDriver.ts:972:            this.mApi.events.emit('view-collection', collection.id);
extensions/collections/src/util/transformCollection.ts:837:    : t('Copy of {{name}}', { replace: { name: existingCollection.attributes?.customFileName } });
extensions/collections/src/util/transformCollection.ts:873:      api.events.emit('create-mod', gameId, mod, (error: Error) => {
extensions/collections/src/util/transformCollection.ts:932:      api.events.emit('create-mod', gameId, mod, (error: Error) => {
extensions/collections/src/util/transformCollection.ts:980:      errorText: t('Name must be between {{min}}-{{max}} characters long', {
extensions/collections/src/util/transformCollection.ts:1000:    bbcode: t('Quick Collections create a backup of your mod list for easy import by another PC or mod manager. '
extensions/collections/src/util/util.ts:82:  return hash.digest('hex');
extensions/collections/src/util/util.ts:180:  api.events.emit('analytics-track-click-event', 'Collections', 'Upload collection');
extensions/collections/src/views/AddModsDialog.tsx:137:            {t('Select (click, shift-click, ...) installed mods you want to add to your collection below:')}
extensions/collections/src/views/AddModsDialog.tsx:152:              text={t('You don\'t have any installed mods')}
extensions/collections/src/views/AddModsDialog.tsx:158:          {t('You can also add mods to a collection from the mods screen: '
extensions/collections/src/views/AddModsDialog.tsx:162:          {t('Mods need to be in an installed state in order to add them to a collection. '
extensions/collections/src/views/AddModsDialog.tsx:167:        <Button onClick={hide}>{t('Close')}</Button>
extensions/collections/src/views/AddModsDialog.tsx:168:        <Button onClick={addSelection}>{t('Add Selection')}</Button>
extensions/collections/src/views/CollectionList/index.tsx:134:            {t('Refresh')}
extensions/collections/src/views/CollectionList/index.tsx:170:              {t('View All Collections')}
extensions/collections/src/views/CollectionList/index.tsx:227:    this.context.api.events.emit('analytics-track-click-event', 'Collections', 'Refresh');
extensions/collections/src/views/CollectionList/index.tsx:294:        this.context.api.events.emit('pause-download', dlId);
extensions/collections/src/views/CollectionList/index.tsx:298:    await api.emitAndAwait('cancel-dependency-install', modId);
extensions/collections/src/views/CollectionList/index.tsx:335:      await util.toPromise(cb => api.events.emit('remove-mod', profile.gameId, modId, cb, {
extensions/collections/src/views/CollectionList/index.tsx:372:      (await api.emitAndAwait('rate-nexus-collection-revision', parseInt(revisionId, 10), vote))[0];
extensions/collections/src/views/CollectionList/index.tsx:408:        api.events.emit('analytics-track-click-event', 'Collections', 'Remove Workshop Collection');
extensions/collections/src/views/CollectionList/index.tsx:417:        api.events.emit('analytics-track-click-event', 'Collections', 'Remove Added Collection');
extensions/collections/src/views/CollectionList/index.tsx:479:        return api.emitAndAwait('install-from-dependencies', collectionId, ruleList, recommended);
extensions/collections/src/views/CollectionList/StartPage.tsx:86:    return t('The name bust be between {{min}}-{{max}} characters long', {
extensions/collections/src/views/CollectionList/StartPage.tsx:95:    return t('Invalid characters, only letters, numbers, space and - are allowed.');
extensions/collections/src/views/CollectionList/StartPage.tsx:116:          text={t('Discover more collections')}
extensions/collections/src/views/CollectionList/StartPage.tsx:170:          text={t('Create a collection')}
extensions/collections/src/views/CollectionList/StartPage.tsx:242:          title={<><Icon name='add'/>{t('Added Collections')}</>}
extensions/collections/src/views/CollectionList/StartPage.tsx:247:                {t('View and manage collections created by other users.')}
extensions/collections/src/views/CollectionList/StartPage.tsx:251:                {t('Sort by:')}
extensions/collections/src/views/CollectionList/StartPage.tsx:255:                    { value: 'alphabetical', label: t('Name A-Z') },
extensions/collections/src/views/CollectionList/StartPage.tsx:256:                    { value: 'datedownloaded', label: t('Date downloaded') },
extensions/collections/src/views/CollectionList/StartPage.tsx:257:                    { value: 'recentlyupdated', label: t('Recently updated') },
extensions/collections/src/views/CollectionList/StartPage.tsx:295:          title={<><Icon name='highlight-tool' />{t('Workshop')}</>}
extensions/collections/src/views/CollectionList/StartPage.tsx:305:                    title={t('Open My Collections Page')}
extensions/collections/src/views/CollectionList/StartPage.tsx:313:                {t('Sort by:')}
extensions/collections/src/views/CollectionList/StartPage.tsx:317:                    { value: 'alphabetical', label: t('Name A-Z') },
extensions/collections/src/views/CollectionList/StartPage.tsx:318:                    { value: 'datecreated', label: t('Date created') },
extensions/collections/src/views/CollectionList/StartPage.tsx:319:                    { value: 'recentlyupdated', label: t('Recently updated') },
extensions/collections/src/views/CollectionList/StartPage.tsx:462:    this.context.api.events.emit('analytics-track-click-event', 'Collections', 'Discover more');
extensions/collections/src/views/CollectionList/StartPage.tsx:467:    this.context.api.events.emit('analytics-track-click-event',
extensions/collections/src/views/CollectionList/StartPage.tsx:473:    this.context.api.events.emit('analytics-track-click-event', namespace, eventName);
extensions/collections/src/views/CollectionPageEdit/FileOverrides.tsx:85:          {t('File overrides can be considered as a type of ignore list. This page will allow you to export file overrides that '
extensions/collections/src/views/CollectionPageEdit/FileOverrides.tsx:90:          {t('Please note that these pre-generated file overrides are toggled off by default as Vortex will '
extensions/collections/src/views/CollectionPageEdit/FileOverrides.tsx:95:          {t('Any mods enabled below will NOT be deployed on the user\'s machine. '
extensions/collections/src/views/CollectionPageEdit/FileOverrides.tsx:126:                  {t('contains {{count}} file override', {
extensions/collections/src/views/CollectionPageEdit/index.tsx:153:            <h3>{t('Edit Collection')} / {util.renderModName(collection)}</h3>
extensions/collections/src/views/CollectionPageEdit/index.tsx:156:              tooltip={t('Remove this collection')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:159:              {t('Remove')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:163:              tooltip={uploadDisabled ?? t('Upload to Nexus Mods')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:171:              tooltip={t('Open site')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:175:              {t('View Site')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:178:          {t('Set up your mod collection\'s rules and site preferences.')}
extensions/collections/src/views/CollectionPageEdit/index.tsx:185:              title={<div>{t('Mods')}<Badge>{(collection.rules || []).length}</Badge></div>}
extensions/collections/src/views/CollectionPageEdit/index.tsx:205:            <Tab key='mod-rules' eventKey='mod-rules' title={t('Mod Rules')}>
extensions/collections/src/views/CollectionPageEdit/index.tsx:216:            <Tab key='file-overrides' eventKey='file-overrides' title={t('File Overrides')}>
extensions/collections/src/views/CollectionPageEdit/index.tsx:227:            <Tab key='collection-instructions' eventKey='collection-instructions' title={t('Collection Instructions')}>
extensions/collections/src/views/CollectionPageEdit/index.tsx:272:      return (t('Can\'t upload an empty collection')) as string;
extensions/collections/src/views/CollectionPageEdit/index.tsx:302:    this.context.api.events.emit('analytics-track-navigation', `collections/workshop/collection/${pageTracking}`);
extensions/collections/src/views/CollectionPageEdit/index.tsx:331:      this.context.api.events.emit('analytics-track-click-event', 'Collections', 'View on site Workshop Collection');
extensions/collections/src/views/CollectionPageEdit/InstallModeRenderer.tsx:48:          tooltip={t('This mod has installer options')}
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:35:      <h4>{t('Options')}</h4>
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:36:      <p>{t('The below settings can optionally be changed to customize this collection')}</p>
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:43:          {t('Recommend new profile')}
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:44:          <More id='collection-settings-recommendnewprofile' name={t('Recommend new profile')} >
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:45:              {t('If enabled, Vortex will recommend creating a new profile when installing this collection. If disabled, the collection will be installed into the currently active profile.')}
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:78:        <h4>{t('Instructions')}</h4>
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:80:          {t('Instructions will be shown to the user before installation starts and can be reviewed in the Instructions tab. You can also add individual mod instructions in the Mods tab.')}
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:97:          tooltip={t('Save Instructions')}
extensions/collections/src/views/CollectionPageEdit/Instructions.tsx:100:          {t('Save')}
extensions/collections/src/views/CollectionPageEdit/ModRules.tsx:45:            {t('By default the collection will replicate all your custom rules that dictate '
extensions/collections/src/views/CollectionPageEdit/ModRules.tsx:48:            {t('If you disable rules here your collection may produce unresolved file conflicts '
extensions/collections/src/views/CollectionPageEdit/ModRules.tsx:53:          <a onClick={this.enableAllRules}>{t('Enable all')}</a><span className='link-action-seperator'>&nbsp; | &nbsp;</span><a onClick={this.disableAllRules}>{t('Disable all')}</a>
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:282:            title: t('Phase {{num}}', { replace: { num: idx } }),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:290:            title: t('Create & Add to Phase {{num}}', { replace: { num: maxPhase + 1 } }),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:338:                tooltip={this.props.t('This mod isn\'t installed.')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:400:            this.context.api.store.getState()) || t('<No category>'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:486:              tooltip={t('Edit Source')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:500:          const version = entry.mod?.attributes?.['version'] ?? t('N/A');
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:503:            return t('Exact only ({{version}})', { replace: { version } });
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:507:            return t('Latest');
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:509:            return t('Prefer exact ({{version}})', { replace: { version } });
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:511:            return t('Exact only ({{version}})', { replace: { version } });
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:521:            const version = entry.mod?.attributes?.['version'] ?? t('N/A');
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:525:                { key: 'exact', text: t('Exact only ({{version}})', { replace: { version } }) },
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:530:              { key: 'exact', text: t('Exact only ({{version}})', { replace: { version } }) },
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:531:              { key: 'prefer', text: t('Prefer exact ({{version}})', { replace: { version } }) },
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:532:              { key: 'newest', text: t('Latest') },
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:623:              tooltip={t('Edit Instructions')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:627:              {t('Edit')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:632:              tooltip={t('Add Instructions')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:636:              {t('Add')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:731:        groupName: (phase: any) => this.props.t('Phase {{phase}}', {
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:767:        {t('Add more mods')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:775:          text={t('There are no mods in this collection')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:776:          // subtext={t('Is it a collection when there\'s nothing in it?')}
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:797:          <p>{t('Here you can configure which mods to install and how.')}</p>
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:798:          <p>{t('Version: Choose whether the collection will install exactly the version you '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:800:          <p>{t('Required: Select whether the user has to install the mod or whether it\'s an optional recommendation, recommended mods are presented last and the user is given the choice to install them or not.')}</p>
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:801:          <p>{t('Install: "Fresh Install" will install the mod as Vortex would usually do, '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:807:          <p>{t('Source: Decides how the user downloads the mod. "Nexus Mods" is easiest, use the '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:885:        summary: t('Missing file identifiers'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:886:        message: t('When using "Nexus Mods" as a source, both the mod id and file id have to be '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:898:        summary: t('"Replicate" requires "Exact only" as the version'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:899:        message: t('"Replicate" install can only be used when installing '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:907:        summary: t('"Same Installer Options" should not be used with "Latest" version'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:908:        message: t('Installing with "Same choices options" may break if the mod gets updated, '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:917:        summary: t('Version choice has no effect on "Bundled" mod'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:918:        message: t('If you bundle a mod the user gets exactly the version of the mod you '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:925:          summary: t('Version choice has no effect on mods using generic download.'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:926:          message: t('The option to "prefer exact version" only works with sources that '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:936:          summary: t('No URL set'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:937:          message: t('The sources "Browse a website" and "Direct download" require that '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:947:          summary: t('Version choice incompatible with saving local edits.'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:948:          message: t('Local edits can only be applied if the user gets the exact same files '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:957:          summary: t('Combining the option to save edits and bundling makes no sense.'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:958:          message: t('The option to "bundle" already bundles the edited files, storing '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:967:          summary: t('"Replicate" installation can\'t be combined with "Binary patching"'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:968:          message: t('"Replicate" depends on files being unchanged '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:978:        summary: t('Only bundle mods you have the right to do so'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:979:        message: t('Mods are copyright protected, only pack mods if you are sure you '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:986:        summary: t('Please verify you are allowed to do direct download on this site'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:987:        message: t('Most websites don\'t allow direct downloads, Plese make sure you are '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:996:        summary: t('No Installer Options saved for this mod'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:997:        message: t('The installer choices for this mod haven\'t been saved. '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1007:        summary: t('No version set for this mod'),
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1008:        message: t('The mod has no version number set. This isn\'t strictly necessary, we use the '
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1030:      api.events.emit('show-main-page', 'Mods');
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1032:        api.events.emit('mods-select-item', mod.id, true);
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1047:    api.events.emit('show-main-page', 'Mods');
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1049:      api.events.emit('mods-select-item', mod.id, true);
extensions/collections/src/views/CollectionPageEdit/ModsEditPage.tsx:1128:          return `[*]${prob.message} [url="cb://selectproblem/${idx}"]${t('Fix it')}[/url][/*]`;
extensions/collections/src/views/CollectionPageView/CollectionBanner.tsx:28:                <div className='collections-premium-banner-title'>{t('Premium')}</div>
extensions/collections/src/views/CollectionPageView/CollectionBanner.tsx:33:            <div className='collections-premium-banner-body'>{t('Auto-download collections at max speed')}</div>
extensions/collections/src/views/CollectionPageView/CollectionBanner.tsx:41:              {t('Unlock max download speeds')}
extensions/collections/src/views/CollectionPageView/CollectionBanner.tsx:50:    this.context.api.events.emit('analytics-track-click-event', 'Go Premium', 'Collections Added Collection');
extensions/collections/src/views/CollectionPageView/CollectionInstructions.tsx:70:          <h4>{t('Instructions - Required Mods')}</h4>
extensions/collections/src/views/CollectionPageView/CollectionInstructions.tsx:84:                        {t('Open instructions')}
extensions/collections/src/views/CollectionPageView/CollectionInstructions.tsx:95:          <h4>{t('Instructions - Optional Mods')}</h4>
extensions/collections/src/views/CollectionPageView/CollectionInstructions.tsx:109:                        {t('Open instructions')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:25:          <Icon name='toggle-disabled' />{t('Ignored')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:34:            <Icon name='toggle-enabled' />{t('Enabled')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:40:            <Icon name='toggle-disabled' />{t('Disabled')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:59:          <div className='progress-title'>{t('Installing...')}</div>
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:66:            <Icon name='pause'/>{t('Download paused')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:72:            <Icon name='warning' />{t('Download failed')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:91:          <div className='progress-title'>{t('Downloading...')}</div>
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:98:            <Icon name='install' /> {t('Not installed')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:105:              <Icon name='install' />{t('Install pending')}
extensions/collections/src/views/CollectionPageView/CollectionItemStatus.tsx:111:              <Icon name='download' />{t('Download pending')}
extensions/collections/src/views/CollectionPageView/CollectionModDetails.tsx:75:                    tooltip={t('Open Mod in Webbrowser')}
extensions/collections/src/views/CollectionPageView/CollectionModDetails.tsx:95:                      <div className='title'>{t('Uploaded by')}</div>
extensions/collections/src/views/CollectionPageView/CollectionModDetails.tsx:103:                  <div className='title'>{t('Created by')}</div>
extensions/collections/src/views/CollectionPageView/CollectionModDetails.tsx:107:                  <div className='title'>{t('Version')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:42:    context.api.events.emit('endorse-mod', gameId, mod.id, endorsedStatus);
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:43:    context.api.events.emit('analytics-track-click-event', 'Collections', endorsedStatus);
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:61:    undecided: { icon: 'endorse-maybe', toolTip: t('Undecided') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:62:    abstained: { icon: 'endorse-maybe', toolTip: t('Abstained') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:63:    endorsed: { icon: 'endorse-yes', toolTip: t('Endorsed') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:64:    disabled: { icon: 'endorse-disabled', toolTip: t('Endorsement disabled by author') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:65:    pending: { icon: 'spinner_new', toolTip: t('Pending') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:66:    blocked: { icon: 'endorse-disabled', toolTip: t('You have been blocked by the curator.') },
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:67:  }[finalStatus.toLowerCase()] || { icon: 'like-maybe', toolTip: t('Undecided') };
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:94:      context.api.events.emit('analytics-track-click-event', 'Collections', 'Comments');
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:100:    ? t('You have been blocked by the curator.')
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:101:    : t('Comments');
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:125:  const result: ICollection = (await api.emitAndAwait('get-nexus-collection', collection.slug,))[0];
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:268:                    t('No description')}
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:283:                        <div className='title'>{t('Curated by')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:289:                    <div className='title'>{t('Revision')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:293:                    <div className='title'>{t('Last updated')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:299:                    <div className='title'>{t('Uploaded')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:308:                    <div className='title'>{t('Mods')}</div>
extensions/collections/src/views/CollectionPageView/CollectionOverview.tsx:422:      return t('Never');
extensions/collections/src/views/CollectionPageView/CollectionOverviewSelection.tsx:68:                tooltip={t('Deselects mods')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:94:                ? this.renderActivity(t('Checking Dependencies'))
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:103:                      tooltip={t('Resume')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:111:                      tooltip={t('Pause')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:119:                    tooltip={t('Cancel')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:121:                    {t('Cancel')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:170:          labelLeft={t('Downloading')}
extensions/collections/src/views/CollectionPageView/CollectionProgress.tsx:178:          labelLeft={installing.length > 0 ? t('Installing') : t('Waiting to install')}
extensions/collections/src/views/CollectionPageView/HealthDownvoteDialog.tsx:82:    const voted: { success: boolean, averageRating?: nexus.IRating } = (await context.api.emitAndAwait('rate-nexus-collection-revision', parseInt(revisionId, 10), vote))[0];    
extensions/collections/src/views/CollectionPageView/HealthDownvoteDialog.tsx:96:        <Modal.Title>{t('Downvote Success Rating')}</Modal.Title>
extensions/collections/src/views/CollectionPageView/HealthDownvoteDialog.tsx:108:          <Checkbox onChange={onChecked}>{t('I have tried the above steps and confirm this collection does not work.')}</Checkbox>
extensions/collections/src/views/CollectionPageView/HealthDownvoteDialog.tsx:112:        <Button onClick={hide}>{t('Cancel')}</Button>
extensions/collections/src/views/CollectionPageView/HealthDownvoteDialog.tsx:113:        <Button onClick={downvote} disabled={!confirmationCheck}>{t('Submit')}</Button>
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:79:        {t('Revision {{number}}', { replace: { number: revisionNumber } })}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:81:        <div className='collection-health-header-gameversion'>{t('Game Version: ')}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:84:            <More id='collection-health-version-mismatch' name={t('Version Mismatch')}>
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:85:              {t('This collection was created using a different version of the game than you have and is the most common reason why a collection doesn\'t work correctly.\n\n'
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:106:            {t('{{numVotes}} votes', { replace: { numVotes: value.total } })}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:113:              {t('Collection Success Rating')}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:118:              {t('Did this collection work successfully?')}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:130:                        ? t('Collection worked (mostly)')
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:139:                    {t('Yes')}
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:150:                        ? t("Collection didn't work (in a significant way)")
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:151:                        : t('You must wait for 12 hours between downloading a collection revision and rating it')
extensions/collections/src/views/CollectionPageView/HealthIndicator.tsx:157:                    {t('No')}
extensions/collections/src/views/CollectionPageView/index.tsx:511:              title={t('Instructions')}
extensions/collections/src/views/CollectionPageView/index.tsx:527:              title={t('Mods')}
extensions/collections/src/views/CollectionPageView/index.tsx:567:    this.context.api.events.emit('analytics-track-navigation', `collections/view/collection/${tab}`);
extensions/collections/src/views/CollectionPageView/index.tsx:625:    batch.push(actions.setAttributeSort('mods', 'dependencies', 'asc'));
extensions/collections/src/views/CollectionPageView/index.tsx:628:    api.events.emit('show-main-page', 'Mods');
extensions/collections/src/views/CollectionPageView/index.tsx:792:      { id: 'mod', text: t('Remove Mod'), value: true },
extensions/collections/src/views/CollectionPageView/index.tsx:793:      { id: 'archive', text: t('Delete Archive'), value: false },
extensions/collections/src/views/CollectionPageView/index.tsx:797:      checkboxes.push({ id: 'collection', text: t('Remove from Collection'), value: false });
extensions/collections/src/views/CollectionPageView/index.tsx:801:      text: t('Do you really want to remove this mod?', {
extensions/collections/src/views/CollectionPageView/index.tsx:831:                this.context.api.events.emit('remove-download', archiveId);
extensions/collections/src/views/CollectionPageView/index.tsx:865:      this.context.api.events.emit('mods-scroll-to', modId);
extensions/collections/src/views/CollectionPageView/SlideshowControls.tsx:61:        tooltip={t('Show previous mod')}
extensions/collections/src/views/CollectionPageView/SlideshowControls.tsx:65:      {t('{{pos}} of {{count}}',
extensions/collections/src/views/CollectionPageView/SlideshowControls.tsx:69:        tooltip={t('Show next mod')}
extensions/collections/src/views/CollectionPageView/SlideshowControls.tsx:78:          tooltip={t('Start/Pause automatic advancement')}
extensions/collections/src/views/CollectionReleaseStatus.tsx:17:      return <div className='collection-status incomplete'>{t('Incomplete')}</div>;
extensions/collections/src/views/CollectionReleaseStatus.tsx:20:      return <div className='collection-status published'>{t('Published')}</div>;
extensions/collections/src/views/CollectionReleaseStatus.tsx:22:      return <div className='collection-status enabled'>{t('Enabled')}</div>;
extensions/collections/src/views/CollectionReleaseStatus.tsx:24:      return <div className='collection-status disabled'>{t('Disabled')}</div>;
extensions/collections/src/views/CollectionTile/index.tsx:99:              placeholder={t('Collection Name')}
extensions/collections/src/views/CollectionTile/index.tsx:105:          <tooltip.IconButton icon='input-confirm' tooltip={t('Save name')} onClick={apply} />
extensions/collections/src/views/CollectionTile/index.tsx:110:          <tooltip.IconButton icon='edit' tooltip={t('Change name')} onClick={startEdit} />
extensions/collections/src/views/CollectionTile/index.tsx:195:                  {t('Revision {{number}}{{forceRevision}}', { replace: {
extensions/collections/src/views/CollectionTile/index.tsx:230:                  {t('By {{uploader}}', { replace: {
extensions/collections/src/views/CollectionTile/index.tsx:269:            return t('Already updating');
extensions/collections/src/views/CollectionTile/index.tsx:309:              : t('Another collection is being installed') as string;
extensions/collections/src/views/CollectionTile/index.tsx:357:            return (this.props.t('Can\'t upload an empty collection')) as string;
extensions/collections/src/views/CollectionTile/NewRevisionMarker.tsx:22:      {t('Update')}
extensions/collections/src/views/CollectionTile/RemoteTile.tsx:52:        t('Your collection must be installed first and then cloned to make edits.'),
extensions/collections/src/views/CollectionTile/RemoteTile.tsx:102:              {t('Revision {{number}}', {
extensions/collections/src/views/CollectionTile/RemoteTile.tsx:110:              {t('{{rating}}%', { replace: { rating: revision.rating.average } })}
extensions/collections/src/views/CollectionTile/RemoteTile.tsx:118:              {t('By {{uploader}}', {
extensions/collections/src/views/CollectionTile/SuccessRating.tsx:55:        ? t('Awaiting')
extensions/collections/src/views/CollectionTile/SuccessRating.tsx:56:        : t('{{rating}}%', { replace: { rating } })}
extensions/collections/src/views/IniTweaks.tsx:147:            {t('This screen lets you set up tweaks for the game ini file that will be applied '
extensions/collections/src/views/IniTweaks.tsx:151:            {t('Users can toggle these ini tweaks individually so you may want to set up '
extensions/collections/src/views/IniTweaks.tsx:160:                  <th className='header-status'>{t('Status')}</th>
extensions/collections/src/views/IniTweaks.tsx:161:                  <th className='header-tweak-name'>{t('Tweak Name')}</th>
extensions/collections/src/views/IniTweaks.tsx:162:                  <th className='header-filename'>{t('Ini File')}</th>
extensions/collections/src/views/IniTweaks.tsx:164:                      {t('Edit')}
extensions/collections/src/views/IniTweaks.tsx:165:                      <More id='edit-ini-file' name={t('Edit Ini File')}>
extensions/collections/src/views/IniTweaks.tsx:166:                      {t('"Edit" allows you to input the ini tweak you want to '
extensions/collections/src/views/IniTweaks.tsx:178:              {t('Add')}
extensions/collections/src/views/IniTweaks.tsx:184:            {t('To assist in the testing of INI configuration application - any enabled INI modification '
extensions/collections/src/views/IniTweaks.tsx:189:            {t('To disable/enable an INI tweak, simply click on the button itself (in the status column). '
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:34:    context.api.events.emit('analytics-track-click-event', 'Collections', 'View on site Updated Collection');
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:57:          {t('{{collectionName}} update',
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:74:            <h4>{t('Revision {{revNum}} Changelog',
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:85:          tooltip={t('Open Page')}
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:88:          {t('View Collection')}
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:92:        <Button onClick={onCancel}>{t('Later')}</Button>
extensions/collections/src/views/InstallDialog/InstallChangelogDialog.tsx:93:        <Button onClick={onContinue}>{t('Download Update')}</Button>
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:52:      api.events.emit('view-collection', driver.collection.id, 'mods');
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:103:        <Modal.Title>{t('Collection installation complete')}</Modal.Title>
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:119:            {driver.collection?.attributes?.shortDescription ?? t('No description')}
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:123:                {t('To edit this collection you must install all of the optional mods')}
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:131:              {t('{{numOptionals}} optional mods available',
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:135:              {t('This collection has {{count}} optional mods which are not required to '
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:149:            {t('You now have the whole collection installed, you can start editing '
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:153:              tooltip={t('Clone the collection to the workshop for editing')}
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:156:              {t('Edit')}
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:164:            {t('No Thanks')}
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:166:          <Button onClick={showOptionals}>{t('View optional mods')}</Button>
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:167:          <Button onClick={installAllOptionals}>{t('Install optional mods')}</Button>
extensions/collections/src/views/InstallDialog/InstallFinishedDialog.tsx:172:            {t('Done')}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:73:        ? t('{{name}} (Current)', { replace: { name: profile.name } })
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:77:      value: '__new', label: t('Create new profile{{recommended}}',
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:78:        { replace: { recommended: recommendedNewProfile ? t(' (Recommended by curator)') : '' } })
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:84:        {t('Install this collection to profile') + ':'}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:112:      <p>{t('Currently installing to profile: {{profileName}}', {
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:117:      <p>{t('Do you want to switch to this profile?')}</p>
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:195:            {t('{{gameName}} collection added', { replace: { gameName: game.name } })}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:222:              {t('Profiles allow you to have multiple mod set-ups for a game at once and quickly switch between them.')}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:223:              <More id='more-profile-instcollection' name={t('Profiles')} wikiId='profiles'>
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:224:                {util.getText('profile' as any, 'profiles', t)}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:249:            {t('Install mods during collection downloads')}
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:255:              <Button onClick={this.next}>{t('No')}</Button>
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:256:              <Button onClick={this.switchProfile}>{t('Yes')}</Button>
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:260:              <Button onClick={this.cancel}>{t('Later')}</Button>
extensions/collections/src/views/InstallDialog/InstallStartDialog.tsx:261:              <Button onClick={this.next}>{t('Install Now')}</Button>
extensions/collections/src/views/InstallDialog/YouCuratedThisTag.tsx:10:      {t('You curated this collection')}
extensions/collections/src/views/Tools.tsx:87:          {t('This screen lets you include tools you manually configured to be run from Vortex.')}
extensions/collections/src/views/Tools.tsx:90:          {t('Obviously users will need to have these tools installed. If they aren\'t '
extensions/collections/src/views/Tools.tsx:98:            <th className='header-status'>{t('Status')}</th>
extensions/collections/src/views/Tools.tsx:99:            <th className='header-icon'>{t('Icon')}</th>
extensions/collections/src/views/Tools.tsx:100:            <th className='header-name'>{t('Name')}</th>
extensions/collections/src/views/Tools.tsx:101:            <th className='header-path'>{t('Path')}</th>
extensions/collections/src/views/Tools.tsx:102:            <th className='header-args'>{t('Args')}</th>
extensions/collections/src/views/Tools.tsx:103:            <th className='header-env'>{t('Environment')}</th>
extensions/collections/__tests__/bsdiff-node.test.ts:25:  it('creates and applies a binary patch', async () => {
extensions/documentation/src/controls/TutorialButton.tsx:91:          tooltip={t('Dismiss')}
extensions/documentation/src/controls/TutorialButton.tsx:113:          {children ? children.split('\n\n').map((paragraph) =>
extensions/documentation/src/controls/TutorialButton.tsx:119:            {' '}{t('More Videos by {{author}}', { replace: {author: video.attribution.author} })}
extensions/documentation/src/controls/TutorialDropdown.tsx:39:        <div className='button-text'>{t('Tutorials')}</div>
extensions/documentation/src/index.tsx:56:        context.api.events.emit('analytics-track-click-event', 'Dashboard', 'Intro Video');
extensions/documentation/src/index.tsx:77:    context.api.setStylesheet('documentation', path.join(__dirname, 'documentation.scss'));
extensions/documentation/src/index.tsx:90:      context.api.events.emit('show-main-page', 'Knowledge Base');
extensions/documentation/src/index.tsx:94:          context.api.events.emit('navigate-knowledgebase', url);
extensions/documentation/src/ThemeToCSS.ts:22:        const [id, type, key] = rule.selectorText.split(' ');
extensions/documentation/src/views/DocumentationView.tsx:94:              tooltip={t('Back')}
extensions/documentation/src/views/DocumentationView.tsx:100:              tooltip={t('Home')}
extensions/documentation/src/views/DocumentationView.tsx:106:              tooltip={t('Forward')}
extensions/documentation/src/views/DocumentationView.tsx:114:              tooltip={t('Open in Browser')}
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:76:      <Dashlet className='dashlet-extensions' title={t('Latest Extensions')}>
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:80:            : <div className='extension-title'>{t('Please endorse extensions you like')}</div>
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:88:        {newsMode ? null : <Button onClick={this.notNow}>{t('Not now')}</Button>}
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:97:      this.context.api.events.emit('analytics-track-click-event', 'Dashboard', 'View latest extension');
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:111:            <Icon name='author' /> {t('By {{author}}', { replace: { author: ext.author } })}
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:113:          <Button data-modid={ext.modId} onClick={this.installExt}>{t('Install')}</Button>
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:139:              tooltip={t('Endorse')}
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:145:              tooltip={t('Abstain')}
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:191:      this.context.api.emitAndAwait('install-extension', ext)
extensions/extension-dashlet/src/ExtensionsDashlet.tsx:214:    this.context.api.emitAndAwait('endorse-nexus-mod',
extensions/extension-dashlet/src/index.ts:7:  context.registerDashlet('Extensions', 1, 4, 100, ExtensionsDashlet, () => true,
extensions/extension-dashlet/src/index.ts:14:    context.api.setStylesheet('extensions-dashlet',
extensions/feedback/fetch_issues.js:15:      return [].concat(await prev, await fetchWikiCategory(member.title.split(':')[1]));
extensions/feedback/src/index.tsx:95:        const codeLine: string[] = data.split('\r\n').filter(line => line.startsWith('Exception code'));
extensions/feedback/src/index.tsx:96:        return Promise.resolve(codeLine.map(line => line.split(': ')[1]));
extensions/feedback/src/index.tsx:151:      api.events.emit('show-main-page', 'Feedback');
extensions/feedback/src/index.tsx:332:    context.api.setStylesheet('feedback', path.join(__dirname, 'feedback.scss'));
extensions/feedback/src/views/FeedbackView.tsx:165:            {t('Please select the type of Feedback you\'d like to send in.')}
extensions/feedback/src/views/FeedbackView.tsx:174:                  tooltip={t('Report Bug')}
extensions/feedback/src/views/FeedbackView.tsx:186:                  tooltip={t('Report Suggestion')}
extensions/feedback/src/views/FeedbackView.tsx:198:                  tooltip={t('Ask Question')}
extensions/feedback/src/views/FeedbackView.tsx:209:              {t('Please understand that this is only for feedback for the ' +
extensions/feedback/src/views/FeedbackView.tsx:240:        <h2>{t('Provide Feedback')}</h2>
extensions/feedback/src/views/FeedbackView.tsx:245:          subtext={t('Sorry, due to large amount of feedback we receive we can\'t accept feedback '
extensions/feedback/src/views/FeedbackView.tsx:267:        {t('Please select the type of Feedback you\'d like to send in.')}
extensions/feedback/src/views/FeedbackView.tsx:321:          <h4>{t('Title')}</h4>
extensions/feedback/src/views/FeedbackView.tsx:329:          <h4>{t('System Information')}</h4>
extensions/feedback/src/views/FeedbackView.tsx:337:          <h4>{t('Your Message')}</h4>
extensions/feedback/src/views/FeedbackView.tsx:351:            dialogHint={t('Select file to attach')}
extensions/feedback/src/views/FeedbackView.tsx:356:          {t('or')}{this.renderAttachButton()}
extensions/feedback/src/views/FeedbackView.tsx:374:            {t('Describe in detail what you were doing and the feedback ' +
extensions/feedback/src/views/FeedbackView.tsx:404:                  <h4>{t('Topic')}</h4>
extensions/feedback/src/views/FeedbackView.tsx:426:                      {feedbackTopic === undefined ? <div>{t('Please select a topic')}</div> : null}
extensions/feedback/src/views/FeedbackView.tsx:447:            {t('Vortex does not impose any speed limitations on downloads, '
extensions/feedback/src/views/FeedbackView.tsx:451:            {t('We can not forward your problems to the web department so please don\'t report '
extensions/feedback/src/views/FeedbackView.tsx:460:          {t('Please make sure you\'ve read the login instructions in Vortex, on the authorisation '
extensions/feedback/src/views/FeedbackView.tsx:483:          tooltip={t('Remove')}
extensions/feedback/src/views/FeedbackView.tsx:510:        text: t('The title needs to be at least {{minLength}} characters',
extensions/feedback/src/views/FeedbackView.tsx:518:        text: t('This may be a known issue, please click the title again to see similar issues.'),
extensions/feedback/src/views/FeedbackView.tsx:530:      return t('Please provide a meaningful description of at least {{minLength}} characters',
extensions/feedback/src/views/FeedbackView.tsx:610:          label={t('Title')}
extensions/feedback/src/views/FeedbackView.tsx:614:          placeholder={t('Please provide a title')}
extensions/feedback/src/views/FeedbackView.tsx:668:        title={t('Attach Special File')}
extensions/feedback/src/views/FeedbackView.tsx:672:        <MenuItem eventKey='log'>{t('Vortex Log')}</MenuItem>
extensions/feedback/src/views/FeedbackView.tsx:673:        <MenuItem eventKey='netlog'>{t('Vortex Network Log')}</MenuItem>
extensions/feedback/src/views/FeedbackView.tsx:674:        <MenuItem eventKey='settings'>{t('Application Settings')}</MenuItem>
extensions/feedback/src/views/FeedbackView.tsx:675:        <MenuItem eventKey='state'>{t('Application State')}</MenuItem>
extensions/feedback/src/views/FeedbackView.tsx:676:        <MenuItem eventKey='actions'>{t('Recent State Changes')}</MenuItem>
extensions/feedback/src/views/FeedbackView.tsx:696:            {t('Send anonymously')}
extensions/feedback/src/views/FeedbackView.tsx:700:              {t('You are not logged in. Please include your username in your message to give us a '
extensions/feedback/src/views/FeedbackView.tsx:705:              {t('If you send feedback anonymously we can not give you updates on your report '
extensions/feedback/src/views/FeedbackView.tsx:714:            tooltip={t('Submit Feedback')}
extensions/feedback/src/views/FeedbackView.tsx:721:            {t('Submit Feedback')}
extensions/feedback/src/views/FeedbackView.tsx:739:        onShowDialog('question', t('Confirm'), {
extensions/feedback/src/views/FeedbackView.tsx:740:          message: t('This will attach your Vortex setting to the report, not including ' +
extensions/feedback/src/views/FeedbackView.tsx:751:        onShowDialog('question', t('Confirm'), {
extensions/fnis-integration/src/fnis.ts:41:    api.events.emit('create-mod', profile.gameId, mod, async (error) => {
extensions/fnis-integration/src/fnis.ts:86:      err.stack.split('\n').slice(0, 1),
extensions/fnis-integration/src/fnis.ts:87:      stackErr.stack.split('\n').slice(1),
extensions/fnis-integration/src/fnis.ts:103:        return resolve(hash.digest('hex'));
extensions/fnis-integration/src/fnis.ts:118:  return hash.digest('hex');
extensions/fnis-integration/src/fnis.ts:189:      .split('\n')
extensions/fnis-integration/src/fnis.ts:192:      .map(line => line.split('#').slice(0, 6).reduce((prev: any, value: string, idx: number) => {
extensions/fnis-integration/src/index.ts:33:    missing: t('FNIS not installed'),
extensions/fnis-integration/src/index.ts:38:    missing: t('You have configured Vortex to run FNIS automatically but it\'s not installed for this game. '
extensions/fnis-integration/src/index.ts:77:      context.api.events.emit('analytics-track-click-event', 'Dashboard', `FNIS ${props.enabled ? 'ON' : 'OFF'}`);
extensions/fnis-integration/src/index.ts:81:      props.enabled ? t('Yes') : t('No')
extensions/fnis-integration/src/index.ts:132:  context.registerTest('fnis-integration', 'gamemode-activated', (): Promise<types.ITestResult> => {
extensions/fnis-integration/src/index.ts:155:            const version = versionStr.split('.').map(seg => parseInt(seg, 10));
extensions/fnis-integration/src/index.ts:263:            return context.api.emitAndAwait('deploy-single-mod', profile.gameId, modId);
extensions/fnis-integration/src/Settings.tsx:33:        {t('Run FNIS on Deployment Event (if necessary)')}
extensions/fnis-integration/src/Settings.tsx:34:        <More id='fnis-setting' name={t('Running FNIS automatically')}>
extensions/fnis-integration/src/Settings.tsx:35:          {t('Any time you deploy, Vortex will check if any mod containing animations '
extensions/game-pillarsofeternity2/src/index.ts:177:    context.api.setStylesheet('game-pillarsofeternity2',
extensions/game-pillarsofeternity2/src/views/LoadOrder.tsx:75:                        <h4>{t('Enabled')}</h4>
extensions/game-pillarsofeternity2/src/views/LoadOrder.tsx:90:                        <h4>{t('Disabled')}</h4>
extensions/game-pillarsofeternity2/src/views/LoadOrderEntry.tsx:18:      classes = classes.concat(className.split(' '));
extensions/gamebryo-archive-check/src/index.ts:78:  context.registerTest('incompatible-mod-archives', 'plugins-changed',
extensions/gamebryo-archive-check/src/index.ts:81:  // context.registerTest('incompatible-mod-archives', 'loot-info-updated',
extensions/gamebryo-archive-check/src/index.ts:217:        .map(g => g.gameName).join('/') || t('an unknown game');
extensions/gamebryo-archive-check/src/index.ts:220:      const errMsg = t('Is loaded by {{plugin}}, but is intended for use in {{games}}.',
extensions/gamebryo-archive-check/src/index.ts:227:      : t('not managed by Vortex');
extensions/gamebryo-archive-check/src/index.ts:229:    return `[h5]${t('Incompatible Archives')} ${groupInfo}:[/h5]`
extensions/gamebryo-archive-check/src/index.ts:236:      long: t('Some of the archives in your load order are incompatible with {{thisGame}}. '
extensions/gamebryo-archive-check/src/index.ts:242:           + t('You can fix this problem yourself by removing any mods that are not intended to be used with {{thisGame}}. '
extensions/gamebryo-archive-invalidation/src/bsaRedirection.ts:69:    api.events.emit('create-mod', gameMode, mod, (error) => {
extensions/gamebryo-archive-invalidation/src/bsaRedirection.ts:108:    api.events.emit('remove-mod', gameMode, REDIRECTION_MOD);
extensions/gamebryo-archive-invalidation/src/bsaRedirection.ts:118:        api.events.emit('remove-mod', gameMode, REDIRECTION_MOD);
extensions/gamebryo-archive-invalidation/src/bsaRedirection.ts:122:        api.events.emit('remove-mod', gameMode, REDIRECTION_MOD);
extensions/gamebryo-archive-invalidation/src/index.ts:107:  context.registerTest('archive-backdate', 'gamemode-activated',
extensions/gamebryo-archive-invalidation/src/index.ts:122:      (props.mods[REDIRECTION_MOD] !== undefined) ? t('Yes') : t('No')
extensions/gamebryo-archive-invalidation/src/views/Settings.tsx:37:          <ControlLabel>{t('Archive Invalidation')}</ControlLabel>
extensions/gamebryo-archive-invalidation/src/views/Settings.tsx:42:            {t('BSA redirection')}
extensions/gamebryo-archive-invalidation/src/views/Settings.tsx:45:            {t('This adds a mod to vortex that provides Archive Invalidation '
extensions/gamebryo-bsa-support/src/index.ts:54:      pass.emit('error', new Error('file not found ' + filePath));
extensions/gamebryo-bsa-support/src/index.ts:60:        return pass.emit('error', tmpErr);
extensions/gamebryo-bsa-support/src/index.ts:64:          return pass.emit('error', readErr);
extensions/gamebryo-bsa-support/src/index.ts:73:        fileStream.on('error', (err) => pass.emit('error', err));
extensions/gamebryo-bsa-support/src/index.ts:74:        fileStream.on('readable', () => pass.emit('readable'));
extensions/gamebryo-plugin-indexlock/src/index.tsx:126:      api.events.emit('set-plugin-list', sorted.map(id => (newLoadOrder[id] !== undefined)
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:41:      ? t('Locked to index', { replace: { lockedIndex: toHex(lockedIndex) } })
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:42:      : t('Sorted automatically');
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:51:          {t('Sorted automatically')}
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:59:          {t('Locked to index')}
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:76:          placeholder={t('Automatic')}
extensions/gamebryo-plugin-indexlock/src/LockIndex.tsx:82:            {t('Actual index differs. If this is the case after sorting it may be '
extensions/gamebryo-plugin-management/src/autosort.ts:91:      this.mExtensionApi.events.emit('did-update-masterlist');
extensions/gamebryo-plugin-management/src/autosort.ts:95:        message: t('This might be a temporary network error. '
extensions/gamebryo-plugin-management/src/autosort.ts:411:      api.events.emit('trigger-test-run', 'loot-info-updated');
extensions/gamebryo-plugin-management/src/autosort.ts:786:        return t('masterlist');
extensions/gamebryo-plugin-management/src/autosort.ts:789:        return t('custom');
extensions/gamebryo-plugin-management/src/autosort.ts:791:        return t('hardcoded');
extensions/gamebryo-plugin-management/src/autosort.ts:793:        return t('overlap (asset)');
extensions/gamebryo-plugin-management/src/autosort.ts:795:        return t('overlap (record)');
extensions/gamebryo-plugin-management/src/autosort.ts:797:        return t('tie breaker');
extensions/gamebryo-plugin-management/src/autosort.ts:810:        return t('{{master}} is a master and {{regular}} isn\'t', {
extensions/gamebryo-plugin-management/src/autosort.ts:817:        return t('this is a masterlist rule');
extensions/gamebryo-plugin-management/src/autosort.ts:820:        return t('this is a custom rule');
extensions/gamebryo-plugin-management/src/autosort.ts:822:        return t('hardcoded');
extensions/gamebryo-plugin-management/src/autosort.ts:824:        return t('assets (content of BSA/BA2) overlap');
extensions/gamebryo-plugin-management/src/autosort.ts:826:        return t('records (content of ESx) overlap');
extensions/gamebryo-plugin-management/src/autosort.ts:828:        return t('tie breaker');
extensions/gamebryo-plugin-management/src/autosort.ts:834:          return t('groups are connected like this: {{path}}', {
extensions/gamebryo-plugin-management/src/autosort.ts:846:          return t('groups are connected');
extensions/gamebryo-plugin-management/src/autosort.ts:876:        ? `[tooltip="${t('This group was manually assigned')}"]`
extensions/gamebryo-plugin-management/src/autosort.ts:910:          text: t('Remove custom rule between "{{name}}" and "{{next}}"', { replace: {
extensions/gamebryo-plugin-management/src/autosort.ts:922:            text: t('Remove custom group assignment to "{{name}}"', { replace: {
extensions/gamebryo-plugin-management/src/autosort.ts:931:            text: t('Remove custom group assignment to "{{name}}"', { replace: {
extensions/gamebryo-plugin-management/src/autosort.ts:946:              text: t('Reset customized groups between "{{first}}@{{firstGroup}}" '
extensions/gamebryo-plugin-management/src/autosort.ts:970:    const args = key.split(':');
extensions/gamebryo-plugin-management/src/index.ts:450:        context.api.events.emit('plugin-details', profile.gameId, Object.keys(pluginList ?? {}), resolve);
extensions/gamebryo-plugin-management/src/index.ts:452:      context.api.events.emit('autosort-plugins', true, (err: Error) => {
extensions/gamebryo-plugin-management/src/index.ts:516:  context.registerTest('plugins-locked', 'gamemode-activated',
extensions/gamebryo-plugin-management/src/index.ts:518:  context.registerTest('master-missing', 'gamemode-activated',
extensions/gamebryo-plugin-management/src/index.ts:520:  context.registerTest('master-missing', 'plugins-changed' as any,
extensions/gamebryo-plugin-management/src/index.ts:524:  context.registerTest('invalid-userlist', 'gamemode-activated',
extensions/gamebryo-plugin-management/src/index.ts:526:  context.registerTest('missing-groups', 'gamemode-activated',
extensions/gamebryo-plugin-management/src/index.ts:528:  context.registerTest('exceeded-plugin-limit', 'plugins-changed',
extensions/gamebryo-plugin-management/src/index.ts:530:  context.registerTest('trigger-sort', 'collections-changed',
extensions/gamebryo-plugin-management/src/index.ts:589:    api.events.emit('plugin-details', profile.gameId, Object.keys(pluginList ?? {}), resolve);
extensions/gamebryo-plugin-management/src/index.ts:741:            fs.chmodAsync(filePath, parseInt('0777', 8)),
extensions/gamebryo-plugin-management/src/index.ts:785:      long: t('Your userlist refers to groups that don\'t exist: {{missing}}[br][/br]'
extensions/gamebryo-plugin-management/src/index.ts:858:        long: t('Your userlist contains multiple entries for "{{name}}". '
extensions/gamebryo-plugin-management/src/index.ts:884:        long: t('Your userlist contains multiple identical "{{plugin}} after {{reference}}"'
extensions/gamebryo-plugin-management/src/index.ts:913:          api.events.emit('restart-helpers');
extensions/gamebryo-plugin-management/src/index.ts:1033:      api.events.emit('autosort-plugins', true, (err: Error) => resolve);
extensions/gamebryo-plugin-management/src/index.ts:1115:                api.events.emit('show-main-page', 'gamebryo-plugins');
extensions/gamebryo-plugin-management/src/index.ts:1227:          `[tr][td]${left}[/td][td]${t('requires')}[/td][td]${right}[/td][/tr]`;
extensions/gamebryo-plugin-management/src/index.ts:1229:          `[tr][td]${left}[/td][td]${t('is incompatible with')}[/td][td]${right}[/td][/tr]`;
extensions/gamebryo-plugin-management/src/index.ts:1233:            short: t('Plugin dependencies unfulfilled'),
extensions/gamebryo-plugin-management/src/index.ts:1235:              t('Some of the enabled plugins have dependencies or incompatibilities '
extensions/gamebryo-plugin-management/src/index.ts:1247:              api.events.emit('plugin-details', gameMode,
extensions/gamebryo-plugin-management/src/index.ts:1264:    message: t('The mod "{{ modName }}" contains multiple plugins',
extensions/gamebryo-plugin-management/src/index.ts:1281:            api.events.emit('show-main-page', 'gamebryo-plugins');
extensions/gamebryo-plugin-management/src/index.ts:1289:              message: t('Please activate "{{ gameId }}" to enable plugins manually',
extensions/gamebryo-plugin-management/src/index.ts:1319:        api.events.emit('plugin-details', profile.gameId, Object.keys(pluginList ?? {}), resolve);
extensions/gamebryo-plugin-management/src/index.ts:1322:      .then(() => api.events.emit('autosort-plugins', false))
extensions/gamebryo-plugin-management/src/index.ts:1423:      context.api.setStylesheet('plugin-management',
extensions/gamebryo-plugin-management/src/index.ts:1456:          context.api.events.emit('trigger-test-run', 'plugins-changed', 500);
extensions/gamebryo-plugin-management/src/index.ts:1469:          context.api.events.emit('trigger-test-run', 'plugins-changed', 500);
extensions/gamebryo-plugin-management/src/util/gameSupport.ts:280:        const lines = data.toString().split('\r\n').filter(plugin => plugin !== '');
extensions/gamebryo-plugin-management/src/util/genGraphStyle.ts:5:      const [id, type, key] = rule.selectorText.split(' ');
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:237:          tooltip={t('Close')}
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:254:    const tooltipText = t('load {{ reference }} after {{ name }}',
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:304:          {t('Loads after:', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:319:        {t('Requires:', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:334:        {t('Incompatible:', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:350:      popoverBlocks.push(t('Drag to another connector to define load order rules.'));
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:363:            <Button onClick={this.startQuickEdit}>{t('Edit')}</Button>
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:375:            tooltip={t('Drag to another plugin to set userlist rule', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/DependencyIcon.tsx:417:          tooltip={t('Remove')}
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:110:        <Modal.Header><Modal.Title>{t('Groups')}</Modal.Title></Modal.Header>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:113:            <div>{t('Hold ctrl and drag a line from one group to another to define a rule.')}</div>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:114:            <div>{t('Right click a line/node to remove the corresponding rule/group.')}</div>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:115:            <div>{t('Right click empty area to create new Group.')}</div>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:116:            <div>{t('Masterlist groups and rules can\'t be removed.')}</div>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:117:            <div>{t('Use the mouse wheel to zoom, drag on an empty area to pan the view')}</div>
extensions/gamebryo-plugin-management/src/views/GroupEditor.tsx:138:          <Button onClick={this.close}>{t('Close')}</Button>
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:125:        tooltip={t('Master')}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:137:          tooltip={t('Light')}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:148:          tooltip={t('Could be light')}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:162:        tooltip={t('Failed to parse this plugin', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:173:        tooltip={t('Loaded by the engine, can\'t be configured', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:184:        tooltip={t('Loads an archive')}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:234:        tooltip={t('Requires cleaning (LOOT)', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:242:        tooltip={t('Verified clean (LOOT)', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:253:        tooltip={t('Not deployed', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:264:        tooltip={t('Designed for a different game', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginFlags.tsx:279:          tooltip={t('LOOT Messages', { ns: NAMESPACE })}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:168:    return t('Create Group: {{group}}', { replace: { group: label } });
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:219:  let tooltipText = t('Plugins shouldn\'t exceed mod index {{maxIndex}} for a total of {{count}} '
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:228:    ? '\n' + t('In addition you can have up to 256 medium plugins, and 4096 light plugins.')
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:229:    : '\n' + t('In addition you can have up to 4096 light plugins.');
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:234:        {t('Active: {{ count }}', { count: regular.length })}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:235:        {mediumGame ? ' ' + t('Medium: {{ count }}', { count: medium.length }) : null}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:236:        {eslGame ? ' ' + t('Light: {{ count }}', { count: light.length }) : null}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:391:              ? t('Autosort Enabled', { ns: NAMESPACE })
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:392:              : t('Autosort Disabled', { ns: NAMESPACE }),
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:394:              ? t('Disable automatic load order sorting powered by LOOT', { ns: NAMESPACE })
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:395:              : t('Enable automatic load order sorting powered by LOOT', { ns: NAMESPACE }),
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:410:            text: t('Sort Now', { ns: NAMESPACE }),
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:411:            tooltip: t('Sort your load order using LOOT', { ns: NAMESPACE }),
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:412:            onClick: () => this.context.api.events.emit('autosort-plugins', true, () => {
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:557:            <p>{t('No plugins, something seems to have gone wrong')}</p>
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:561:              tooltip={t('Refresh plugin list')}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:593:                {t('Auto load order sorting is powered by ')}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:596:                {t('LOOT can automatically calculate a load order that satisfies all plugin dependencies and maximises each plugin\’s '
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:628:              {t('Deploy now')}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:638:      things.push(t('{{count}} ITM record', { ns: NAMESPACE, count: dat['itmCount'] }));
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:641:      things.push(t('{{count}} deleted navmesh',
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:645:      things.push(t('{{count}} deleted reference',
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:650:      things.push(t('nothing! This plugin is clean'));
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:652:    const message = t('{{tool}} found {{things}}.', {
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:655:            things: things.join(` ${t('and')} `),
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:672:    this.context.api.events.emit('deploy-mods', () => undefined);
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:741:          this.context.api.events.emit('plugin-details',
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1039:    this.context.api.events.emit('show-main-page', 'Mods');
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1043:      this.context.api.events.emit('mods-scroll-to', modId);
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1246:            {t('Current')}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1249:            {t('Suggested (by LOOT)')}
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1402:                ? t('This plugin can\'t be an esl since it contains form-ids '
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1405:                  ? t('Only plugins with .esp extension can be converted')
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1407:                    ? t('This plugin already has the light flag set, you can unset it.')
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1408:                    : t('This is a regular plugin that could be turned into a light one '
extensions/gamebryo-plugin-management/src/views/PluginList.tsx:1419:                    this.context.api.events.emit('autosort-plugins', false);
extensions/gamebryo-plugin-management/src/views/PluginStatusFilter.tsx:16:      { label: t('Enabled'), value: 'Enabled' },
extensions/gamebryo-plugin-management/src/views/PluginStatusFilter.tsx:17:      { label: t('Disabled'), value: 'Disabled' },
extensions/gamebryo-plugin-management/src/views/PluginStatusFilter.tsx:18:      { label: t('Ghost', { ns: NAMESPACE}), value: 'Ghost' },
extensions/gamebryo-plugin-management/src/views/PluginStatusFilter.tsx:19:      { label: t('Loaded by engine', { ns: NAMESPACE }), value: 'undefined' },
extensions/gamebryo-plugin-management/src/views/Settings.tsx:37:          <ControlLabel>{t('Plugins')}</ControlLabel>
extensions/gamebryo-plugin-management/src/views/Settings.tsx:42:            {t('Enable externally added plugins automatically')}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:60:      case 'after': return t('needs to load after');
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:61:      case 'requires': return t('requires');
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:62:      case 'incompatible': return t('is incompatible with');
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:126:          <h3>{t('Set Rules')}</h3>
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:133:                placeholder={<div><Icon name='filter' />{t('Filter by plugin')}</div>}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:147:                    placeholder={t('Select Plugin...')}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:153:                      { value: 'after', label: t('Must Load After') },
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:154:                      { value: 'requires', label: t('Requires') },
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:155:                      { value: 'incompatible', label: t('Is Incompatible With') },
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:159:                        'after': t('Must Load After'),
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:160:                        'requires': t('Requires'),
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:161:                        'incompatible': t('Is Incompatible With')
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:172:                    placeholder={t('Select Plugin...')}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:179:                    title={t('Swap')}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:187:                    {t('Add')}
extensions/gamebryo-plugin-management/src/views/UserlistEditor.tsx:194:          <Button onClick={this.close}>{t('Close')}</Button>
extensions/gamebryo-savegame-management/src/index.ts:105:                  api.events.emit('show-main-page', 'gamebryo-savegames');
extensions/gamebryo-savegame-management/src/index.ts:213:  context.api.setStylesheet('savegame-management',
extensions/gamebryo-savegame-management/src/index.ts:351:      api.showDialog('question', t('Restore plugins'), {
extensions/gamebryo-savegame-management/src/index.ts:352:        message: t('Some plugins are missing and can\'t be enabled.\n\n{{missingPlugins}}', {
extensions/gamebryo-savegame-management/src/index.ts:364:            api.events.emit('set-plugin-list', savegame.attributes.plugins);
extensions/gamebryo-savegame-management/src/index.ts:476:        t('Unable to create save game directory: {{dest}}\\ (Please ensure you have '
extensions/gamebryo-savegame-management/src/savegameAttributes.tsx:31:    auto: (t: types.TFunction) => t('Autosave'),
extensions/gamebryo-savegame-management/src/savegameAttributes.tsx:32:    quick: (t: types.TFunction) => t('Quicksave'),
extensions/gamebryo-savegame-management/src/savegameAttributes.tsx:33:    exit: (t: types.TFunction) => t('Exitsave'),
extensions/gamebryo-savegame-management/src/savegameAttributes.tsx:37:    toString[type]?.(t) ?? t('Manual save');
extensions/gamebryo-savegame-management/src/util/restoreSavegamePlugins.ts:51:        api.events.emit('set-plugin-list', save.attributes.plugins);
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:123:        title: t('Import'),
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:164:                    {t('For performance reasons only the {{count}} most recent '
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:185:        ? <h4>{t('Please select a profile to import from')}</h4>
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:227:        {t('Import from') + ' '}
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:244:              {t('Global')}
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:251:          tooltip={t('Cancel')}
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:267:        {t('Profile') + ': ' + profile.name}
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:327:    onShowDialog('question', t('Confirm Deletion'), {
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:328:      text: t('Do you really want to remove these files?'),
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:376:    onShowDialog('question', t('Import Savegames'), {
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:377:      text: t('The following files will be imported'),
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:405:            message: t('Savegame transfer cancelled'),
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:411:            message: t('{{ count }} savegame imported', { count: fileNames.length }),
extensions/gamebryo-savegame-management/src/views/SavegameList.tsx:416:            t('Not all savegames could be imported'),
extensions/gamebryo-savegame-management/src/views/ScreenshotCanvas.tsx:53:    const ctx: CanvasRenderingContext2D = this.screenshotCanvas.getContext('2d');
extensions/gamebryo-savegame-management/src/views/Settings.tsx:37:          <ControlLabel>{t('Savegame folder monitoring')}</ControlLabel>
extensions/gamebryo-savegame-management/src/views/Settings.tsx:42:            {t('Monitor Savegame directory for changes')}
extensions/gamebryo-savegame-management/src/views/Settings.tsx:45:            {t('If your games take very long to save when Vortex is running, try disabling this.')}
extensions/gamebryo-test-settings/src/index.ts:187:  context.registerTest('oblivion-fonts', 'gamemode-activated', testOblivionFonts as any);
extensions/gamebryo-test-settings/src/index.ts:188:  context.registerTest('skyrim-fonts', 'gamemode-activated', testSkyrimFonts as any);
extensions/gamebryo-test-settings/src/util/missingSkyrimFonts.ts:16:      const rows = fontconfig.toString().split('\n');
extensions/games/game-7daystodie/index.js:217:    return (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', padding: '16px' } },
extensions/games/game-7daystodie/index.js:218:        React.createElement("div", { style: { display: 'flex', whiteSpace: 'nowrap', alignItems: 'center' } },
extensions/games/game-7daystodie/index.js:219:            t('Current Prefix Offset: '),
extensions/games/game-7daystodie/index.js:220:            React.createElement("hr", null),
extensions/games/game-7daystodie/index.js:221:            React.createElement("label", { style: { color: 'red' } }, currentOffset)),
extensions/games/game-7daystodie/index.js:222:        React.createElement("hr", null),
extensions/games/game-7daystodie/index.js:223:        React.createElement("div", null, t('7 Days to Die loads mods in alphabetic order so Vortex prefixes '
extensions/games/game-7daystodie/index.tsx:212:        {t('Current Prefix Offset: ')}
extensions/games/game-7daystodie/index.tsx:218:        {t('7 Days to Die loads mods in alphabetic order so Vortex prefixes '
extensions/games/game-7daystodie/migrations.js:105:            .then(() => context.api.emitAndAwait('purge-mods-in-path', common_1.GAME_ID, '', modsPath))
extensions/games/game-7daystodie/migrations.js:142:            .then(() => context.api.emitAndAwait('purge-mods-in-path', common_1.GAME_ID, '', modsPath))
extensions/games/game-7daystodie/migrations.ts:105:    .then(() => context.api.emitAndAwait('purge-mods-in-path', GAME_ID, '', modsPath))
extensions/games/game-7daystodie/migrations.ts:150:    .then(() => context.api.emitAndAwait('purge-mods-in-path', GAME_ID, '', modsPath))
extensions/games/game-7daystodie/Settings.js:26:    return (react_1.default.createElement("form", { id: `${common_1.GAME_ID}-settings-form` },
extensions/games/game-7daystodie/Settings.js:28:            react_1.default.createElement(react_bootstrap_1.ControlLabel, { className: `${common_1.GAME_ID}-settings-heading` }, t('7DTD Settings')),
extensions/games/game-7daystodie/Settings.js:32:                        t('Current User Default Folder'),
extensions/games/game-7daystodie/Settings.js:33:                        react_1.default.createElement(vortex_api_1.More, { id: 'more-udf', name: t('Set User Data Folder') }, t('This will allow you to re-select the User Data Folder (UDF) for 7 Days to Die.'))),
extensions/games/game-7daystodie/Settings.tsx:34:        <ControlLabel className={`${GAME_ID}-settings-heading`}>{t('7DTD Settings')}</ControlLabel>
extensions/games/game-7daystodie/Settings.tsx:38:              {t('Current User Default Folder')}
extensions/games/game-7daystodie/Settings.tsx:39:              <More id='more-udf' name={t('Set User Data Folder')} >
extensions/games/game-7daystodie/Settings.tsx:40:                {t('This will allow you to re-select the User Data Folder (UDF) for 7 Days to Die.')}
extensions/games/game-7daystodie/util.js:37:        return new Promise((resolve, reject) => api.events.emit('purge-mods', false, (err) => err ? reject(err) : resolve()));
extensions/games/game-7daystodie/util.js:42:        return new Promise((resolve, reject) => api.events.emit('deploy-mods', (err) => err ? reject(err) : resolve()));
extensions/games/game-7daystodie/util.js:168:    const prefix = input.split('');
extensions/games/game-7daystodie/util.ts:16:    api.events.emit('purge-mods', false, (err) => err ? reject(err) : resolve()));
extensions/games/game-7daystodie/util.ts:21:    api.events.emit('deploy-mods', (err) => err ? reject(err) : resolve()));
extensions/games/game-7daystodie/util.ts:161:  const prefix = input.split('');
extensions/games/game-baldursgate3/cache.js:141:            const containsMetaFile = packageList.find(line => path.basename(line.split('\t')[0]).toLowerCase() === 'meta.lsx') !== undefined ? true : false;
extensions/games/game-baldursgate3/cache.ts:123:      const containsMetaFile = packageList.find(line => path.basename(line.split('\t')[0]).toLowerCase() === 'meta.lsx') !== undefined ? true : false;
extensions/games/game-baldursgate3/githubDownloader.js:196:        api.events.emit('start-download', [redirectionURL], dlInfo, undefined, (error, id) => {
extensions/games/game-baldursgate3/githubDownloader.js:207:            api.events.emit('start-install-download', id, true, (err, modId) => {
extensions/games/game-baldursgate3/githubDownloader.ts:159:  api.events.emit('start-download', [redirectionURL], dlInfo, undefined,
extensions/games/game-baldursgate3/githubDownloader.ts:171:      api.events.emit('start-install-download', id, true, (err, modId) => {
extensions/games/game-baldursgate3/index.js:248:        context.api.events.emit('remove-mods', common_1.GAME_ID, lslibs, (err) => {
extensions/games/game-baldursgate3/index.tsx:259:    context.api.events.emit('remove-mods', GAME_ID, lslibs, (err) => {
extensions/games/game-baldursgate3/InfoPanel.js:93:    return isLsLibInstalled() ? (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: '12px', marginRight: '16px' } },
extensions/games/game-baldursgate3/InfoPanel.js:95:            React.createElement("div", null,
extensions/games/game-baldursgate3/InfoPanel.js:96:                t('To successfully switch between different game versions/patches please follow these steps:'),
extensions/games/game-baldursgate3/InfoPanel.js:97:                React.createElement("ul", null,
extensions/games/game-baldursgate3/InfoPanel.js:98:                    React.createElement("li", null, t('Purge your mods')),
extensions/games/game-baldursgate3/InfoPanel.js:99:                    React.createElement("li", null, t('Run the game so that the modsettings.lsx file gets reset to the default values')),
extensions/games/game-baldursgate3/InfoPanel.js:100:                    React.createElement("li", null, t('Close the game')),
extensions/games/game-baldursgate3/InfoPanel.js:101:                    React.createElement("li", null, t('Deploy your mods')),
extensions/games/game-baldursgate3/InfoPanel.js:102:                    React.createElement("li", null, t('Run the game again - your load order will be maintained'))))),
extensions/games/game-baldursgate3/InfoPanel.js:103:        React.createElement("div", null, t(`A backup is made of the game's modsettings.lsx file before anything is changed.
extensions/games/game-baldursgate3/InfoPanel.js:105:        React.createElement("div", null, t(`Drag and Drop PAK files to reorder how the game loads them. Please note, some mods contain multiple PAK files.`)),
extensions/games/game-baldursgate3/InfoPanel.js:106:        React.createElement("div", null, t(`Mod descriptions from mod authors may have information to determine the best order.`)),
extensions/games/game-baldursgate3/InfoPanel.js:107:        React.createElement("div", null, t(`Some mods may be locked in this list because they are loaded differently by the game and can therefore not be load-ordered by mod managers. 
extensions/games/game-baldursgate3/InfoPanel.js:109:        React.createElement("h4", { style: { margin: 0 } }, t('Import and Export')),
extensions/games/game-baldursgate3/InfoPanel.js:110:        React.createElement("div", null, t(`Import is an experimental tool to help migration from a game load order (.lsx file) to Vortex. It works by importing the game's modsettings file
extensions/games/game-baldursgate3/InfoPanel.js:112:        React.createElement("div", null, t(`Export can be used to manually update the game's modsettings.lsx file if 'Settings > Mods > Auto export load order' isn't set to do this automatically. 
extensions/games/game-baldursgate3/InfoPanel.js:114:        React.createElement("h4", { style: { margin: 0 } }, t('Import from Baldur\'s Gate 3 Mod Manager')),
extensions/games/game-baldursgate3/InfoPanel.js:115:        React.createElement("div", null, t('Vortex can sort your load order based on a BG3MM .json load order file. Any mods that are not installed through Vortex will be ignored.')),
extensions/games/game-baldursgate3/InfoPanel.js:116:        React.createElement("div", null, t('Please note that any mods that are not present in the BG3MM load order file will be placed at the bottom of the load order.')))) : (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: '12px' } },
extensions/games/game-baldursgate3/InfoPanel.js:117:        React.createElement("h4", { style: { margin: 0 } }, t('LSLib is not installed')),
extensions/games/game-baldursgate3/InfoPanel.js:118:        React.createElement("div", null, t('To take full advantage of Vortex\'s Baldur\s Gate 3 modding capabilities such as managing the '
extensions/games/game-baldursgate3/InfoPanel.js:120:        React.createElement("div", null, t('Please install the library using the buttons below to manage your load order.')),
extensions/games/game-baldursgate3/InfoPanel.js:121:        React.createElement(vortex_api_1.tooltip.Button, { tooltip: 'Install LSLib', onClick: onInstallLSLib }, t('Install LSLib'))));
extensions/games/game-baldursgate3/InfoPanel.tsx:91:          {t('To successfully switch between different game versions/patches please follow these steps:')}
extensions/games/game-baldursgate3/InfoPanel.tsx:94:              {t('Purge your mods')}
extensions/games/game-baldursgate3/InfoPanel.tsx:97:              {t('Run the game so that the modsettings.lsx file gets reset to the default values')}
extensions/games/game-baldursgate3/InfoPanel.tsx:100:              {t('Close the game')}
extensions/games/game-baldursgate3/InfoPanel.tsx:103:              {t('Deploy your mods')}
extensions/games/game-baldursgate3/InfoPanel.tsx:106:              {t('Run the game again - your load order will be maintained')}
extensions/games/game-baldursgate3/InfoPanel.tsx:126:        {t('Import and Export')}
extensions/games/game-baldursgate3/InfoPanel.tsx:137:        {t('Import from Baldur\'s Gate 3 Mod Manager')}
extensions/games/game-baldursgate3/InfoPanel.tsx:140:        {t('Vortex can sort your load order based on a BG3MM .json load order file. Any mods that are not installed through Vortex will be ignored.')}
extensions/games/game-baldursgate3/InfoPanel.tsx:143:        {t('Please note that any mods that are not present in the BG3MM load order file will be placed at the bottom of the load order.')}
extensions/games/game-baldursgate3/InfoPanel.tsx:150:        {t('LSLib is not installed')}
extensions/games/game-baldursgate3/InfoPanel.tsx:153:        {t('To take full advantage of Vortex\'s Baldur\s Gate 3 modding capabilities such as managing the '
extensions/games/game-baldursgate3/InfoPanel.tsx:157:        {t('Please install the library using the buttons below to manage your load order.')}
extensions/games/game-baldursgate3/InfoPanel.tsx:163:        {t('Install LSLib')}
extensions/games/game-baldursgate3/installers.js:170:        ver = ver.split('.').slice(0, 3).join('.');
extensions/games/game-baldursgate3/installers.ts:160:  ver = ver.split('.').slice(0, 3).join('.');
extensions/games/game-baldursgate3/loadOrder.js:534:            return vortex_api_1.util.withErrorContext('reading pak', fileName, () => {
extensions/games/game-baldursgate3/loadOrder.ts:656:    return util.withErrorContext('reading pak', fileName, () => {
extensions/games/game-baldursgate3/migrations.js:103:                            bbcode: t('As of Baldur\'s Gate 3 patch 7, the "ModFixer" mod is no longer required. Please feel free to disable it.{{bl}}'
extensions/games/game-baldursgate3/migrations.tsx:66:          bbcode: t('As of Baldur\'s Gate 3 patch 7, the "ModFixer" mod is no longer required. Please feel free to disable it.{{bl}}'
extensions/games/game-baldursgate3/Settings.js:20:    return (react_1.default.createElement("form", null,
extensions/games/game-baldursgate3/Settings.js:24:                    react_1.default.createElement(react_bootstrap_1.ControlLabel, null, t('Baldur\'s Gate 3')),
extensions/games/game-baldursgate3/Settings.js:25:                    react_1.default.createElement(vortex_api_1.Toggle, { checked: autoExportLoadOrder, onToggle: setUseAutoExportLoadOrderToGame }, t('Auto export load order')),
extensions/games/game-baldursgate3/Settings.tsx:27:            <ControlLabel>{t('Baldur\'s Gate 3')}</ControlLabel>
extensions/games/game-baldursgate3/Settings.tsx:32:              {t('Auto export load order')}
extensions/games/game-bladeandsorcery/index.js:69:  await api.emitAndAwait('purge-mods-in-path',
extensions/games/game-bladeandsorcery/index.js:72:  return await api.emitAndAwait('purge-mods-in-path',
extensions/games/game-bladeandsorcery/index.js:324:    React.createElement('h2', {}, t('Managing your load order', { ns: I18N_NAMESPACE })),
extensions/games/game-bladeandsorcery/index.js:326:    React.createElement('div', {},
extensions/games/game-bladeandsorcery/index.js:327:    React.createElement('p', {}, t('You can adjust the load order for Blade and Sorcery by dragging and dropping '
extensions/games/game-bladeandsorcery/index.js:329:    React.createElement('div', { style: { height: '70%' } },
extensions/games/game-bladeandsorcery/index.js:330:      React.createElement('p', {}, t('Please note:', { ns: I18N_NAMESPACE })),
extensions/games/game-bladeandsorcery/index.js:331:      React.createElement('ul', {},
extensions/games/game-bladeandsorcery/index.js:332:        React.createElement('li', {}, t('The mods displayed in this page are valid mods, confirmed to be deployed inside the '
extensions/games/game-bladeandsorcery/index.js:334:        React.createElement('li', {}, t('If you cannot see your manually added mod in this load order - click refresh and Vortex '
extensions/games/game-bladeandsorcery/index.js:336:        React.createElement('li', {}, t('The load order file will only be picked up by the game in version 8.4 Beta 5 and above', { ns: I18N_NAMESPACE })))));
extensions/games/game-bladeandsorcery/migrations.js:49:  await api.emitAndAwait('purge-mods-in-path', GAME_ID, 'bas-legacy-modtype', baseFolder);
extensions/games/game-bladeandsorcery/migrations.js:102:      api.emitAndAwait('purge-mods-in-path', GAME_ID, modType, res.modTypes[modType])))
extensions/games/game-bloodstainedritualofthenight/index.js:36:                bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-bloodstainedritualofthenight/index.ts:24:      bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-bloodstainedritualofthenight/migrations.js:38:            .then(() => api.emitAndAwait('purge-mods-in-path', common_1.GAME_ID, '', path_1.default.join(discovery.path, oldModRelPath)))
extensions/games/game-bloodstainedritualofthenight/migrations.ts:34:    .then(() => api.emitAndAwait('purge-mods-in-path',
extensions/games/game-codevein/index.js:37:                bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-codevein/index.ts:25:      bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-codevein/migrations.js:60:            .then(() => context.api.emitAndAwait('purge-mods-in-path', common_1.GAME_ID, '', modsPath))
extensions/games/game-codevein/migrations.ts:56:    .then(() => context.api.emitAndAwait('purge-mods-in-path', GAME_ID, '', modsPath))
extensions/games/game-codevein/_index.js:173:          React.createElement('div', {
extensions/games/game-codevein/_index.js:178:          React.createElement('img', {
extensions/games/game-codevein/_index.js:217:              React.createElement('div', {
extensions/games/game-codevein/_index.js:222:                React.createElement('h2', {}, 
extensions/games/game-codevein/_index.js:223:                  props.t('Changing your load order', { ns: I18N_NAMESPACE })),
extensions/games/game-codevein/_index.js:224:                React.createElement('p', {}, 
extensions/games/game-codevein/_index.js:225:                  props.t('Drag and drop the mods on the left to reorder them. Code Vein loads mods in alphabetic order so Vortex prefixes '
extensions/games/game-codevein/_index.js:227:                  React.createElement('p', {}, 
extensions/games/game-codevein/_index.js:228:                  props.t('Note: You can only manage mods installed with Vortex. Installing other mods manually may cause unexpected errors.', { ns: I18N_NAMESPACE })),
extensions/games/game-dragonage2/index.js:32:    .catch(() => regget('Software\\Wow6432Node\\BioWare\\Dragon Age 2', 'Install Dir'))
extensions/games/game-dragonage2/index.js:33:    .catch(() => regget('Software\\Wow6432Node\\BioWare\\Dragon Age II', 'Install Dir'));
extensions/games/game-kenshi/index.js:109:    .then(res => Promise.resolve(res.split(' ')[1]));
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:52:            this.context.api.events.emit('show-main-page', 'generic-loadorder');
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:56:            return (React.createElement(react_bootstrap_1.Button, { id: 'btn-more-mods', className: 'collection-add-mods-btn', onClick: this.openLoadOrderPage, bsStyle: 'ghost' }, t('Open Load Order Page')));
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:60:            return (React.createElement(vortex_api_1.EmptyPlaceholder, { icon: 'sort-none', text: t('You have no load order entries (for the current mods in the collection)'), subtext: this.renderOpenLOButton() }));
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:73:                    React.createElement("p", { className: 'load-order-index' }, idx),
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:74:                    React.createElement("p", null, name))));
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:89:            ? (React.createElement("div", { style: { overflow: 'auto' } },
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:90:                React.createElement("h4", null, t('Load Order')),
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.js:91:                React.createElement("p", null, t('Below is a preview of the load order for the mods that ' +
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.tsx:61:          <h4>{t('Load Order')}</h4>
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.tsx:63:          {t('Below is a preview of the load order for the mods that ' +
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.tsx:77:    this.context.api.events.emit('show-main-page', 'generic-loadorder');
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.tsx:87:      {t('Open Load Order Page')}
extensions/games/game-kingdomcome-deliverance/collections/CollectionsDataView.tsx:96:        text={t('You have no load order entries (for the current mods in the collection)')}
extensions/games/game-kingdomcome-deliverance/index.js:127:        .then(data => setNewOrder({ context, profile }, Array.isArray(data) ? data : data.split('\n')));
extensions/games/game-kingdomcome-deliverance/index.js:189:        const manuallyAdded = data.split('\n').filter(entry => !listHasMod(entry, enabledMods)
extensions/games/game-kingdomcome-deliverance/index.js:246:            }, React.createElement('div', {
extensions/games/game-kingdomcome-deliverance/index.js:250:            }, React.createElement('img', {
extensions/games/game-kingdomcome-deliverance/index.js:284:    }, React.createElement('h2', {}, props.t('Changing your load order', { ns: I18N_NAMESPACE })), React.createElement('p', {}, props.t('Drag and drop the mods on the left to reorder them. Kingdom Come: Deliverance uses a mod_order.txt file '
extensions/games/game-kingdomcome-deliverance/index.js:287:        + 'Mods placed at the bottom of the load order will have priority over those above them.', { ns: I18N_NAMESPACE })), React.createElement('p', {}, props.t('Note: Vortex will detect manually added mods as long as these have been added to the mod_order.txt file. '
extensions/games/game-kingdomcome-deliverance/index.js:346:    context.optional.registerCollectionFeature('kcd_collection_data', (gameId, includedMods) => (0, collections_1.genCollectionsData)(context, gameId, includedMods), (gameId, collection) => (0, collections_1.parseCollectionsData)(context, gameId, collection), () => Promise.resolve(), (t) => t('Kingdom Come: Deliverance Data'), (state, gameId) => gameId === statics_1.GAME_ID, CollectionsDataView_1.default);
extensions/games/game-kingdomcome-deliverance/index.ts:86:      Array.isArray(data) ? data : data.split('\n')));
extensions/games/game-kingdomcome-deliverance/index.ts:162:        const manuallyAdded = data.split('\n').filter(entry =>
extensions/games/game-kingdomcome-deliverance/index.ts:228:          React.createElement('div', {
extensions/games/game-kingdomcome-deliverance/index.ts:233:          React.createElement('img', {
extensions/games/game-kingdomcome-deliverance/index.ts:277:              React.createElement('div', {
extensions/games/game-kingdomcome-deliverance/index.ts:282:                React.createElement('h2', {},
extensions/games/game-kingdomcome-deliverance/index.ts:283:                  props.t('Changing your load order', { ns: I18N_NAMESPACE })),
extensions/games/game-kingdomcome-deliverance/index.ts:284:                React.createElement('p', {},
extensions/games/game-kingdomcome-deliverance/index.ts:285:                  props.t('Drag and drop the mods on the left to reorder them. Kingdom Come: Deliverance uses a mod_order.txt file '
extensions/games/game-kingdomcome-deliverance/index.ts:289:                  React.createElement('p', {},
extensions/games/game-kingdomcome-deliverance/index.ts:290:                  props.t('Note: Vortex will detect manually added mods as long as these have been added to the mod_order.txt file. '
extensions/games/game-kingdomcome-deliverance/index.ts:374:    (t) => t('Kingdom Come: Deliverance Data'),
extensions/games/game-masterchiefcollection/index.js:134:        .then((res) => Promise.resolve(res.split('\r\n')[0].trim()));
extensions/games/game-masterchiefcollection/index.js:148:        context.registerTest('mcc-ce-mp-test', 'gamemode-activated', vortex_api_1.util.toBlue(() => (0, tests_1.testCEMP)(context.api)));
extensions/games/game-masterchiefcollection/index.js:157:                    return React.createElement('div', { className: 'halo-img-div', key: `${entry.internalId}-${idx}` }, React.createElement('img', { className: 'halogameimg', src: `file://${entry.img}` }), React.createElement('span', {}, entry.name));
extensions/games/game-masterchiefcollection/index.js:194:            context.api.setStylesheet('masterchiefstyle', path_1.default.join(__dirname, 'masterchief.scss'));
extensions/games/game-masterchiefcollection/index.ts:134:    .then((res) => Promise.resolve(res.split('\r\n')[0].trim()));
extensions/games/game-masterchiefcollection/index.ts:167:    context.registerTest('mcc-ce-mp-test', 'gamemode-activated', util.toBlue(() => testCEMP(context.api)));
extensions/games/game-masterchiefcollection/index.ts:177:          return React.createElement('div', { className: 'halo-img-div', key: `${entry.internalId}-${idx}` }, 
extensions/games/game-masterchiefcollection/index.ts:178:            React.createElement('img', { className: 'halogameimg', src: `file://${entry.img}` }),
extensions/games/game-masterchiefcollection/index.ts:179:            React.createElement('span', {}, entry.name))
extensions/games/game-masterchiefcollection/index.ts:224:      context.api.setStylesheet('masterchiefstyle', path.join(__dirname, 'masterchief.scss'));
extensions/games/game-masterchiefcollection/util.js:47:        const lines = manifestData.split('\r\n');
extensions/games/game-masterchiefcollection/util.ts:36:  const lines = manifestData.split('\r\n');
extensions/games/game-microsoftflightsimulator/index.js:92:      const [name, ...valueArr] = lines[i].split(' ');
extensions/games/game-microsoftflightsimulator/index.js:113:  return parseOPTObject(data.split('\n').map(line => line.trimLeft()), 0)[0];
extensions/games/game-microsoftflightsimulator/index.js:269:          id: target, text: target.split(':')[1], value: idx === 0,
extensions/games/game-microsoftflightsimulator/index.js:281:    const [type, actualTarget] = possibleTargets[0].split(':');
extensions/games/game-microsoftflightsimulator/index.js:425:    const [publisher, type, name] = item.split('-');
extensions/games/game-microsoftflightsimulator/index.js:506:    const oldId = section.split('.')[1];
extensions/games/game-microsoftflightsimulator/index.js:728:      return t('If you have multiple mods replacing the same content (e.g. engine '
extensions/games/game-morrowind/index.js:172:    context.optional.registerCollectionFeature('morrowind_collection_data', (gameId, includedMods, collection) => (0, collections_1.genCollectionsData)(context, gameId, includedMods, collection), (gameId, collection) => (0, collections_1.parseCollectionsData)(context, gameId, collection), () => Promise.resolve(), (t) => t('Load Order'), (state, gameId) => gameId === constants_1.MORROWIND_ID, (props) => CollectionDataWrap(context.api, props));
extensions/games/game-morrowind/index.ts:175:    (t) => t('Load Order'),
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:53:                    t('You can make changes to this data from the '),
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:54:                    React.createElement("a", { className: 'fake-link', onClick: this.openLoadOrderPage, title: t('Go to Load Order Page') }, t('Load Order page.')),
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:55:                    t(' If you believe a load order entry is missing, please ensure the '
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:59:            this.props.api.events.emit('show-main-page', 'file-based-loadorder');
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:63:            return (React.createElement(react_bootstrap_1.Button, { id: 'btn-more-mods', className: 'collection-add-mods-btn', onClick: this.openLoadOrderPage, bsStyle: 'ghost' }, t('Open Load Order Page')));
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:67:            return (React.createElement(vortex_api_1.EmptyPlaceholder, { icon: 'sort-none', text: t('You have no load order entries (for the current mods in the collection)'), subtext: this.renderOpenLOButton() }));
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:74:                    React.createElement("p", { className: 'load-order-index' }, idx),
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:75:                    React.createElement("p", null, loEntry.name))));
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:93:            ? (React.createElement("div", { style: { overflow: 'auto' } },
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:94:                React.createElement("h4", null, t('Load Order')),
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.js:95:                React.createElement("p", null, t('This is a snapshot of the load order information that '
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:62:          <h4>{t('Load Order')}</h4>
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:64:          {t('This is a snapshot of the load order information that '
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:98:          {t('You can make changes to this data from the ')}
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:102:            title={t('Go to Load Order Page')}
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:104:            {t('Load Order page.')}
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:106:          {t(' If you believe a load order entry is missing, please ensure the '
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:114:    this.props.api.events.emit('show-main-page', 'file-based-loadorder');
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:124:      {t('Open Load Order Page')}
extensions/games/game-morrowind/views/MorrowindCollectionsDataView.tsx:133:        text={t('You have no load order entries (for the current mods in the collection)')}
extensions/games/game-nomanssky/index.js:24:        return new Promise((resolve, reject) => api.events.emit('purge-mods', true, (err) => err ? reject(err) : resolve()));
extensions/games/game-nomanssky/index.js:29:        return new Promise((resolve, reject) => api.events.emit('deploy-mods', (err) => err ? reject(err) : resolve()));
extensions/games/game-nomanssky/index.ts:13:    api.events.emit('purge-mods', true, (err) => err ? reject(err) : resolve()));
extensions/games/game-nomanssky/index.ts:18:    api.events.emit('deploy-mods', (err) => err ? reject(err) : resolve()));
extensions/games/game-pathfinderwrathoftherighteous/index.js:28:            const segments = data.split(' ');
extensions/games/game-pathfinderwrathoftherighteous/index.ts:22:    const segments = data.split(' ');
extensions/games/game-sims3/index.js:50:  const gvLine = skuInfo.split('\n').find(line => line.startsWith('GameVersion'));
extensions/games/game-sims3/index.js:52:    return gvLine.split('=')[1].trim();
extensions/games/game-sims4/index.js:132:      data.split('\n')
extensions/games/game-sims4/index.js:330:    .then(() => api.emitAndAwait('purge-mods-in-path', 'thesims4', '', path.join(bmp, MODS_SUB_PATH)))
extensions/games/game-sims4/index.js:331:    .then(() => api.emitAndAwait('purge-mods-in-path', 'thesims4', '', bmp))
extensions/games/game-skyrimvr/index.js:138:  api.events.emit('autosort-plugins', false);
extensions/games/game-spyroreignitedtrilogy/index.js:36:                bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-spyroreignitedtrilogy/index.ts:24:      bbcode: t('Vortex has discovered the following unmanaged/external files in the '
extensions/games/game-spyroreignitedtrilogy/migrations.js:60:            .then(() => context.api.emitAndAwait('purge-mods-in-path', common_1.GAME_ID, '', modsPath))
extensions/games/game-spyroreignitedtrilogy/migrations.ts:54:    .then(() => context.api.emitAndAwait('purge-mods-in-path', GAME_ID, '', modsPath))
extensions/games/game-stardewvalley/CompatibilityIcon.js:24:        return (react_1.default.createElement(vortex_api_1.tooltip.Icon, { name: 'auto-update', tooltip: t('SMAPI suggests updating this mod to {{update}}. '
extensions/games/game-stardewvalley/CompatibilityIcon.js:33:    return (react_1.default.createElement(vortex_api_1.tooltip.Icon, { name: icon, className: `sdv-compatibility-${status}`, tooltip: (_l = (_k = mod.attributes) === null || _k === void 0 ? void 0 : _k.compatibilityMessage) !== null && _l !== void 0 ? _l : t('No information') }));
extensions/games/game-stardewvalley/CompatibilityIcon.tsx:33:        tooltip={t('SMAPI suggests updating this mod to {{update}}. '
extensions/games/game-stardewvalley/CompatibilityIcon.tsx:49:      tooltip={mod.attributes?.compatibilityMessage ?? t('No information')}
extensions/games/game-stardewvalley/configMod.js:232:            api.events.emit('create-mod', profile.gameId, mod, (error) => __awaiter(this, void 0, void 0, function* () {
extensions/games/game-stardewvalley/configMod.js:303:            yield api.emitAndAwait('deploy-single-mod', common_1.GAME_ID, configMod.mod.id, false);
extensions/games/game-stardewvalley/configMod.js:305:            yield api.emitAndAwait('deploy-single-mod', common_1.GAME_ID, configMod.mod.id, true);
extensions/games/game-stardewvalley/configMod.ts:230:    api.events.emit('create-mod', profile.gameId, mod, async (error) => {
extensions/games/game-stardewvalley/configMod.ts:312:    await api.emitAndAwait('deploy-single-mod', GAME_ID, configMod.mod.id, false);
extensions/games/game-stardewvalley/configMod.ts:314:    await api.emitAndAwait('deploy-single-mod', GAME_ID, configMod.mod.id, true); 
extensions/games/game-stardewvalley/index.js:610:    context.registerTest('sdv-incompatible-mods', 'gamemode-activated', () => bluebird_1.default.resolve((0, tests_1.testSMAPIOutdated)(context.api, dependencyManager)));
extensions/games/game-stardewvalley/index.js:613:        context.api.setStylesheet('sdv', path.join(__dirname, 'sdvstyle.scss'));
extensions/games/game-stardewvalley/index.ts:820:  context.registerTest('sdv-missing-dependencies', 'gamemode-activated',
extensions/games/game-stardewvalley/index.ts:823:  context.registerTest('sdv-incompatible-mods', 'gamemode-activated',
extensions/games/game-stardewvalley/index.ts:828:    context.api.setStylesheet('sdv', path.join(__dirname, 'sdvstyle.scss'));
extensions/games/game-stardewvalley/Settings.js:27:    return (react_1.default.createElement("form", null,
extensions/games/game-stardewvalley/Settings.js:31:                    react_1.default.createElement(react_bootstrap_1.ControlLabel, null, t('Stardew Valley')),
extensions/games/game-stardewvalley/Settings.js:33:                        t('Use recommendations from the mod manifests'),
extensions/games/game-stardewvalley/Settings.js:34:                        react_1.default.createElement(vortex_api_1.More, { id: 'sdv_use_recommendations', name: 'SDV Use Recommendations' }, t('If checked, when you install a mod for Stardew Valley you may get '
extensions/games/game-stardewvalley/Settings.js:39:                        t('Manage SDV mod configuration files'),
extensions/games/game-stardewvalley/Settings.js:40:                        react_1.default.createElement(vortex_api_1.More, { id: 'sdv_mod_configuration', name: 'SDV Mod Configuration' }, t('Vortex by default is configured to attempt to pull-in newly created files (mod configuration json files for example) '
extensions/games/game-stardewvalley/Settings.tsx:39:            <ControlLabel>{t('Stardew Valley')}</ControlLabel>
extensions/games/game-stardewvalley/Settings.tsx:45:              {t('Use recommendations from the mod manifests')}
extensions/games/game-stardewvalley/Settings.tsx:47:                {t('If checked, when you install a mod for Stardew Valley you may get '
extensions/games/game-stardewvalley/Settings.tsx:54:              {t('Manage SDV mod configuration files')}
extensions/games/game-stardewvalley/Settings.tsx:56:                {t('Vortex by default is configured to attempt to pull-in newly created files (mod configuration json files for example) '
extensions/games/game-stardewvalley/SMAPI.js:50:        yield vortex_api_1.util.toPromise(cb => api.events.emit('deploy-mods', cb));
extensions/games/game-stardewvalley/SMAPI.js:51:        yield vortex_api_1.util.toPromise(cb => api.events.emit('start-quick-discovery', () => cb(null)));
extensions/games/game-stardewvalley/SMAPI.js:87:            const dlId = yield vortex_api_1.util.toPromise(cb => api.events.emit('start-download', [nxmUrl], dlInfo, undefined, cb, undefined, { allowInstall: false }));
extensions/games/game-stardewvalley/SMAPI.js:88:            const modId = yield vortex_api_1.util.toPromise(cb => api.events.emit('start-install-download', dlId, { allowAutoEnable: false }, cb));
extensions/games/game-stardewvalley/SMAPI.ts:37:  await util.toPromise(cb => api.events.emit('deploy-mods', cb));
extensions/games/game-stardewvalley/SMAPI.ts:38:  await util.toPromise(cb => api.events.emit('start-quick-discovery', () => cb(null)));
extensions/games/game-stardewvalley/SMAPI.ts:81:      api.events.emit('start-download', [nxmUrl], dlInfo, undefined, cb, undefined, { allowInstall: false }));
extensions/games/game-stardewvalley/SMAPI.ts:83:      api.events.emit('start-install-download', dlId, { allowAutoEnable: false }, cb));
extensions/games/game-stardewvalley/tests.js:53:                    short: t('SMAPI update required'),
extensions/games/game-stardewvalley/tests.js:54:                    long: t('Some Stardew Valley mods require a newer version of SMAPI to function correctly, '
extensions/games/game-stardewvalley/tests.ts:49:        short: t('SMAPI update required'),
extensions/games/game-stardewvalley/tests.ts:50:        long: t('Some Stardew Valley mods require a newer version of SMAPI to function correctly, '
extensions/games/game-untitledgoose/migrations.js:23:        .then(() => context.api.emitAndAwait('purge-mods-in-path', statics_1.GAME_ID, '', modsPath));
extensions/games/game-untitledgoose/migrations.ts:48:    .then(() => context.api.emitAndAwait('purge-mods-in-path', GAME_ID, '', modsPath));
extensions/games/game-witcher3/common.js:79:        stream.on('end', () => resolve(hash.digest('hex')));
extensions/games/game-witcher3/common.ts:90:    stream.on('end', () => resolve(hash.digest('hex')));
extensions/games/game-witcher3/deprecated.ts:63://         text={priorityType === 'position-based' ? t('To Prefix Based') : t('To Position Based')}
extensions/games/game-witcher3/deprecated.ts:64://         tooltip={t('Changes priority assignment restrictions - prefix based is '
extensions/games/game-witcher3/eventHandlers.js:161:                    yield api.emitAndAwait('deploy-single-mod', common_1.GAME_ID, modId, true);
extensions/games/game-witcher3/eventHandlers.js:242:            message: t('Witcher Script merger may need to be executed', { ns: common_1.I18N_NAMESPACE }),
extensions/games/game-witcher3/eventHandlers.ts:130:            await api.emitAndAwait('deploy-single-mod', GAME_ID, modId, true);
extensions/games/game-witcher3/eventHandlers.ts:220:      message: t('Witcher Script merger may need to be executed', { ns: I18N_NAMESPACE }),
extensions/games/game-witcher3/index.js:160:    context.optional.registerCollectionFeature('witcher3_collection_data', (gameId, includedMods, collection) => (0, collections_1.genCollectionsData)(context, gameId, includedMods, collection), (gameId, collection) => (0, collections_1.parseCollectionsData)(context, gameId, collection), () => Promise.resolve(), (t) => t('Witcher 3 Data'), (state, gameId) => gameId === common_1.GAME_ID, CollectionsDataView_1.default);
extensions/games/game-witcher3/index.ts:188:    (t) => t('Witcher 3 Data'),
extensions/games/game-witcher3/index.ts:227:  // context.registerTest('tw3-mod-limit-breach', 'gamemode-activated',
extensions/games/game-witcher3/index.ts:229:  // context.registerTest('tw3-mod-limit-breach', 'mod-activated',
extensions/games/game-witcher3/loadOrder.js:131:            yield vortex_api_1.util.toPromise(cb => api.events.emit('deploy-mods', cb));
extensions/games/game-witcher3/loadOrder.tsx:137:    await util.toPromise(cb => api.events.emit('deploy-mods', cb));
extensions/games/game-witcher3/menumod.js:295:            api.events.emit('create-mod', profile.gameId, mod, (error) => __awaiter(this, void 0, void 0, function* () {
extensions/games/game-witcher3/menumod.js:313:            api.events.emit('remove-mod', profile.gameId, mod.id, (error) => __awaiter(this, void 0, void 0, function* () {
extensions/games/game-witcher3/menumod.ts:341:    api.events.emit('create-mod', profile.gameId, mod, async (error) => {
extensions/games/game-witcher3/menumod.ts:361:    api.events.emit('remove-mod', profile.gameId, mod.id, async (error) => {
extensions/games/game-witcher3/mergeBackup.js:121:                        bbcode: t('Vortex encountered a permissions related error while attempting '
extensions/games/game-witcher3/mergeBackup.ts:124:          bbcode: t('Vortex encountered a permissions related error while attempting '
extensions/games/game-witcher3/migrations.js:39:            message: t('Faulty Witcher 3 Mod Limit Patch detected'),
extensions/games/game-witcher3/migrations.js:46:                            text: t('Due to a bug, the mod limit patch was not applied correctly. '
extensions/games/game-witcher3/migrations.ts:31:    message: t('Faulty Witcher 3 Mod Limit Patch detected'),
extensions/games/game-witcher3/migrations.ts:38:            text: t('Due to a bug, the mod limit patch was not applied correctly. '
extensions/games/game-witcher3/modLimitPatch.js:71:                this.mApi.events.emit('remove-mod', common_1.GAME_ID, modName);
extensions/games/game-witcher3/modLimitPatch.js:78:        return t('Witcher 3 is restricted to 192 file handles which is quickly reached when '
extensions/games/game-witcher3/modLimitPatch.js:125:            this.mApi.events.emit('create-mod', common_1.GAME_ID, mod, (error) => __awaiter(this, void 0, void 0, function* () {
extensions/games/game-witcher3/modLimitPatch.ts:70:      this.mApi.events.emit('remove-mod', GAME_ID, modName);
extensions/games/game-witcher3/modLimitPatch.ts:78:    return t('Witcher 3 is restricted to 192 file handles which is quickly reached when '
extensions/games/game-witcher3/modLimitPatch.ts:128:      this.mApi.events.emit('create-mod', GAME_ID, mod, async (error) => {
extensions/games/game-witcher3/scriptmerger.js:109:                    const trimmedVersion = execVersion.split('.').slice(0, 3).join('.');
extensions/games/game-witcher3/scriptmerger.js:447:            replaceElement('GameDirectory', gameRootPath);
extensions/games/game-witcher3/scriptmerger.js:448:            replaceElement('VanillaScriptsDirectory', path_1.default.join(gameRootPath, 'content', 'content0', 'scripts'));
extensions/games/game-witcher3/scriptmerger.js:449:            replaceElement('ModsDirectory', path_1.default.join(gameRootPath, 'mods'));
extensions/games/game-witcher3/scriptmerger.ts:108:          const trimmedVersion = execVersion.split('.').slice(0, 3).join('.');
extensions/games/game-witcher3/scriptmerger.ts:461:    replaceElement('GameDirectory', gameRootPath);
extensions/games/game-witcher3/scriptmerger.ts:462:    replaceElement('VanillaScriptsDirectory', path.join(gameRootPath, 'content', 'content0', 'scripts'));
extensions/games/game-witcher3/scriptmerger.ts:463:    replaceElement('ModsDirectory', path.join(gameRootPath, 'mods'));
extensions/games/game-witcher3/tests.js:37:                    short: t('Mod Limit Reached'),
extensions/games/game-witcher3/tests.ts:35:        short: t('Mod Limit Reached'),
extensions/games/game-witcher3/views/CollectionsDataView.js:57:                    t('You can make changes to this data from the '),
extensions/games/game-witcher3/views/CollectionsDataView.js:58:                    React.createElement("a", { className: 'fake-link', onClick: this.openLoadOrderPage, title: t('Go to Load Order Page') }, t('Load Order page.')),
extensions/games/game-witcher3/views/CollectionsDataView.js:59:                    t(' If you believe a load order entry is missing, please ensure the '
extensions/games/game-witcher3/views/CollectionsDataView.js:63:            this.context.api.events.emit('show-main-page', 'generic-loadorder');
extensions/games/game-witcher3/views/CollectionsDataView.js:67:            return (React.createElement(react_bootstrap_1.Button, { id: 'btn-more-mods', className: 'collection-add-mods-btn', onClick: this.openLoadOrderPage, bsStyle: 'ghost' }, t('Open Load Order Page')));
extensions/games/game-witcher3/views/CollectionsDataView.js:71:            return (React.createElement(vortex_api_1.EmptyPlaceholder, { icon: 'sort-none', text: t('You have no load order entries (for the current mods in the collection)'), subtext: this.renderOpenLOButton() }));
extensions/games/game-witcher3/views/CollectionsDataView.js:82:                    React.createElement("p", { className: 'load-order-index' }, index + 1),
extensions/games/game-witcher3/views/CollectionsDataView.js:83:                    React.createElement("p", null, name))));
extensions/games/game-witcher3/views/CollectionsDataView.js:98:            ? (React.createElement("div", { style: { overflow: 'auto' } },
extensions/games/game-witcher3/views/CollectionsDataView.js:99:                React.createElement("h4", null, t('Witcher 3 Merged Data')),
extensions/games/game-witcher3/views/CollectionsDataView.js:100:                React.createElement("p", null, t('The Witcher 3 game extension executes a series of file merges for UI/menu mods '
extensions/games/game-witcher3/views/CollectionsDataView.js:106:                React.createElement("p", null, t('Additionally - please remember that any script merges (if applicable) done '
extensions/games/game-witcher3/views/CollectionsDataView.js:111:                React.createElement("h4", null, t('Load Order')),
extensions/games/game-witcher3/views/CollectionsDataView.js:112:                React.createElement("p", null, t('This is a snapshot of the load order information that '
extensions/games/game-witcher3/views/CollectionsDataView.tsx:56:          <h4>{t('Witcher 3 Merged Data')}</h4>
extensions/games/game-witcher3/views/CollectionsDataView.tsx:58:          {t('The Witcher 3 game extension executes a series of file merges for UI/menu mods '
extensions/games/game-witcher3/views/CollectionsDataView.tsx:66:          {t('Additionally - please remember that any script merges (if applicable) done '
extensions/games/game-witcher3/views/CollectionsDataView.tsx:72:          <h4>{t('Load Order')}</h4>
extensions/games/game-witcher3/views/CollectionsDataView.tsx:74:          {t('This is a snapshot of the load order information that '
extensions/games/game-witcher3/views/CollectionsDataView.tsx:93:          {t('You can make changes to this data from the ')}
extensions/games/game-witcher3/views/CollectionsDataView.tsx:97:            title={t('Go to Load Order Page')}
extensions/games/game-witcher3/views/CollectionsDataView.tsx:99:            {t('Load Order page.')}
extensions/games/game-witcher3/views/CollectionsDataView.tsx:101:          {t(' If you believe a load order entry is missing, please ensure the '
extensions/games/game-witcher3/views/CollectionsDataView.tsx:109:    this.context.api.events.emit('show-main-page', 'generic-loadorder');
extensions/games/game-witcher3/views/CollectionsDataView.tsx:119:      {t('Open Load Order Page')}
extensions/games/game-witcher3/views/CollectionsDataView.tsx:128:        text={t('You have no load order entries (for the current mods in the collection)')}
extensions/games/game-witcher3/views/InfoComponent.js:48:    return (React.createElement("div", { style: { display: 'flex', flexDirection: 'column', gap: '12px', marginRight: '16px' } },
extensions/games/game-witcher3/views/InfoComponent.js:49:        React.createElement("div", null,
extensions/games/game-witcher3/views/InfoComponent.js:50:            React.createElement("p", null,
extensions/games/game-witcher3/views/InfoComponent.js:51:                t('You can adjust the load order for The Witcher 3 by dragging and dropping '
extensions/games/game-witcher3/views/InfoComponent.js:54:                React.createElement("a", { onClick: () => vortex_api_1.util.opn('https://wiki.nexusmods.com/index.php/Modding_The_Witcher_3_with_Vortex') }, t('Modding The Witcher 3 with Vortex.', { ns: common_1.I18N_NAMESPACE })))),
extensions/games/game-witcher3/views/InfoComponent.js:55:        React.createElement("div", { style: { height: '80%' } },
extensions/games/game-witcher3/views/InfoComponent.js:56:            React.createElement("p", null, t('Please note:', { ns: common_1.I18N_NAMESPACE })),
extensions/games/game-witcher3/views/InfoComponent.js:57:            React.createElement("ul", null,
extensions/games/game-witcher3/views/InfoComponent.js:58:                React.createElement("li", null, t('For Witcher 3, the mod with the lowest index number (by default, the mod sorted at the top) overrides mods with a higher index number.', { ns: common_1.I18N_NAMESPACE })),
extensions/games/game-witcher3/views/InfoComponent.js:59:                React.createElement("li", null, t('If you cannot see your mod in this load order, you may need to add it manually (see our wiki for details).', { ns: common_1.I18N_NAMESPACE })),
extensions/games/game-witcher3/views/InfoComponent.js:60:                React.createElement("li", null, t('When managing menu mods, mod settings changed inside the game will be detected by Vortex as external changes - that is expected, '
extensions/games/game-witcher3/views/InfoComponent.js:62:                React.createElement("li", null, t('Merges generated by the Witcher 3 Script merger must be loaded first and are locked in the first load order slot.', { ns: common_1.I18N_NAMESPACE }))),
extensions/games/game-witcher3/views/InfoComponent.js:63:            React.createElement(BS.Button, { onClick: () => toggleModsState(false), style: { marginBottom: '5px', width: 'min-content' } }, t('Disable All')),
extensions/games/game-witcher3/views/InfoComponent.js:64:            React.createElement("br", null),
extensions/games/game-witcher3/views/InfoComponent.js:65:            React.createElement(BS.Button, { onClick: () => toggleModsState(true), style: { marginBottom: '5px', width: 'min-content' } }, t('Enable All ')))));
extensions/games/game-witcher3/views/InfoComponent.tsx:24:            {t('You can adjust the load order for The Witcher 3 by dragging and dropping '
extensions/games/game-witcher3/views/InfoComponent.tsx:28:              {t('Modding The Witcher 3 with Vortex.', { ns: I18N_NAMESPACE })}
extensions/games/game-witcher3/views/InfoComponent.tsx:33:          <p>{t('Please note:', { ns: I18N_NAMESPACE })}</p>
extensions/games/game-witcher3/views/InfoComponent.tsx:35:            <li>{t('For Witcher 3, the mod with the lowest index number (by default, the mod sorted at the top) overrides mods with a higher index number.', { ns: I18N_NAMESPACE })}</li>
extensions/games/game-witcher3/views/InfoComponent.tsx:36:            <li>{t('If you cannot see your mod in this load order, you may need to add it manually (see our wiki for details).', { ns: I18N_NAMESPACE })}</li>
extensions/games/game-witcher3/views/InfoComponent.tsx:37:            <li>{t('When managing menu mods, mod settings changed inside the game will be detected by Vortex as external changes - that is expected, '
extensions/games/game-witcher3/views/InfoComponent.tsx:40:            <li>{t('Merges generated by the Witcher 3 Script merger must be loaded first and are locked in the first load order slot.', { ns: I18N_NAMESPACE })}</li>
extensions/games/game-witcher3/views/InfoComponent.tsx:46:            {t('Disable All')}
extensions/games/game-witcher3/views/InfoComponent.tsx:53:            {t('Enable All ')}
extensions/games/game-witcher3/views/ItemRenderer.js:80:        context.api.events.emit('show-main-page', 'Mods');
extensions/games/game-witcher3/views/ItemRenderer.js:82:    return item.loEntry.modId !== undefined ? (React.createElement(vortex_api_1.tooltip.IconButton, { className: 'witcher3-view-mod-icon', icon: 'open-ext', tooltip: t('View source Mod'), onClick: onClick })) : null;
extensions/games/game-witcher3/views/ItemRenderer.js:86:    return isExternal(item) ? (React.createElement("div", { className: 'load-order-unmanaged-banner' },
extensions/games/game-witcher3/views/ItemRenderer.js:88:        React.createElement("span", { className: 'external-text-area' }, t('Not managed by Vortex')))) : null;
extensions/games/game-witcher3/views/ItemRenderer.js:99:        classes = classes.concat(className.split(' '));
extensions/games/game-witcher3/views/ItemRenderer.js:102:        classes = classes.concat('external');
extensions/games/game-witcher3/views/ItemRenderer.js:128:        React.createElement("p", { className: 'load-order-name' }, key),
extensions/games/game-witcher3/views/ItemRenderer.tsx:75:    context.api.events.emit('show-main-page', 'Mods');
extensions/games/game-witcher3/views/ItemRenderer.tsx:81:      tooltip={t('View source Mod')}
extensions/games/game-witcher3/views/ItemRenderer.tsx:92:      <span className='external-text-area'>{t('Not managed by Vortex')}</span>
extensions/games/game-witcher3/views/ItemRenderer.tsx:106:    classes = classes.concat(className.split(' '));
extensions/games/game-witcher3/views/ItemRenderer.tsx:110:    classes = classes.concat('external');
extensions/games/game-wolcen/index.js:89: * @param {import('vortex-api/lib/types/IExtensionContext').IExtensionApi} api 
extensions/games/game-xcom2/index.js:295:    const arr = file.split('\n');
extensions/gamestore-xbox/src/index.ts:324:              const split = firstKeyName.split('!');
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:109:            {t('Feedback Responder - Where you can help investigate bugs you reported')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:138:          text={t('Issue details could not be fetched yet')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:160:                {t('Your response to')} #{currentIssue.number}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:192:            text={t('No Feedback Response Required')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:273:          tooltip={t('Remove')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:301:      return t('Please provide a response of at least {{minLength}} characters',
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:313:        title={t('Attach File')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:318:        <MenuItem eventKey='log'>{t('Vortex Log')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:319:        <MenuItem eventKey='netlog'>{t('Vortex Network Log')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:320:        <MenuItem eventKey='session'>{t('Vortex Session Log')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:321:        <MenuItem eventKey='settings'>{t('Application Settings')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:322:        <MenuItem eventKey='state'>{t('Application State')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:323:        <MenuItem eventKey='actions'>{t('Recent State Changes')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:324:        <MenuItem eventKey='custom'>{t('Attach File')}</MenuItem>
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:341:              {t('You are not logged in. Please include your username in your message to give us a '
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:346:              {t('If you send feedback anonymously we can not give you updates on your report '
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:355:            tooltip={t('Close')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:358:            {t('Close')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:365:            tooltip={t('Submit Feedback')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:371:            {t('Submit Feedback')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:394:          placeholder={t('Type your response here...')}
extensions/issue-tracker/src/FeedbackResponderDialog.tsx:553:    this.context.api.events.emit('submit-feedback',
extensions/issue-tracker/src/index.ts:14:  context.registerDashlet('Issues', 1, 2, 200, Issues,
extensions/issue-tracker/src/index.ts:22:    context.api.setStylesheet('issue-tracker',
extensions/issue-tracker/src/Issues.tsx:32:    api.events.emit('request-own-issues', (err: Error, issues: IIssue[]) => {
extensions/issue-tracker/src/Issues.tsx:98:      <Dashlet className='dashlet-issues' title={t('Your issues')}>
extensions/issue-tracker/src/Issues.tsx:102:          tooltip={t('Refresh Issues')}
extensions/issue-tracker/src/Issues.tsx:108:          tooltip={t('Open Issue Responder')}
extensions/issue-tracker/src/Issues.tsx:127:        text={t('No reported issues')}
extensions/issue-tracker/src/Issues.tsx:128:        subtext={t('Lucky you...')}
extensions/issue-tracker/src/Issues.tsx:136:      return <tooltip.Icon key='bug' name='bug' tooltip={t('Bug')} />;
extensions/issue-tracker/src/Issues.tsx:142:          tooltip={t('Feedback required')}
extensions/issue-tracker/src/Issues.tsx:161:      ? t('Closed')
extensions/issue-tracker/src/Issues.tsx:162:      : t('{{completion}}%{{planned}}', {
extensions/issue-tracker/src/Issues.tsx:166:            t(', planned for {{date}}', {
extensions/issue-tracker/src/Issues.tsx:181:        tooltip={t('Milestone: {{title}} ({{state}})', {
extensions/issue-tracker/src/Issues.tsx:211:          {issue.state === 'open' ? t('Open') : t('Closed')}
extensions/issue-tracker/src/Issues.tsx:234:          {t('{{ count }} comments', { count: issue.comments })}
extensions/issue-tracker/src/Issues.tsx:417:                message: t('Sent too many github API requests - try again later'),
extensions/local-gamesettings/src/index.ts:193:      api.emitAndAwait('bake-settings', profile.gameId, sortedMods, profile));
extensions/meta-editor/src/index.ts:111:    context.api.setStylesheet('meta-editor', path.join(__dirname, 'metaeditor.scss'));
extensions/meta-editor/src/views/MetaEditorDialog.tsx:79:              <ControlLabel>{t('File Name')}</ControlLabel>
extensions/meta-editor/src/views/MetaEditorDialog.tsx:89:              <ControlLabel>{t('File Version')}</ControlLabel>
extensions/meta-editor/src/views/MetaEditorDialog.tsx:100:              <ControlLabel>{t('Source URL')}</ControlLabel>
extensions/meta-editor/src/views/MetaEditorDialog.tsx:110:                {t('Rules')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:114:                  tooltip={t('Add')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:136:            tooltip={t('Cancel')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:139:            {t('Cancel')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:143:            tooltip={t('Save in local DB')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:146:            {t('Save')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:163:            tooltip={t('Remove')}
extensions/meta-editor/src/views/MetaEditorDialog.tsx:182:    const idSegmented = evt.currentTarget.id.split('-');
extensions/meta-editor/src/views/MetaEditorIcon.tsx:32:        text={t('View Meta Data')}
extensions/meta-editor/src/views/RuleEditor.tsx:58:              <ControlLabel>{t('Rule Type')}</ControlLabel>
extensions/meta-editor/src/views/RuleEditor.tsx:60:                <option value='before'>{t('Always load before')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:61:                <option value='after'>{t('Always load after')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:62:                <option value='requires'>{t('Requires')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:63:                <option value='conflicts'>{t('Conflicts')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:64:                <option value='recommends'>{t('Recommends')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:65:                <option value='provides'>{t('Provides the same as')}</option>
extensions/meta-editor/src/views/RuleEditor.tsx:78:            {t('Browse')}
extensions/meta-editor/src/views/RuleEditor.tsx:83:            {t('Cancel')}
extensions/meta-editor/src/views/RuleEditor.tsx:86:            {t('Save')}
extensions/meta-editor/src/views/RuleEditor.tsx:99:          <ControlLabel>{t('Mod ID')}</ControlLabel>
extensions/meta-editor/src/views/RuleEditor.tsx:107:          <ControlLabel>{t('Logical File Name')}</ControlLabel>
extensions/meta-editor/src/views/RuleEditor.tsx:115:          <ControlLabel>{t('Version Match')}</ControlLabel>
extensions/meta-editor/src/views/RuleEditor.tsx:139:          <ControlLabel>{t('File Hash')}</ControlLabel>
extensions/mo-import/src/index.ts:38:    context.api.setStylesheet('mo-import', path.join(__dirname, 'mo-import.scss'));
extensions/mo-import/src/util/import.ts:60:              progress(mod.modName + ' (' + t('Archive') + ')', idx / len);
extensions/mo-import/src/util/readModEntries.ts:31:          ? ini.data.General.category.replace(/^"|"$/g, '').split(',')
extensions/mo-import/src/views/ImportDialog.tsx:84:            : t('Can\'t import mods from different game: {{gameId}}',
extensions/mo-import/src/views/ImportDialog.tsx:90:            t('No valid MO installation found at this location: {{error}}',
extensions/mo-import/src/views/ImportDialog.tsx:115:          <h2>{t('Mod Organizer (MO) Migration Tool')}</h2>
extensions/mo-import/src/views/ImportDialog.tsx:122:          {canCancel ? <Button onClick={this.cancel}>{t('Cancel')}</Button> : null}
extensions/mo-import/src/views/ImportDialog.tsx:140:          title={t('Start')}
extensions/mo-import/src/views/ImportDialog.tsx:141:          description={t('Introduction')}
extensions/mo-import/src/views/ImportDialog.tsx:146:          title={t('Setup')}
extensions/mo-import/src/views/ImportDialog.tsx:147:          description={t('Select Mods to import')}
extensions/mo-import/src/views/ImportDialog.tsx:152:          title={t('Import')}
extensions/mo-import/src/views/ImportDialog.tsx:153:          description={t('Magic happens')}
extensions/mo-import/src/views/ImportDialog.tsx:158:          title={t('Review')}
extensions/mo-import/src/views/ImportDialog.tsx:159:          description={t('Import result')}
extensions/mo-import/src/views/ImportDialog.tsx:190:        {t('This tool is an easy way of transferring your current '
extensions/mo-import/src/views/ImportDialog.tsx:193:          {t('Before you continue, please take note of a few things:')}
extensions/mo-import/src/views/ImportDialog.tsx:195:            <li>{t('Mods will be copied from MO to Vortex. This may take a while.')}</li>
extensions/mo-import/src/views/ImportDialog.tsx:196:            <li>{t('Your original MO installation is not modified.')}</li>
extensions/mo-import/src/views/ImportDialog.tsx:197:            <li>{t('Please make sure you have enough disk space to copy the selected mods.')}</li>
extensions/mo-import/src/views/ImportDialog.tsx:205:                {t('Select a MO2 instance...')}
extensions/mo-import/src/views/ImportDialog.tsx:209:                {t('... or browse for a MO1 or portable MO2 install')}
extensions/mo-import/src/views/ImportDialog.tsx:225:          <span>{t('No global instances for this this game')}</span>
extensions/mo-import/src/views/ImportDialog.tsx:234:          title={t('MO2 Instances')}
extensions/mo-import/src/views/ImportDialog.tsx:259:              tooltip={t('Browse')}
extensions/mo-import/src/views/ImportDialog.tsx:291:            title={t('Imports only the archives referenced by imported mods')}
extensions/mo-import/src/views/ImportDialog.tsx:293:            {t('Import archives')}
extensions/mo-import/src/views/ImportDialog.tsx:310:        <span>{t('Currently importing: {{mod}}', {replace: { mod: progress.mod }})}</span>
extensions/mo-import/src/views/ImportDialog.tsx:326:                <Icon name='feedback-success' /> {t('Import successful')}
extensions/mo-import/src/views/ImportDialog.tsx:330:                <Icon name='feedback-error' />{t('There were errors')}
extensions/mo-import/src/views/ImportDialog.tsx:335:          {t('You can review the log at')}
extensions/mo-import/src/views/ImportDialog.tsx:397:      case 'start': return t('Setup');
extensions/mo-import/src/views/ImportDialog.tsx:398:      case 'setup': return t('Start Import');
extensions/mo-import/src/views/ImportDialog.tsx:400:      case 'review': return t('Finish');
extensions/mo-import/src/views/ImportDialog.tsx:449:          t('No valid MO installation found at this location: {{error}}',
extensions/mo-import/src/views/ImportDialog.tsx:618:              tooltip={t('This mod is already managed by Vortex')}
extensions/mod-content/src/index.tsx:153:    context.api.setStylesheet('mod-content', path.join(__dirname, 'mod-content.scss'));
extensions/mod-content/src/index.tsx:163:    return (util as any).installIconSet('mod-content', path.join(__dirname, 'icons.svg'));
extensions/mod-content/src/ModContent.tsx:16:      ? <div className='mod-content-empty' >{t('Empty')}</div>
extensions/mod-dependency-manager/src/index.tsx:166:const purgeSingleMod = (api: types.IExtensionApi, gameMode: string, modId: string) => api.emitAndAwait('deploy-single-mod', gameMode, modId, false);
extensions/mod-dependency-manager/src/index.tsx:174:  api.events.emit('purge-mods', false, err => (err !== null)
extensions/mod-dependency-manager/src/index.tsx:413:      t('There are unresolved file conflicts. This just means that two or more mods contain the '
extensions/mod-dependency-manager/src/index.tsx:418:      '[tr]' + t('[td]{{modName}}[/td]'
extensions/mod-dependency-manager/src/index.tsx:429:        t('Unresolved file conflicts'), {
extensions/mod-dependency-manager/src/index.tsx:455:    case 'conflicts': return t('conflicts with');
extensions/mod-dependency-manager/src/index.tsx:456:    case 'requires': return t('requires');
extensions/mod-dependency-manager/src/index.tsx:521:        api.emitAndAwait('unfulfilled-rules', activeProfile.id, iter.modId, iter.rules)
extensions/mod-dependency-manager/src/index.tsx:536:          t('There are mod dependency rules that aren\'t fulfilled.'),
extensions/mod-dependency-manager/src/index.tsx:557:                api.events.emit('install-dependencies',
extensions/mod-dependency-manager/src/index.tsx:565:            t('Unresolved mod conflicts or requirements'), {
extensions/mod-dependency-manager/src/index.tsx:1017:    let md = t('The mod you {{enabled}} depends on other mods, do you want to {{enable}} those '
extensions/mod-dependency-manager/src/index.tsx:1020:          enabled: enabled ? t('enabled') : t('disabled'),
extensions/mod-dependency-manager/src/index.tsx:1021:          enable: enabled ? t('enable') : t('disable'),
extensions/mod-dependency-manager/src/index.tsx:1027:      md += t('This will only disable mods not required by something else but it may disable '
extensions/mod-dependency-manager/src/index.tsx:1032:      `* ${util.renderModName(mods[ic.id])}: ${t('{{count}} dependencies', { count: ic.count })}`)
extensions/mod-dependency-manager/src/index.tsx:1035:    return api.showDialog('question', t('Mod has dependencies', { count: dependents.length }), {
extensions/mod-dependency-manager/src/index.tsx:1049:          batch.push(actions.setAttributeSort('mods', 'dependencies', 'asc'));
extensions/mod-dependency-manager/src/index.tsx:1051:          api.events.emit('show-main-page', 'Mods');
extensions/mod-dependency-manager/src/index.tsx:1130:  api.setStylesheet('dependency-manager',
extensions/mod-dependency-manager/src/index.tsx:1279:        text={t('Manage Rules')}
extensions/mod-dependency-manager/src/index.tsx:1373:  context.registerTest('redundant-file-overrides',
extensions/mod-dependency-manager/src/index.tsx:1379:      await util.toPromise(cb => context.api.events.emit('purge-mods', true, cb));
extensions/mod-dependency-manager/src/unsolvedConflictsCheck.ts:30:    return api.showDialog('error', t('Unresolved Conflict'), {
extensions/mod-dependency-manager/src/unsolvedConflictsCheck.ts:31:      bbcode: t('You have unresolved file conflicts {{more}}. '
extensions/mod-dependency-manager/src/unsolvedConflictsCheck.ts:37:                more: `[More id='more-conflict' wikiId='file-conflicts' name='${t('Conflicts')}']${util.getText('mod', 'conflicts', t)}[/More]`,
extensions/mod-dependency-manager/src/util/DependenciesFilter.tsx:22:      { value: 'has-conflict', label: t('Conflict', { ns: NAMESPACE }) },
extensions/mod-dependency-manager/src/util/DependenciesFilter.tsx:23:      { value: 'has-unsolved', label: t('Unresolved', { ns: NAMESPACE }) },
extensions/mod-dependency-manager/src/util/DependenciesFilter.tsx:24:      { value: 'has-rule', label: t('LO Rule', { ns: NAMESPACE }) },
extensions/mod-dependency-manager/src/util/disableModTypeConflicts.ts:58:    ? [{ id: 'remove_file_overrides', text: t('Remove file overrides'), value: true }]
extensions/mod-dependency-manager/src/util/disableModTypeConflicts.ts:61:    ? t('You have {{total}} mod(s) with file overrides that are involved in a modtype conflict:\n',
extensions/mod-dependency-manager/src/util/genGraphStyle.ts:5:      const [id, type, key] = rule.selectorText.split(' ');
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:190:        modName = t('Multiple');
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:199:          placeholder={t('Search for a rule...')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:212:          {t('Conflicts haven\'t been calculated yet')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:217:        : (<EmptyPlaceholder icon='conflict' text={t('You have no file conflicts. Wow!')} />);
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:224:          tooltip={t('Unavailable when filters are applied')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:260:              {hideResolved ? t('Show Resolved') : t('Hide Resolved')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:264:            <Button onClick={this.close}>{t('Cancel')}</Button>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:265:            <Button onClick={this.save}>{t('Save')}</Button>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:282:    this.context.api.showDialog('question', t('Confirm'), {
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:283:      text: t('This change will only be applied once you choose to "Save" the change in the main '
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:320:    this.context.api.showDialog('question', t('Confirm'), {
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:321:      bbcode: t('Vortex can set some of the rules automatically based on the last modified date. '
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:470:          text={t('Filters are applied')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:471:          subtext={t('Please remove applied filters to view all conflicts')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:482:              <a data-modid={modId} data-action='before_all' onClick={this.applyGroupRule}>{t('Before All')}</a><span className='link-action-seperator'>&nbsp; | &nbsp;</span><a data-modid={modId} data-action='after_all' onClick={this.applyGroupRule}>{t('After All')}</a>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:512:    this.context.api.showDialog('question', t('Confirm'), {
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:618:          {t('Edit individual files')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:660:          {t('Load')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:677:              {conflict.suggestion === 'before' ? t('before (suggested)') : t('before')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:680:              {conflict.suggestion === 'after' ? t('after (suggested)') : t('after')}
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:682:            <option value='conflicts'>{t('never together with')}</option>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:691:                  t('{{ count }} conflicting file', {
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:709:            <option value='any'>{t('Any version')}</option>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:711:              ? <option value='compatible'>{t('Compatible version')}</option>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:714:              ? <option value='exact'>{t('Only this version')}</option>
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:733:        {t('{{ otherMod }} has a rule referencing {{ thisMod }}',
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:777:    this.context.api.showDialog('question', t('Confirm'), {
extensions/mod-dependency-manager/src/views/ConflictEditor.tsx:778:      text: t('This will remove the existing rule so you can set a new one on this mod.'),
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:168:        <Modal.Header><Modal.Title>{t('Cycle')}</Modal.Title></Modal.Header>
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:179:            <div>{t('This screen shows a cluster of mods that form one or more cycles.')}</div>
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:180:            <div>{t('Arrows can be read as "then" (A ->- B reads "A, then B"), meaning the mod the '
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:182:            <div>{t('If there are too many connections you can highlight a single cycle '
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:184:            <div>{t('You can resolve a cycle by either removing or flipping one rule, '
extensions/mod-dependency-manager/src/views/ConflictGraph.tsx:191:          <Button onClick={this.close}>{t('Close')}</Button>
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:94:        tooltip={t('Remove')}
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:108:      case 'before': renderString = t('Loads before'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:109:      case 'after': renderString = t('Loads after'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:110:      case 'requires': renderString = t('Requires'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:111:      case 'recommends': renderString = t('Recommends'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:112:      case 'conflicts': renderString = t('Conflicts with'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:113:      case 'provides': renderString = t('Provides'); break;
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:469:          {t('No rules')}
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:480:          tooltip={t('Drag to another mod to define dependency')}
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:514:        tooltip={t('This mod has files override the deploy order')}
extensions/mod-dependency-manager/src/views/DependencyIcon.tsx:544:    const tip = t('Conflicts with: {{conflicts}}', {
extensions/mod-dependency-manager/src/views/Editor.tsx:88:                <option value='before'>{t('Must deploy before')}</option>
extensions/mod-dependency-manager/src/views/Editor.tsx:89:                <option value='after'>{t('Must deploy after')}</option>
extensions/mod-dependency-manager/src/views/Editor.tsx:90:                <option value='requires'>{t('Requires')}</option>
extensions/mod-dependency-manager/src/views/Editor.tsx:92:                  {t('Conflicts with / Can\'t be deployed together with')}
extensions/mod-dependency-manager/src/views/Editor.tsx:99:          <Button onClick={this.close}>{t('Cancel')}</Button>
extensions/mod-dependency-manager/src/views/Editor.tsx:100:          <Button onClick={this.save}>{t('Save')}</Button>
extensions/mod-dependency-manager/src/views/Editor.tsx:120:            <Col sm={3} componentClass={ControlLabel}>{t('MD5')}</Col>
extensions/mod-dependency-manager/src/views/Editor.tsx:136:        ? null : t('Doesn\'t match the file name');
extensions/mod-dependency-manager/src/views/Editor.tsx:140:      ? <Col sm={3} componentClass={ControlLabel}>{t('Name')}</Col>
extensions/mod-dependency-manager/src/views/Editor.tsx:143:          {t('Name matching')}
extensions/mod-dependency-manager/src/views/Editor.tsx:144:          <More id='more-namematch-editor' name={t('Name matching')}>
extensions/mod-dependency-manager/src/views/Editor.tsx:145:            {util.getText('mod', 'namematch', t)}
extensions/mod-dependency-manager/src/views/Editor.tsx:157:      versionInvalid = t('Range invalid');
extensions/mod-dependency-manager/src/views/Editor.tsx:159:      versionInvalid = t('Doesn\'t match the mod');
extensions/mod-dependency-manager/src/views/Editor.tsx:161:      versionInvalid = t('Doesn\'t match the mod');
extensions/mod-dependency-manager/src/views/Editor.tsx:186:            {t('Version Match')}
extensions/mod-dependency-manager/src/views/Editor.tsx:187:            <More id='more-versionmatch-editor' name={t('Version matching')}>
extensions/mod-dependency-manager/src/views/Editor.tsx:188:              {util.getText('mod', 'versionmatch', t)}
extensions/mod-dependency-manager/src/views/ModNameWrapper.tsx:33:            batch.push(actions.setAttributeSort('mods', key, 'none'));
extensions/mod-dependency-manager/src/views/ModNameWrapper.tsx:38:      batch.push(actions.setAttributeSort('mods', 'dependencies', 'asc'));
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:163:            <div style={{ marginLeft: 8, display: 'inline' }}>{t('Sorting mods')}</div>
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:173:              {t('Mods were not sorted. You need to fix that before setting file overrides.')}
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:207:              <div>{t('Use this dialog to select which mod should provide a file.')}</div>
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:208:              <div>{t('The mod marked as "Default" is the one that will provide the '
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:210:              <div>{t('Please try to minimize the number of overrides you set up here. '
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:212:              <div>{t('This lists only the files in the selected mod that aren\'t exclusive '
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:227:          <Button onClick={this.close}>{t('Cancel')}</Button>
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:229:            {t('Save')}
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:335:        name += ` (${t('Default')})`;
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:343:        <a key='preview' data-row={rowInfo.path} onClick={this.preview}>{t('Preview')}</a>
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:381:    const path = pathStr.split(',');
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:409:      this.context.api.events.emit('preview-files', options);
extensions/mod-dependency-manager/src/views/OverrideEditor.tsx:436:      components.unshift('.');
extensions/mod-dependency-manager/src/views/ProgressFooter.tsx:25:        tooltip={t('Updating file conflicts')}
extensions/mod-dependency-manager/src/views/SearchBox.tsx:49:            placeholder={t('Search')}
extensions/mod-dependency-manager/src/views/SearchBox.tsx:55:            {t('{{ pos }} of {{ total }}', {
extensions/mod-dependency-manager/src/views/SearchBox.tsx:66:          tooltip={t('Prev')}
extensions/mod-dependency-manager/src/views/SearchBox.tsx:74:          tooltip={t('Next')}
extensions/mod-dependency-manager/src/views/Settings.tsx:33:        <ControlLabel>{t('Cross-ModType Conflicts Detection')}</ControlLabel>
extensions/mod-dependency-manager/src/views/Settings.tsx:36:            {t('Disabling this feature is not recommended. If you have ModType conflicts present in your mods setup, disabling this '
extensions/mod-dependency-manager/src/views/Settings.tsx:43:            {t('You have disabled Cross-ModType conflict detection on your system. Any conflicts across modtypes will '
extensions/mod-dependency-manager/src/views/Settings.tsx:51:          {t('Enable/Disable Cross-ModType conflict detection (A purge will execute upon change)')}
extensions/mod-highlight/src/index.tsx:71:    context.api.setStylesheet('mod-highlight', path.join(__dirname, 'mod-highlight.scss'));
extensions/mod-highlight/src/types/types.tsx:40:        title={t('Highlight Settings')}
extensions/mod-highlight/src/types/types.tsx:43:          <ControlLabel>{t('Select theme')}
extensions/mod-highlight/src/types/types.tsx:50:          <ControlLabel>{t('Select mod icon')}
extensions/mod-highlight/src/views/HighlightButton.tsx:66:          tooltip={t('Change Icon')}
extensions/mod-highlight/src/views/HighlightIconBar.tsx:54:          tooltip={t('Highlight your mods')}
extensions/mod-highlight/src/views/TextareaNotes.tsx:82:          ? t('Write your own notes on this mod')
extensions/mod-highlight/src/views/TextareaNotes.tsx:83:          : t('Multiple values')}
extensions/mod-report/src/index.ts:24:      err.stack.split('\n').slice(0, 1),
extensions/mod-report/src/index.ts:25:      stackErr.stack.split('\n').slice(1),
extensions/mod-report/src/index.ts:41:        return resolve(hash.digest('hex'));
extensions/modtype-bepinex/src/AttribDashlet.tsx:18:        title={t('Support for this game is made possible using the Bepis Injector Extensible tool (BepInEx)')}
extensions/modtype-bepinex/src/AttribDashlet.tsx:22:          {t('Special thanks to {{author}} for developing this tool, and all its contributors: {{nl}}"{{contributors}}"',
extensions/modtype-bepinex/src/AttribDashlet.tsx:26:          {t('BepInEx lives here: ')}
extensions/modtype-bepinex/src/bepInExDownloader.ts:41:        api.events.emit('start-install-download', downloadId, true, (err, modId) => {
extensions/modtype-bepinex/src/bepInExDownloader.ts:69:  return api.emitAndAwait('nexus-download',
extensions/modtype-bepinex/src/bepInExDownloader.ts:213:    bbcode: t('The {{game}} game extension requires a widely used 3rd party assembly '
extensions/modtype-bepinex/src/bepInExDownloader.ts:236://   const instructions = t('Once you allow Vortex to browse to GitHub - '
extensions/modtype-bepinex/src/bepInExDownloader.ts:239://     api.emitAndAwait('browse-for-download', dlInfo.githubUrl, instructions)
extensions/modtype-bepinex/src/bepInExDownloader.ts:248://         api.events.emit('start-download', [result[0]], {}, undefined,
extensions/modtype-bepinex/src/bepInExDownloader.ts:253://             api.events.emit('start-install-download', id, true, (err, modId) => {
extensions/modtype-bepinex/src/githubDownloader.ts:172:  api.events.emit('start-download', [redirectionURL], dlInfo, undefined,
extensions/modtype-bepinex/src/githubDownloader.ts:186:      api.events.emit('start-install-download', id, true, (err, modId) => {
extensions/modtype-bepinex/src/index.ts:166:  context.registerDashlet('BepInEx Support', 1, 2, 250, AttribDashlet,
extensions/modtype-bepinex/src/index.ts:222:  context.registerTest('bepinex-config-test', 'gamemode-activated',
extensions/modtype-bepinex/src/index.ts:230:  context.registerTest('doorstop-config-test', 'gamemode-activated',
extensions/modtype-bepinex/src/index.ts:311:        ? t('The "{{game}}" game extension requires a widely used 3rd party assembly '
extensions/modtype-bepinex/src/index.ts:320:        : t('The "{{game}}" game extension requires a widely used 3rd party assembly '
extensions/modtype-dazip/src/migrations.ts:34:    .then(() => context.api.emitAndAwait('purge-mods-in-path', da2Game.id, 'dazip', modsPath))
extensions/modtype-umm/src/index.ts:140:  context.registerDashlet('UMM Support', 1, 2, 250, AttribDashlet,
extensions/modtype-umm/src/ummDownloader.ts:57:        bbcode: t('The {{game}} game extension requires a 3rd party mod '
extensions/modtype-umm/src/ummDownloader.ts:92:  const instructions = t('Once you allow Vortex to browse to GitHub - '
extensions/modtype-umm/src/ummDownloader.ts:95:    api.emitAndAwait('browse-for-download', dlInfo.githubUrl, instructions)
extensions/modtype-umm/src/ummDownloader.ts:104:        api.events.emit('start-download', [result[0]], {}, undefined,
extensions/modtype-umm/src/ummDownloader.ts:171:        api.events.emit('start-install-download', downloadId, true, (err, modId) => {
extensions/modtype-umm/src/ummDownloader.ts:227:  return api.emitAndAwait('nexus-download', domainId, modId, fileId, archiveName, allowAutoInstall)
extensions/modtype-umm/src/views/AttribDashlet.tsx:12:        title={t('Support for this game is made possible using the Unity Mod Manager tool (UMM)')}
extensions/modtype-umm/src/views/AttribDashlet.tsx:16:          {t('Special thanks to {{author}} and all other UMM contributors for developing this tool',
extensions/modtype-umm/src/views/AttribDashlet.tsx:20:          {t('UMM lives here: ')}
extensions/morrowind-plugin-management/src/index.ts:129:    context.api.setStylesheet('morrowind-plugin-management',
extensions/morrowind-plugin-management/src/PluginEntry.tsx:17:      classes = classes.concat(className.split(' '));
extensions/morrowind-plugin-management/src/PluginList.tsx:36:                        <h4>{t('Enabled')}</h4>
extensions/morrowind-plugin-management/src/PluginList.tsx:51:                        <h4>{t('Disabled')}</h4>
extensions/mtframework-arc-support/src/ARCWrapper.ts:90:    input.split('\n').forEach(line => {
extensions/mtframework-arc-support/src/ARCWrapper.ts:91:      const arr = line.trim().split('=');
extensions/mtframework-arc-support/src/ARCWrapper.ts:166:        const lines = data.toString().split('\n');
extensions/mtframework-arc-support/src/ARCWrapper.ts:175:        data.toString().split('\n').forEach(line => errorLines.push(line));
extensions/mtframework-arc-support/src/AttribDashlet.tsx:16:        title={t('Support for this game is made possible using ARCtool')}
extensions/mtframework-arc-support/src/AttribDashlet.tsx:19:        <div>{t('Shared with kind permission by {{author}}',
extensions/mtframework-arc-support/src/AttribDashlet.tsx:23:          {t('Official Release Thread: ')}
extensions/mtframework-arc-support/src/AttribDashlet.tsx:27:          {t('Newest version is always available at: ')}
extensions/mtframework-arc-support/src/index.ts:67:  context.registerDashlet('ARC Support', 1, 2, 250, AttribDashlet, isSupported, () => ({}), undefined);
extensions/new-file-monitor/src/index.ts:266:          await api.emitAndAwait('added-files', profileId, added.map(filePath => {
extensions/new-file-monitor/src/index.ts:275:          await api.emitAndAwait('removed-files', profileId, removed.map(filePath => {
extensions/new-file-monitor/src/index.ts:366:    setTitle(t('Creating snapshots', { ns: NAMESPACE }));
extensions/nmm-import-tool/src/importedModAttributes.tsx:75:        tooltip={t('This archive is already managed by Vortex')}
extensions/nmm-import-tool/src/index.ts:62:    context.api.events.emit('analytics-track-click-event', 'Dashboard', 'NMM Import');
extensions/nmm-import-tool/src/index.ts:66:    context.api.setStylesheet('nmm-import-tool', path.join(__dirname, 'import-tool.scss'));
extensions/nmm-import-tool/src/util/import.ts:31:      const fields = data.toString().split('@@');
extensions/nmm-import-tool/src/util/import.ts:149:            api.events.emit('did-import-downloads', importedArchives.map(arch => arch.archiveId));
extensions/nmm-import-tool/src/util/util.ts:100:      : Promise.reject(new Error(t('Vortex is unable to read/open one or more of '
extensions/nmm-import-tool/src/util/util.ts:120:        return resolve(hash.digest('hex'));
extensions/nmm-import-tool/src/util/util.ts:177:        const fields = data.toString().split('@@');
extensions/nmm-import-tool/src/views/ImportDialog.tsx:204:          <Modal.Title>{t('Nexus Mod Manager (NMM) Import Tool')}</Modal.Title>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:217:              {t('Vortex cannot validate NMM\'s mod/archive files - this usually occurs when '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:221:          {canCancel ? <Button onClick={this.cancel}>{t('Cancel')}</Button> : null}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:373:            t('{{rootPath}} - Size required: {{required}} / {{available}}', {
extensions/nmm-import-tool/src/views/ImportDialog.tsx:412:          title={t('Start')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:413:          description={t('Introduction')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:418:          title={t('Setup')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:419:          description={t('Select Mods to import')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:424:          title={t('Import')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:425:          description={t('Magic happens')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:430:          title={t('Review')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:431:          description={t('Import result')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:489:        <h4>{t('The import tool will:')}</h4>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:498:        <h4>{t('The import tool won’t:')}</h4>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:510:          {t('This is an import tool that allows you to bring your mod archives over from an '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:534:        {t('No NMM install found with mods for this game. ' +
extensions/nmm-import-tool/src/views/ImportDialog.tsx:545:        {t('If you have multiple instances of NMM installed you can select which one '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:585:          <h2>{t('Can\'t continue')}</h2>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:590:              <h4>{t('Please disable all mods in NMM')}</h4>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:592:                {t('NMM and Vortex would interfere with each other if they both '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:594:                {t('You don\'t have to uninstall the mods, just disable them.')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:601:              <h4>{t('Please close NMM')}</h4>
extensions/nmm-import-tool/src/views/ImportDialog.tsx:603:                {t('NMM needs to be closed during the import process and generally '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:613:            tooltip={busy ? t('Checking') : t('Check again')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:617:            {t('Check again')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:634:            {t('Calculating required disk space. Thank you for your patience.')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:636:          {t('Scanning: {{mod}}', { replace: { mod: progress.mod } })}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:642:            {t('Processing NMM cache information. Thank you for your patience.')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:644:          {t('Looking up archives..')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:692:          text={t('Importing Mods...')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:693:          subtext={t('This might take a while, please be patient')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:695:        {t('Currently importing: {{mod}}', { replace: { mod: progress.mod } })}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:711:          {t('Install imported mods')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:723:        {t('Your selected mod archives have been imported successfully. You can decide now ')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:724:        {t('whether you would like to start the installation for all imported mods,')} <br />
extensions/nmm-import-tool/src/views/ImportDialog.tsx:725:        {t('or whether you want to install these yourself at a later time.')}<br /><br />
extensions/nmm-import-tool/src/views/ImportDialog.tsx:741:                <Icon name='feedback-success' /> {t('Import successful')}<br />
extensions/nmm-import-tool/src/views/ImportDialog.tsx:745:                <Icon name='feedback-error' /> {t('There were errors')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:750:          {t('You can review the log at: ')}
extensions/nmm-import-tool/src/views/ImportDialog.tsx:769:      case 'start': return t('Next');
extensions/nmm-import-tool/src/views/ImportDialog.tsx:770:      case 'setup': return t('Start Import');
extensions/nmm-import-tool/src/views/ImportDialog.tsx:772:      case 'review': return t('Finish');
extensions/nmm-import-tool/src/views/ImportDialog.tsx:825:      this.context.api.events.emit('start-install-download', archiveId, true);
extensions/nmm-import-tool/src/views/ImportDialog.tsx:893:          ? t('"{{permFile}}" is access protected. Please ensure your account has '
extensions/nmm-import-tool/src/views/ImportDialog.tsx:919:      this.context.api.events.emit('autosort-plugins', false);
extensions/nmm-import-tool/src/views/ImportDialog.tsx:927:        this.context.api.events.emit('autosort-plugins', true);
extensions/nmm-import-tool/src/views/ImportDialog.tsx:956:          this.context.api.events.emit('enable-download-watch', false);
extensions/nmm-import-tool/src/views/ImportDialog.tsx:963:              this.context.api.events.emit('enable-download-watch', true);
extensions/nmm-import-tool/src/views/ImportDialog.tsx:969:          this.context.api.events.emit('enable-download-watch', true);
extensions/quickbms-support/src/AttribDashlet.tsx:15:        title={t('Support for this game is made possible using QuickBMS')}
extensions/quickbms-support/src/AttribDashlet.tsx:19:          {t('Special thanks to {{author}} for developing this tool',
extensions/quickbms-support/src/AttribDashlet.tsx:23:          {t('You can find the QBMS home page: ')}
extensions/quickbms-support/src/index.ts:195:  context.registerDashlet('QBMS Support', 1, 2, 250, AttribDashlet,
extensions/quickbms-support/src/quickbms.ts:37:  const lines = input.split('\n');
extensions/quickbms-support/src/quickbms.ts:63:    const arr = line.trim().split(' ').filter(entry => !!entry);
extensions/quickbms-support/src/quickbms.ts:222:      const formatted = data.toString().split('\n');
extensions/quickbms-support/src/quickbms.ts:234:      const formatted = data.toString().split('\n');
extensions/script-extender-error-check/src/index.ts:307:    context.api.setStylesheet('script-extender-error-check', path.join(__dirname, 'style.scss'));
extensions/script-extender-installer/src/githubDownloader.ts:210:  api.events.emit('start-download', [redirectionURL], dlInfo, undefined,
extensions/script-extender-installer/src/githubDownloader.ts:222:      api.events.emit('start-install-download', id, true, (err, modId) => {
extensions/script-extender-installer/src/index.ts:179:      //     long: t('Your primary tool/starter for this game is a Script Extender, but it appears to be misconfigured. '
extensions/script-extender-installer/src/index.ts:210:  context.registerTest('misconfigured-script-extender', 'gamemode-activated',
extensions/script-extender-installer/src/nexusModsDownloader.ts:74:    const versionBasic = version ? version.split('.').slice(0,3).join('.') : undefined;
extensions/script-extender-installer/src/nexusModsDownloader.ts:83:        if (modId) await api.emitAndAwait('deploy-single-mod', gameId, modId, true);
extensions/script-extender-installer/src/nexusModsDownloader.ts:85:        await api.emitAndAwait('discover-tools', gameId);
extensions/script-extender-installer/src/nexusModsDownloader.ts:204:            api.events.emit('start-download', [nxm], { game: gameId, name: gameSupport.name }, undefined,
extensions/script-extender-installer/src/nexusModsDownloader.ts:207:                api.events.emit('start-install-download', id, undefined, 
extensions/script-extender-installer/src/silverlockDownloader.ts:159:        t('To install {{name}}, download the latest 7z archive for {{gameName}}.',
extensions/script-extender-installer/src/silverlockDownloader.ts:167:        api.emitAndAwait('browse-for-download', gameSupportData.website, instructions)
extensions/script-extender-installer/src/silverlockDownloader.ts:173:        const downloadUrl = result[0].indexOf('<') ? result[0].split('<')[0] : result[0];
extensions/script-extender-installer/src/silverlockDownloader.ts:180:        api.events.emit('start-download', [downloadUrl], dlInfo, undefined,
extensions/script-extender-installer/src/silverlockDownloader.ts:196:        api.events.emit('start-install-download', id, true, async (err, modId) => {
extensions/script-extender-installer/src/silverlockDownloader.ts:225:        await api.emitAndAwait('deploy-single-mod', activeProfile.gameId, modId, true);
extensions/script-extender-installer/src/silverlockDownloader.ts:227:        await api.emitAndAwait('discover-tools', activeProfile.gameId);
extensions/script-extender-installer/src/silverlockDownloader.ts:250:        title: t('Script Extender Mismatch - {{file}}',
extensions/script-extender-installer/src/silverlockDownloader.ts:252:        message: t('Looks like you selected the wrong file. Please try again.'),
extensions/test-gameversion/src/gamesupport.ts:49:  const lhsArr = lhs.split('.').map(iter => parseInt(iter, 10));
extensions/test-gameversion/src/gamesupport.ts:50:  const rhsArr = rhs.split('.').map(iter => parseInt(iter, 10));
extensions/test-gameversion/src/index.ts:47:        short: t('Incompatible mods'),
extensions/test-gameversion/src/index.ts:48:        long: t('Some mods are incompatible with the current game version, '
extensions/test-gameversion/src/index.ts:79:        short: t('Game updated'),
extensions/test-gameversion/src/index.ts:110:  context.registerTest('game-version', 'gamemode-activated',
extensions/test-gameversion/src/index.ts:112:  context.registerTest('game-version', 'mod-installed',
extensions/test-setup/src/index.ts:28:          invalid = t('Vortex uninstall key is incomplete');
extensions/test-setup/src/index.ts:38:              invalid = t('Vortex uninstall path doesn\'t match current executable');
extensions/test-setup/src/index.ts:39:              extra = t('"{{value}}" vs "{{expected}}"', {
extensions/test-setup/src/index.ts:54:    invalid = t('No Vortex uninstall key');
extensions/test-setup/src/index.ts:58:    let long = t('The uninstall key for Vortex is missing or corrupted. This may lead to '
extensions/test-setup/src/index.ts:78:    context.registerTest('uninstall-entry', 'startup',
extensions/theme-switcher/src/index.ts:15:    api.setStylesheet('variables', undefined);
extensions/theme-switcher/src/index.ts:16:    api.setStylesheet('fonts', undefined);
extensions/theme-switcher/src/index.ts:17:    api.setStylesheet('style', undefined);
extensions/theme-switcher/src/index.ts:29:        .then(() => api.setStylesheet('variables', path.join(selected, 'variables')))
extensions/theme-switcher/src/index.ts:30:        .catch(() => api.setStylesheet('variables', undefined))
extensions/theme-switcher/src/index.ts:32:        .then(() => api.setStylesheet('details', path.join(selected, 'details')))
extensions/theme-switcher/src/index.ts:33:        .catch(() => api.setStylesheet('details', undefined))
extensions/theme-switcher/src/index.ts:35:        .then(() => api.setStylesheet('fonts', path.join(selected, 'fonts')))
extensions/theme-switcher/src/index.ts:36:        .catch(() => api.setStylesheet('fonts', undefined))
extensions/theme-switcher/src/index.ts:38:        .then(() => api.setStylesheet('style', path.join(selected, 'style')))
extensions/theme-switcher/src/index.ts:39:        .catch(() => api.setStylesheet('style', undefined));
extensions/theme-switcher/src/operations.ts:41:      api.events.emit('select-theme', themeName);
extensions/theme-switcher/src/operations.ts:45:        t('Unable to save theme'), err,
extensions/theme-switcher/src/operations.ts:55:  api.events.emit('select-theme', theme);
extensions/theme-switcher/src/operations.ts:68:    api.events.emit('analytics-track-click-event', 'Themes', 'Clone theme');
extensions/theme-switcher/src/operations.ts:83:        t('Failed to read theme directory'),
extensions/theme-switcher/src/operations.ts:90:    // cloneTheme(api, themeName, themes, t('Name already used.'));
extensions/theme-switcher/src/operations.ts:105:      data.toString('utf-8').split('\r\n').forEach(line => {
extensions/theme-switcher/src/operations.ts:106:        const [key, value] = line.split(':');
extensions/theme-switcher/src/SettingsTheme.tsx:87:            <ControlLabel>{t('Theme')}</ControlLabel>
extensions/theme-switcher/src/SettingsTheme.tsx:100:                <Button bsStyle='primary' onClick={this.onClone} >{t('Clone')}</Button>
extensions/theme-switcher/src/SettingsTheme.tsx:102:                  ? <Button bsStyle='primary' onClick={this.remove}>{t('Remove')}</Button>
extensions/theme-switcher/src/SettingsTheme.tsx:108:                {t('Please clone this theme to modify it.')}
extensions/theme-switcher/src/SettingsTheme.tsx:128:              tooltip={t('Reload')}
extensions/theme-switcher/src/SettingsTheme.tsx:214:    onShowDialog('question', t('Confirm removal'), {
extensions/theme-switcher/src/SettingsTheme.tsx:215:      text: t('Are you sure you want to remove the theme "{{theme}}"', {
extensions/theme-switcher/src/SettingsTheme.tsx:230:    this.context.api.events.emit('analytics-track-click-event', 'Themes', 'Select theme');
extensions/theme-switcher/src/ThemeEditor.tsx:233:              <ControlLabel>{t('Font Size:')} {fontSize}</ControlLabel>
extensions/theme-switcher/src/ThemeEditor.tsx:248:              <ControlLabel>{t('Margins:')}</ControlLabel>
extensions/theme-switcher/src/ThemeEditor.tsx:263:              <ControlLabel>{t('Font Family:')}</ControlLabel>
extensions/theme-switcher/src/ThemeEditor.tsx:276:              <Button onClick={this.readFont}>{t('Read system fonts')}</Button>
extensions/theme-switcher/src/ThemeEditor.tsx:277:              <More id='more-system-fonts' name={t('System Fonts')}>
extensions/theme-switcher/src/ThemeEditor.tsx:278:                {t('Makes all system fonts installed on the system available in the Font dropdowns. '
extensions/theme-switcher/src/ThemeEditor.tsx:288:                {t('The quick brown fox jumps over the lazy dog')}
extensions/theme-switcher/src/ThemeEditor.tsx:294:              <ControlLabel>{t('Font Family (Headings):')}</ControlLabel>
extensions/theme-switcher/src/ThemeEditor.tsx:316:                {t('The quick brown fox jumps over the lazy dog')}
extensions/theme-switcher/src/ThemeEditor.tsx:323:                {t('Dashlet Height:')} {dashletHeight}px
extensions/theme-switcher/src/ThemeEditor.tsx:324:                <More id='more-dashlet-height' name={t('Dashlet Height')}>
extensions/theme-switcher/src/ThemeEditor.tsx:325:                  {t('Every dashlet (the widgets on the Dashboards) has a height that is a '
extensions/theme-switcher/src/ThemeEditor.tsx:348:                {t('Titlebar Rows:')} {titlebarRows}
extensions/theme-switcher/src/ThemeEditor.tsx:382:          {t('Dark Theme')}
extensions/theme-switcher/src/ThemeEditor.tsx:383:          <More id='more-dark-theme' name={t('Dark Theme')}>
extensions/theme-switcher/src/ThemeEditor.tsx:384:            {t('When this is enabled, grays are essentially inverted, so a light gray becomes '
extensions/theme-switcher/src/ThemeEditor.tsx:390:        {disabled ? null : <a onClick={this.editManually}>{t('Edit CSS manually...')}</a>}
extensions/theme-switcher/src/ThemeEditor.tsx:393:            <Button bsStyle='primary' onClick={this.revert}>{t('Revert')}</Button>
extensions/theme-switcher/src/ThemeEditor.tsx:394:            <Button bsStyle='primary' onClick={this.apply}>{t('Apply')}</Button>
extensions/titlebar-launcher/src/index.tsx:65:    context.api.setStylesheet('titlebar-launcher', path.join(__dirname, 'titlebar-launcher.scss'));
extensions/titlebar-launcher/src/TitlebarToggle.tsx:33:      context.api.events.emit('analytics-track-click-event', 'Tools', 'Added to Titlebar');
extensions/titlebar-launcher/src/TitlebarToggle.tsx:49:      <p className='titlebar-tools-toggle-text'>{t('Enable toolbar')}</p>
extensions/titlebar-launcher/src/ToolStarter.tsx:70:    api.events.emit('analytics-track-click-event', 'Tools', 'Manually ran tool');
